	.section	__TEXT,__text,regular,pure_instructions
	.macosx_version_min 10, 7
	.intel_syntax noprefix
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h041385a07b035670E:
Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception0
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB0_4
	add	rsi, rsi
	jb	LBB0_7
	lea	rdi, [rbx + 256]
Ltmp0:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp1:
	mov	rsi, qword ptr [rbx + 272]
LBB0_4:
	sub	rsi, 1
	jb	LBB0_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3b384fef557a344aE]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp4:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp5:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp6:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hed49352b02a73d05E
Ltmp7:
LBB0_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB0_14
	jmp	LBB0_18
	.p2align	4, 0x90
LBB0_23:
Ltmp16:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp17:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB0_18
LBB0_14:
Ltmp14:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp15:
	test	rdx, rdx
	je	LBB0_16
	cmp	rax, r12
	jne	LBB0_23
	cmp	rdx, r13
	jne	LBB0_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB0_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB0_27
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp19:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hed49352b02a73d05E
Ltmp20:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB0_33
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp21:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp22:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB0_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB0_33
LBB0_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB0_18
Ltmp32:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp33:
LBB0_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB0_19
LBB0_33:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB0_19:
	test	rax, rax
	je	LBB0_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp35:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp36:
	jmp	LBB0_6
LBB0_5:
Ltmp40:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp41:
	jmp	LBB0_6
LBB0_35:
Ltmp37:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp38:
	jmp	LBB0_6
LBB0_7:
Ltmp2:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3:
	jmp	LBB0_6
LBB0_25:
Ltmp26:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp27:
	jmp	LBB0_6
LBB0_27:
Ltmp24:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp25:
LBB0_6:
	ud2
LBB0_46:
Ltmp39:
	jmp	LBB0_40
LBB0_38:
Ltmp34:
	jmp	LBB0_45
LBB0_36:
Ltmp23:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB0_34:
Ltmp28:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp29:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp30:
	jmp	LBB0_41
LBB0_39:
Ltmp31:
LBB0_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB0_10:
Ltmp8:
Ltmp9:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp10:
	test	rax, rax
	je	LBB0_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp11:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp12:
	jmp	LBB0_6
LBB0_44:
Ltmp13:
	jmp	LBB0_45
LBB0_42:
Ltmp42:
	jmp	LBB0_45
LBB0_37:
Ltmp18:
LBB0_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB0_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end0:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table0:
Lexception0:
	.byte	255
	.byte	155
	.uleb128 Lttbase0-Lttbaseref0
Lttbaseref0:
	.byte	1
	.uleb128 Lcst_end0-Lcst_begin0
Lcst_begin0:
	.uleb128 Ltmp0-Lfunc_begin0
	.uleb128 Ltmp5-Ltmp0
	.uleb128 Ltmp42-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp6-Lfunc_begin0
	.uleb128 Ltmp7-Ltmp6
	.uleb128 Ltmp8-Lfunc_begin0
	.byte	3
	.uleb128 Ltmp16-Lfunc_begin0
	.uleb128 Ltmp15-Ltmp16
	.uleb128 Ltmp18-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp19-Lfunc_begin0
	.uleb128 Ltmp20-Ltmp19
	.uleb128 Ltmp28-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp21-Lfunc_begin0
	.uleb128 Ltmp22-Ltmp21
	.uleb128 Ltmp23-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp32-Lfunc_begin0
	.uleb128 Ltmp33-Ltmp32
	.uleb128 Ltmp34-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp35-Lfunc_begin0
	.uleb128 Ltmp36-Ltmp35
	.uleb128 Ltmp39-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp40-Lfunc_begin0
	.uleb128 Ltmp41-Ltmp40
	.uleb128 Ltmp42-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp37-Lfunc_begin0
	.uleb128 Ltmp38-Ltmp37
	.uleb128 Ltmp39-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp2-Lfunc_begin0
	.uleb128 Ltmp3-Ltmp2
	.uleb128 Ltmp42-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp26-Lfunc_begin0
	.uleb128 Ltmp25-Ltmp26
	.uleb128 Ltmp28-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp25-Lfunc_begin0
	.uleb128 Ltmp29-Ltmp25
	.byte	0
	.byte	0
	.uleb128 Ltmp29-Lfunc_begin0
	.uleb128 Ltmp30-Ltmp29
	.uleb128 Ltmp31-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp30-Lfunc_begin0
	.uleb128 Ltmp9-Ltmp30
	.byte	0
	.byte	0
	.uleb128 Ltmp9-Lfunc_begin0
	.uleb128 Ltmp10-Ltmp9
	.uleb128 Ltmp42-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp11-Lfunc_begin0
	.uleb128 Ltmp12-Ltmp11
	.uleb128 Ltmp13-Lfunc_begin0
	.byte	0
	.uleb128 Ltmp12-Lfunc_begin0
	.uleb128 Lfunc_end0-Ltmp12
	.byte	0
	.byte	0
Lcst_end0:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase0:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h0e4d76409498170dE:
Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception1
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB1_4
	add	rsi, rsi
	jb	LBB1_7
	lea	rdi, [rbx + 256]
Ltmp43:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp44:
	mov	rsi, qword ptr [rbx + 272]
LBB1_4:
	sub	rsi, 1
	jb	LBB1_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17had42af0063276cb6E]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp47:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp48:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp49:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hd00cebf084920e92E
Ltmp50:
LBB1_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB1_14
	jmp	LBB1_18
	.p2align	4, 0x90
LBB1_23:
Ltmp59:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp60:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB1_18
LBB1_14:
Ltmp57:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp58:
	test	rdx, rdx
	je	LBB1_16
	cmp	rax, r12
	jne	LBB1_23
	cmp	rdx, r13
	jne	LBB1_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB1_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB1_27
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp62:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hd00cebf084920e92E
Ltmp63:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB1_33
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp64:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp65:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB1_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB1_33
LBB1_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB1_18
Ltmp75:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp76:
LBB1_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB1_19
LBB1_33:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB1_19:
	test	rax, rax
	je	LBB1_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp78:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp79:
	jmp	LBB1_6
LBB1_5:
Ltmp83:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp84:
	jmp	LBB1_6
LBB1_35:
Ltmp80:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp81:
	jmp	LBB1_6
LBB1_7:
Ltmp45:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp46:
	jmp	LBB1_6
LBB1_25:
Ltmp69:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp70:
	jmp	LBB1_6
LBB1_27:
Ltmp67:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp68:
LBB1_6:
	ud2
LBB1_46:
Ltmp82:
	jmp	LBB1_40
LBB1_38:
Ltmp77:
	jmp	LBB1_45
LBB1_36:
Ltmp66:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB1_34:
Ltmp71:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp72:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp73:
	jmp	LBB1_41
LBB1_39:
Ltmp74:
LBB1_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB1_10:
Ltmp51:
Ltmp52:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp53:
	test	rax, rax
	je	LBB1_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp54:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp55:
	jmp	LBB1_6
LBB1_44:
Ltmp56:
	jmp	LBB1_45
LBB1_42:
Ltmp85:
	jmp	LBB1_45
LBB1_37:
Ltmp61:
LBB1_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB1_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end1:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table1:
Lexception1:
	.byte	255
	.byte	155
	.uleb128 Lttbase1-Lttbaseref1
Lttbaseref1:
	.byte	1
	.uleb128 Lcst_end1-Lcst_begin1
Lcst_begin1:
	.uleb128 Ltmp43-Lfunc_begin1
	.uleb128 Ltmp48-Ltmp43
	.uleb128 Ltmp85-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp49-Lfunc_begin1
	.uleb128 Ltmp50-Ltmp49
	.uleb128 Ltmp51-Lfunc_begin1
	.byte	3
	.uleb128 Ltmp59-Lfunc_begin1
	.uleb128 Ltmp58-Ltmp59
	.uleb128 Ltmp61-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp62-Lfunc_begin1
	.uleb128 Ltmp63-Ltmp62
	.uleb128 Ltmp71-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp64-Lfunc_begin1
	.uleb128 Ltmp65-Ltmp64
	.uleb128 Ltmp66-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp75-Lfunc_begin1
	.uleb128 Ltmp76-Ltmp75
	.uleb128 Ltmp77-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp78-Lfunc_begin1
	.uleb128 Ltmp79-Ltmp78
	.uleb128 Ltmp82-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp83-Lfunc_begin1
	.uleb128 Ltmp84-Ltmp83
	.uleb128 Ltmp85-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp80-Lfunc_begin1
	.uleb128 Ltmp81-Ltmp80
	.uleb128 Ltmp82-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp45-Lfunc_begin1
	.uleb128 Ltmp46-Ltmp45
	.uleb128 Ltmp85-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp69-Lfunc_begin1
	.uleb128 Ltmp68-Ltmp69
	.uleb128 Ltmp71-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp68-Lfunc_begin1
	.uleb128 Ltmp72-Ltmp68
	.byte	0
	.byte	0
	.uleb128 Ltmp72-Lfunc_begin1
	.uleb128 Ltmp73-Ltmp72
	.uleb128 Ltmp74-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp73-Lfunc_begin1
	.uleb128 Ltmp52-Ltmp73
	.byte	0
	.byte	0
	.uleb128 Ltmp52-Lfunc_begin1
	.uleb128 Ltmp53-Ltmp52
	.uleb128 Ltmp85-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp54-Lfunc_begin1
	.uleb128 Ltmp55-Ltmp54
	.uleb128 Ltmp56-Lfunc_begin1
	.byte	0
	.uleb128 Ltmp55-Lfunc_begin1
	.uleb128 Lfunc_end1-Ltmp55
	.byte	0
	.byte	0
Lcst_end1:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase1:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h1585a60d47833e4bE:
Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception2
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 896
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	dword ptr [rsp + 60], ecx
	mov	r12, rdx
	mov	rbx, rsi
	mov	r15, rdi
	mov	byte ptr [rsp + 512], 0
	mov	rax, qword ptr [rsi]
	mov	rcx, qword ptr [rsi + 8]
	mov	qword ptr [rsp + 448], rax
	mov	qword ptr [rsp + 456], rcx
	mov	rax, qword ptr [rsi + 16]
	mov	qword ptr [rsp + 464], rax
	mov	rax, qword ptr [rsi + 24]
	mov	qword ptr [rsp + 472], rax
	mov	rax, qword ptr [rsi + 32]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsi + 40]
	mov	qword ptr [rsp + 488], rax
	mov	rax, qword ptr [rsi + 48]
	mov	qword ptr [rsp + 496], rax
	mov	rax, qword ptr [rsi + 56]
	mov	qword ptr [rsp + 504], rax
	mov	qword ptr [rsp + 320], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	jl	LBB2_4
	add	rsi, rsi
	jb	LBB2_7
	lea	rdi, [r12 + 256]
Ltmp86:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp87:
	mov	rsi, qword ptr [r12 + 272]
LBB2_4:
	sub	rsi, 1
	jb	LBB2_5
	mov	rax, qword ptr [r12 + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 320]
	mov	qword ptr [rax + rsi], r13
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h5699ec4aa7ef6fbfE]
	mov	qword ptr [rax + rsi + 8], rcx
	##MEMBARRIER
	mov	rax, qword ptr [r12 + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [r12 + 304]
	mov	rsi, qword ptr [r12 + 288]
Ltmp90:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp91:
	mov	rax, qword ptr [rbx + 88]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rbx + 80]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rbx + 112]
	mov	qword ptr [rsp + 112], rax
	mov	rax, qword ptr [rbx + 104]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [rbx + 96]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rbx + 64]
	mov	rcx, qword ptr [rbx + 72]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
	mov	r14d, dword ptr [rsp + 60]
	mov	byte ptr [rsp + 120], r14b
	movaps	xmm0, xmmword ptr [rsp + 80]
	movdqa	xmm1, xmmword ptr [rsp + 112]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movdqa	xmm3, xmmword ptr [rsp + 64]
	movq	rax, xmm3
	pshufd	xmm3, xmm3, 78
	movq	rdi, xmm3
	pshufd	xmm3, xmm2, 78
	pextrw	ecx, xmm1, 4
	xor	edx, edx
	test	cl, cl
	setne	dl
	mov	rsi, qword ptr [rax]
	mov	rcx, qword ptr [rdi]
	mov	r8, qword ptr [rdi + 8]
	movq	qword ptr [rsp + 192], xmm2
	movups	xmmword ptr [rsp + 176], xmm0
Ltmp92:
	movq	qword ptr [rsp + 8], xmm1
	movq	qword ptr [rsp], xmm3
	lea	rdi, [rsp + 576]
	lea	r9, [rsp + 176]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hc0f93965f531a381E
Ltmp93:
	movaps	xmm0, xmmword ptr [rsp + 576]
	movaps	xmmword ptr [rsp + 272], xmm0
	movaps	xmm0, xmmword ptr [rsp + 592]
	movaps	xmmword ptr [rsp + 256], xmm0
	movaps	xmm0, xmmword ptr [rsp + 608]
	movaps	xmmword ptr [rsp + 240], xmm0
	movaps	xmm0, xmmword ptr [rsp + 624]
	movaps	xmmword ptr [rsp + 224], xmm0
	lea	rbx, [rsp + 512]
	mov	al, byte ptr [rsp + 512]
	test	al, al
	je	LBB2_12
	jmp	LBB2_16
	.p2align	4, 0x90
LBB2_23:
Ltmp102:
	mov	rdi, r12
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp103:
	movzx	eax, byte ptr [rsp + 512]
	test	al, al
	jne	LBB2_16
LBB2_12:
Ltmp100:
	mov	rdi, r12
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp101:
	test	rdx, rdx
	je	LBB2_14
	cmp	rax, r13
	jne	LBB2_23
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h5699ec4aa7ef6fbfE]
	cmp	rdx, rcx
	jne	LBB2_23
	lea	rdi, [rsp + 576]
	lea	rsi, [rsp + 320]
	mov	edx, 256
	call	_memcpy
	mov	rsi, qword ptr [rsp + 704]
	mov	rcx, qword ptr [rsp + 712]
	mov	rax, qword ptr [rsp + 720]
	mov	rdx, qword ptr [rsp + 728]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 744]
	mov	qword ptr [rsp + 80], rdx
	test	rsi, rsi
	je	LBB2_25
	mov	r9, qword ptr [rsp + 752]
	mov	r10, qword ptr [rsp + 760]
	mov	rbx, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 312], rbx
	mov	rdx, qword ptr [rsp + 64]
	mov	rdi, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 304], rdi
	mov	qword ptr [rsp + 296], rdx
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 208], rdi
	mov	qword ptr [rsp + 200], rdx
	mov	rsi, qword ptr [rsi]
	sub	rsi, qword ptr [rcx]
	jb	LBB2_33
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 192], rax
	mov	rax, qword ptr [rsp + 200]
	mov	rdx, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 184], rdx
	mov	qword ptr [rsp + 176], rax
Ltmp105:
	mov	qword ptr [rsp + 8], r10
	mov	qword ptr [rsp], r9
	movzx	edx, r14b
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 176]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hc0f93965f531a381E
Ltmp106:
	cmp	qword ptr [rsp + 576], 2
	jb	LBB2_32
	mov	r12, qword ptr [rsp + 584]
	mov	rbx, qword ptr [rsp + 592]
Ltmp107:
	mov	rdi, r12
	call	qword ptr [rbx]
Ltmp108:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB2_32
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r12
	call	___rust_dealloc
LBB2_32:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	jmp	LBB2_37
LBB2_14:
	mov	al, byte ptr [rsp + 512]
	test	al, al
	jne	LBB2_16
Ltmp118:
	mov	rdi, r12
	mov	rsi, rbx
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp119:
LBB2_16:
	mov	rax, qword ptr [rsp + 320]
	cmp	rax, 1
	jne	LBB2_17
	movaps	xmm0, xmmword ptr [rsp + 384]
	movaps	xmm1, xmmword ptr [rsp + 400]
	movaps	xmm2, xmmword ptr [rsp + 416]
	movaps	xmm3, xmmword ptr [rsp + 432]
LBB2_37:
	movaps	xmm4, xmmword ptr [rsp + 272]
	movaps	xmmword ptr [r15], xmm4
	movaps	xmm4, xmmword ptr [rsp + 256]
	movaps	xmmword ptr [r15 + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [r15 + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 224]
	movaps	xmmword ptr [r15 + 48], xmm4
	movaps	xmmword ptr [r15 + 64], xmm0
	movaps	xmmword ptr [r15 + 80], xmm1
	movaps	xmmword ptr [r15 + 96], xmm2
	movaps	xmmword ptr [r15 + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB2_17:
	test	rax, rax
	je	LBB2_35
	mov	rdi, qword ptr [rsp + 328]
	mov	rsi, qword ptr [rsp + 336]
Ltmp121:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp122:
	jmp	LBB2_6
LBB2_5:
Ltmp126:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp127:
	jmp	LBB2_6
LBB2_35:
Ltmp123:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp124:
	jmp	LBB2_6
LBB2_7:
Ltmp88:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp89:
	jmp	LBB2_6
LBB2_25:
Ltmp112:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp113:
	jmp	LBB2_6
LBB2_33:
Ltmp110:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp111:
	jmp	LBB2_6
LBB2_47:
Ltmp125:
	jmp	LBB2_42
LBB2_40:
Ltmp120:
	jmp	LBB2_46
LBB2_38:
Ltmp109:
	mov	r14, rax
	mov	rdi, r12
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB2_34:
Ltmp114:
	mov	r14, rax
Ltmp115:
	lea	rdi, [rsp + 576]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp116:
	jmp	LBB2_43
LBB2_41:
Ltmp117:
LBB2_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB2_19:
Ltmp94:
Ltmp95:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp96:
	mov	rcx, rdx
	lea	rsi, [rsp + 512]
Ltmp97:
	mov	rdi, r12
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp98:
LBB2_6:
	ud2
LBB2_45:
Ltmp99:
	jmp	LBB2_46
LBB2_44:
Ltmp128:
	jmp	LBB2_46
LBB2_39:
Ltmp104:
LBB2_46:
	mov	r14, rax
	lea	rdi, [rsp + 320]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB2_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end2:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table2:
Lexception2:
	.byte	255
	.byte	155
	.uleb128 Lttbase2-Lttbaseref2
Lttbaseref2:
	.byte	1
	.uleb128 Lcst_end2-Lcst_begin2
Lcst_begin2:
	.uleb128 Ltmp86-Lfunc_begin2
	.uleb128 Ltmp91-Ltmp86
	.uleb128 Ltmp128-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp92-Lfunc_begin2
	.uleb128 Ltmp93-Ltmp92
	.uleb128 Ltmp94-Lfunc_begin2
	.byte	3
	.uleb128 Ltmp102-Lfunc_begin2
	.uleb128 Ltmp101-Ltmp102
	.uleb128 Ltmp104-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp101-Lfunc_begin2
	.uleb128 Ltmp105-Ltmp101
	.byte	0
	.byte	0
	.uleb128 Ltmp105-Lfunc_begin2
	.uleb128 Ltmp106-Ltmp105
	.uleb128 Ltmp114-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp107-Lfunc_begin2
	.uleb128 Ltmp108-Ltmp107
	.uleb128 Ltmp109-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp118-Lfunc_begin2
	.uleb128 Ltmp119-Ltmp118
	.uleb128 Ltmp120-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp121-Lfunc_begin2
	.uleb128 Ltmp122-Ltmp121
	.uleb128 Ltmp125-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp126-Lfunc_begin2
	.uleb128 Ltmp127-Ltmp126
	.uleb128 Ltmp128-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp123-Lfunc_begin2
	.uleb128 Ltmp124-Ltmp123
	.uleb128 Ltmp125-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp88-Lfunc_begin2
	.uleb128 Ltmp89-Ltmp88
	.uleb128 Ltmp128-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp112-Lfunc_begin2
	.uleb128 Ltmp111-Ltmp112
	.uleb128 Ltmp114-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp111-Lfunc_begin2
	.uleb128 Ltmp115-Ltmp111
	.byte	0
	.byte	0
	.uleb128 Ltmp115-Lfunc_begin2
	.uleb128 Ltmp116-Ltmp115
	.uleb128 Ltmp117-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp116-Lfunc_begin2
	.uleb128 Ltmp95-Ltmp116
	.byte	0
	.byte	0
	.uleb128 Ltmp95-Lfunc_begin2
	.uleb128 Ltmp96-Ltmp95
	.uleb128 Ltmp128-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp97-Lfunc_begin2
	.uleb128 Ltmp98-Ltmp97
	.uleb128 Ltmp99-Lfunc_begin2
	.byte	0
	.uleb128 Ltmp98-Lfunc_begin2
	.uleb128 Lfunc_end2-Ltmp98
	.byte	0
	.byte	0
Lcst_end2:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase2:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h1ea365bec2d0444aE:
Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception3
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB3_4
	add	rsi, rsi
	jb	LBB3_7
	lea	rdi, [rbx + 256]
Ltmp129:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp130:
	mov	rsi, qword ptr [rbx + 272]
LBB3_4:
	sub	rsi, 1
	jb	LBB3_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h5695b4ea74fc43f6E]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp133:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp134:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp135:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h3da02ce22d6600afE
Ltmp136:
LBB3_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB3_14
	jmp	LBB3_18
	.p2align	4, 0x90
LBB3_23:
Ltmp145:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp146:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB3_18
LBB3_14:
Ltmp143:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp144:
	test	rdx, rdx
	je	LBB3_16
	cmp	rax, r12
	jne	LBB3_23
	cmp	rdx, r13
	jne	LBB3_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB3_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB3_27
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp148:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h3da02ce22d6600afE
Ltmp149:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB3_33
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp150:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp151:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB3_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB3_33
LBB3_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB3_18
Ltmp161:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp162:
LBB3_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB3_19
LBB3_33:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB3_19:
	test	rax, rax
	je	LBB3_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp164:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp165:
	jmp	LBB3_6
LBB3_5:
Ltmp169:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp170:
	jmp	LBB3_6
LBB3_35:
Ltmp166:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp167:
	jmp	LBB3_6
LBB3_7:
Ltmp131:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp132:
	jmp	LBB3_6
LBB3_25:
Ltmp155:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp156:
	jmp	LBB3_6
LBB3_27:
Ltmp153:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp154:
LBB3_6:
	ud2
LBB3_46:
Ltmp168:
	jmp	LBB3_40
LBB3_38:
Ltmp163:
	jmp	LBB3_45
LBB3_36:
Ltmp152:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB3_34:
Ltmp157:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp158:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp159:
	jmp	LBB3_41
LBB3_39:
Ltmp160:
LBB3_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB3_10:
Ltmp137:
Ltmp138:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp139:
	test	rax, rax
	je	LBB3_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp140:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp141:
	jmp	LBB3_6
LBB3_44:
Ltmp142:
	jmp	LBB3_45
LBB3_42:
Ltmp171:
	jmp	LBB3_45
LBB3_37:
Ltmp147:
LBB3_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB3_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end3:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table3:
Lexception3:
	.byte	255
	.byte	155
	.uleb128 Lttbase3-Lttbaseref3
Lttbaseref3:
	.byte	1
	.uleb128 Lcst_end3-Lcst_begin3
Lcst_begin3:
	.uleb128 Ltmp129-Lfunc_begin3
	.uleb128 Ltmp134-Ltmp129
	.uleb128 Ltmp171-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp135-Lfunc_begin3
	.uleb128 Ltmp136-Ltmp135
	.uleb128 Ltmp137-Lfunc_begin3
	.byte	3
	.uleb128 Ltmp145-Lfunc_begin3
	.uleb128 Ltmp144-Ltmp145
	.uleb128 Ltmp147-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp148-Lfunc_begin3
	.uleb128 Ltmp149-Ltmp148
	.uleb128 Ltmp157-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp150-Lfunc_begin3
	.uleb128 Ltmp151-Ltmp150
	.uleb128 Ltmp152-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp161-Lfunc_begin3
	.uleb128 Ltmp162-Ltmp161
	.uleb128 Ltmp163-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp164-Lfunc_begin3
	.uleb128 Ltmp165-Ltmp164
	.uleb128 Ltmp168-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp169-Lfunc_begin3
	.uleb128 Ltmp170-Ltmp169
	.uleb128 Ltmp171-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp166-Lfunc_begin3
	.uleb128 Ltmp167-Ltmp166
	.uleb128 Ltmp168-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp131-Lfunc_begin3
	.uleb128 Ltmp132-Ltmp131
	.uleb128 Ltmp171-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp155-Lfunc_begin3
	.uleb128 Ltmp154-Ltmp155
	.uleb128 Ltmp157-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp154-Lfunc_begin3
	.uleb128 Ltmp158-Ltmp154
	.byte	0
	.byte	0
	.uleb128 Ltmp158-Lfunc_begin3
	.uleb128 Ltmp159-Ltmp158
	.uleb128 Ltmp160-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp159-Lfunc_begin3
	.uleb128 Ltmp138-Ltmp159
	.byte	0
	.byte	0
	.uleb128 Ltmp138-Lfunc_begin3
	.uleb128 Ltmp139-Ltmp138
	.uleb128 Ltmp171-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp140-Lfunc_begin3
	.uleb128 Ltmp141-Ltmp140
	.uleb128 Ltmp142-Lfunc_begin3
	.byte	0
	.uleb128 Ltmp141-Lfunc_begin3
	.uleb128 Lfunc_end3-Ltmp141
	.byte	0
	.byte	0
Lcst_end3:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase3:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h216555e91046cbb2E:
Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception4
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 704
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rdx
	mov	r12, rsi
	mov	qword ptr [rsp + 144], rdi
	mov	byte ptr [rsp + 440], 0
	mov	rax, qword ptr [rsi]
	mov	rdx, qword ptr [rsi + 8]
	mov	qword ptr [rsp + 384], rax
	mov	qword ptr [rsp + 392], rdx
	mov	rax, qword ptr [rsi + 16]
	mov	qword ptr [rsp + 400], rax
	mov	rax, qword ptr [rsi + 24]
	mov	qword ptr [rsp + 408], rax
	mov	rax, qword ptr [rsi + 32]
	mov	qword ptr [rsp + 416], rax
	mov	rax, qword ptr [rsi + 40]
	mov	qword ptr [rsp + 424], rax
	mov	rax, qword ptr [rsi + 48]
	mov	qword ptr [rsp + 432], rax
	mov	qword ptr [rsp + 256], 0
	mov	rax, qword ptr [rbx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rbx + 272]
	mov	rdx, r14
	sub	rdx, rax
	cmp	rdx, rsi
	mov	dword ptr [rsp + 128], ecx
	jl	LBB4_4
	add	rsi, rsi
	jb	LBB4_7
	lea	rdi, [rbx + 256]
Ltmp172:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp173:
	mov	rsi, qword ptr [rbx + 272]
LBB4_4:
	sub	rsi, 1
	jb	LBB4_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 256]
	mov	qword ptr [rax + rsi], r13
	lea	r15, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h8b09c0858c976678E]
	mov	qword ptr [rax + rsi + 8], r15
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp176:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp177:
	mov	rax, qword ptr [r12 + 96]
	mov	qword ptr [rsp + 104], rax
	mov	rcx, qword ptr [r12 + 88]
	mov	qword ptr [rsp + 96], rcx
	mov	rcx, qword ptr [r12 + 80]
	mov	qword ptr [rsp + 88], rcx
	mov	rcx, qword ptr [r12 + 72]
	mov	qword ptr [rsp + 80], rcx
	mov	rcx, qword ptr [r12 + 56]
	mov	rdx, qword ptr [r12 + 64]
	mov	qword ptr [rsp + 72], rdx
	mov	qword ptr [rsp + 64], rcx
	mov	edi, dword ptr [rsp + 128]
	mov	byte ptr [rsp + 112], dil
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	mov	rdx, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 32], rdx
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 40], rdx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 48], rdx
Ltmp178:
	mov	qword ptr [rsp], rax
	movzx	r12d, dil
	lea	rdi, [rsp + 448]
	lea	r9, [rsp + 32]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8bebf2fbcff93f77E
Ltmp179:
	movaps	xmm0, xmmword ptr [rsp + 448]
	movaps	xmmword ptr [rsp + 128], xmm0
	movaps	xmm0, xmmword ptr [rsp + 464]
	movaps	xmmword ptr [rsp + 208], xmm0
	movaps	xmm0, xmmword ptr [rsp + 480]
	movaps	xmmword ptr [rsp + 192], xmm0
	movaps	xmm0, xmmword ptr [rsp + 496]
	movaps	xmmword ptr [rsp + 176], xmm0
	lea	r14, [rsp + 440]
	mov	al, byte ptr [rsp + 440]
	test	al, al
	je	LBB4_12
	jmp	LBB4_16
	.p2align	4, 0x90
LBB4_23:
Ltmp188:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp189:
	movzx	eax, byte ptr [rsp + 440]
	test	al, al
	jne	LBB4_16
LBB4_12:
Ltmp186:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp187:
	test	rdx, rdx
	je	LBB4_14
	cmp	rax, r13
	jne	LBB4_23
	cmp	rdx, r15
	jne	LBB4_23
	lea	rdi, [rsp + 448]
	lea	rsi, [rsp + 256]
	mov	edx, 192
	call	_memcpy
	mov	rsi, qword ptr [rsp + 576]
	mov	rcx, qword ptr [rsp + 584]
	mov	rax, qword ptr [rsp + 592]
	mov	rdx, qword ptr [rsp + 600]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 608]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 616]
	mov	qword ptr [rsp + 80], rdx
	test	rsi, rsi
	je	LBB4_25
	mov	r9, qword ptr [rsp + 624]
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 248], rdi
	mov	rbx, qword ptr [rsp + 64]
	mov	rdx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 240], rdx
	mov	qword ptr [rsp + 232], rbx
	mov	qword ptr [rsp + 168], rdi
	mov	qword ptr [rsp + 160], rdx
	mov	qword ptr [rsp + 152], rbx
	mov	rsi, qword ptr [rsi]
	sub	rsi, qword ptr [rcx]
	jb	LBB4_27
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	mov	rax, qword ptr [rsp + 168]
	mov	qword ptr [rsp + 48], rax
	mov	rax, qword ptr [rsp + 152]
	mov	rdx, qword ptr [rsp + 160]
	mov	qword ptr [rsp + 40], rdx
	mov	qword ptr [rsp + 32], rax
Ltmp191:
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 32]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8bebf2fbcff93f77E
Ltmp192:
	cmp	qword ptr [rsp + 448], 2
	jb	LBB4_33
	mov	r15, qword ptr [rsp + 456]
	mov	rbx, qword ptr [rsp + 464]
Ltmp193:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp194:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB4_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
LBB4_33:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	jmp	LBB4_37
LBB4_14:
	mov	al, byte ptr [rsp + 440]
	test	al, al
	jne	LBB4_16
Ltmp204:
	mov	rdi, rbx
	mov	rsi, r14
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp205:
LBB4_16:
	mov	rax, qword ptr [rsp + 256]
	cmp	rax, 1
	jne	LBB4_17
	movaps	xmm0, xmmword ptr [rsp + 320]
	movaps	xmm1, xmmword ptr [rsp + 336]
	movaps	xmm2, xmmword ptr [rsp + 352]
	movaps	xmm3, xmmword ptr [rsp + 368]
LBB4_37:
	mov	rax, qword ptr [rsp + 144]
	movaps	xmm4, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rax], xmm4
	movaps	xmm4, xmmword ptr [rsp + 208]
	movaps	xmmword ptr [rax + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 192]
	movaps	xmmword ptr [rax + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rax + 48], xmm4
	movaps	xmmword ptr [rax + 64], xmm0
	movaps	xmmword ptr [rax + 80], xmm1
	movaps	xmmword ptr [rax + 96], xmm2
	movaps	xmmword ptr [rax + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB4_17:
	test	rax, rax
	je	LBB4_35
	mov	rdi, qword ptr [rsp + 264]
	mov	rsi, qword ptr [rsp + 272]
Ltmp207:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp208:
	jmp	LBB4_6
LBB4_5:
Ltmp212:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp213:
	jmp	LBB4_6
LBB4_35:
Ltmp209:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp210:
	jmp	LBB4_6
LBB4_7:
Ltmp174:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp175:
	jmp	LBB4_6
LBB4_25:
Ltmp198:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp199:
	jmp	LBB4_6
LBB4_27:
Ltmp196:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp197:
	jmp	LBB4_6
LBB4_47:
Ltmp211:
	jmp	LBB4_42
LBB4_40:
Ltmp206:
	jmp	LBB4_46
LBB4_38:
Ltmp195:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB4_34:
Ltmp200:
	mov	r14, rax
Ltmp201:
	lea	rdi, [rsp + 448]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp202:
	jmp	LBB4_43
LBB4_41:
Ltmp203:
LBB4_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB4_19:
Ltmp180:
Ltmp181:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp182:
	mov	rcx, rdx
	lea	rsi, [rsp + 440]
Ltmp183:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp184:
LBB4_6:
	ud2
LBB4_45:
Ltmp185:
	jmp	LBB4_46
LBB4_44:
Ltmp214:
	jmp	LBB4_46
LBB4_39:
Ltmp190:
LBB4_46:
	mov	r14, rax
	lea	rdi, [rsp + 256]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB4_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end4:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table4:
Lexception4:
	.byte	255
	.byte	155
	.uleb128 Lttbase4-Lttbaseref4
Lttbaseref4:
	.byte	1
	.uleb128 Lcst_end4-Lcst_begin4
Lcst_begin4:
	.uleb128 Ltmp172-Lfunc_begin4
	.uleb128 Ltmp177-Ltmp172
	.uleb128 Ltmp214-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp178-Lfunc_begin4
	.uleb128 Ltmp179-Ltmp178
	.uleb128 Ltmp180-Lfunc_begin4
	.byte	3
	.uleb128 Ltmp188-Lfunc_begin4
	.uleb128 Ltmp187-Ltmp188
	.uleb128 Ltmp190-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp187-Lfunc_begin4
	.uleb128 Ltmp191-Ltmp187
	.byte	0
	.byte	0
	.uleb128 Ltmp191-Lfunc_begin4
	.uleb128 Ltmp192-Ltmp191
	.uleb128 Ltmp200-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp193-Lfunc_begin4
	.uleb128 Ltmp194-Ltmp193
	.uleb128 Ltmp195-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp204-Lfunc_begin4
	.uleb128 Ltmp205-Ltmp204
	.uleb128 Ltmp206-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp207-Lfunc_begin4
	.uleb128 Ltmp208-Ltmp207
	.uleb128 Ltmp211-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp212-Lfunc_begin4
	.uleb128 Ltmp213-Ltmp212
	.uleb128 Ltmp214-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp209-Lfunc_begin4
	.uleb128 Ltmp210-Ltmp209
	.uleb128 Ltmp211-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp174-Lfunc_begin4
	.uleb128 Ltmp175-Ltmp174
	.uleb128 Ltmp214-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp198-Lfunc_begin4
	.uleb128 Ltmp197-Ltmp198
	.uleb128 Ltmp200-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp197-Lfunc_begin4
	.uleb128 Ltmp201-Ltmp197
	.byte	0
	.byte	0
	.uleb128 Ltmp201-Lfunc_begin4
	.uleb128 Ltmp202-Ltmp201
	.uleb128 Ltmp203-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp202-Lfunc_begin4
	.uleb128 Ltmp181-Ltmp202
	.byte	0
	.byte	0
	.uleb128 Ltmp181-Lfunc_begin4
	.uleb128 Ltmp182-Ltmp181
	.uleb128 Ltmp214-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp183-Lfunc_begin4
	.uleb128 Ltmp184-Ltmp183
	.uleb128 Ltmp185-Lfunc_begin4
	.byte	0
	.uleb128 Ltmp184-Lfunc_begin4
	.uleb128 Lfunc_end4-Ltmp184
	.byte	0
	.byte	0
Lcst_end4:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase4:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h2dcc77ab8eef10feE:
Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception5
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 1024
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r8d, ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	qword ptr [rsp + 264], rdi
	mov	byte ptr [rsp + 928], 0
	lea	rdi, [rsp + 832]
	mov	ecx, 12
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 704], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rsp + 240], r8d
	jl	LBB5_4
	add	rsi, rsi
	jb	LBB5_7
	lea	rdi, [rbx + 256]
Ltmp215:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp216:
	mov	rsi, qword ptr [rbx + 272]
LBB5_4:
	sub	rsi, 1
	jb	LBB5_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 704]
	mov	qword ptr [rax + rsi], r13
	lea	r15, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h82a774eddec8b54fE]
	mov	qword ptr [rax + rsi + 8], r15
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp219:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp220:
	movdqu	xmm0, xmmword ptr [r12 + 96]
	movups	xmm1, xmmword ptr [r12 + 112]
	movups	xmm2, xmmword ptr [r12 + 128]
	movups	xmm3, xmmword ptr [r12 + 144]
	mov	r9, qword ptr [r12 + 176]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	rdx, xmm0
	mov	rdi, qword ptr [r12 + 160]
	mov	rax, qword ptr [r12 + 168]
	mov	qword ptr [rsp + 184], rax
	mov	qword ptr [rsp + 176], rdi
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	movups	xmmword ptr [rsp + 416], xmm3
	movups	xmmword ptr [rsp + 400], xmm2
	movups	xmmword ptr [rsp + 384], xmm1
	mov	qword ptr [rsp + 432], rdi
	mov	qword ptr [rsp + 440], rax
Ltmp221:
	mov	qword ptr [rsp], r9
	movzx	r12d, byte ptr [rsp + 240]
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 384]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h08cd0410494d8951E
Ltmp222:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmmword ptr [rsp + 240], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmmword ptr [rsp + 368], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movaps	xmmword ptr [rsp + 352], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rsp + 336], xmm0
	lea	r14, [rsp + 928]
	mov	al, byte ptr [rsp + 928]
	test	al, al
	je	LBB5_12
	jmp	LBB5_16
	.p2align	4, 0x90
LBB5_23:
Ltmp231:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp232:
	movzx	eax, byte ptr [rsp + 928]
	test	al, al
	jne	LBB5_16
LBB5_12:
Ltmp229:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp230:
	test	rdx, rdx
	je	LBB5_14
	cmp	rax, r13
	jne	LBB5_23
	cmp	rdx, r15
	jne	LBB5_23
	lea	rdi, [rsp + 384]
	lea	rsi, [rsp + 704]
	mov	edx, 256
	call	_memcpy
	mov	r11, qword ptr [rsp + 512]
	mov	r8, qword ptr [rsp + 520]
	mov	r10, qword ptr [rsp + 528]
	mov	rdx, qword ptr [rsp + 536]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 552]
	mov	qword ptr [rsp + 80], rdx
	mov	rdx, qword ptr [rsp + 560]
	mov	qword ptr [rsp + 88], rdx
	mov	rdx, qword ptr [rsp + 568]
	mov	qword ptr [rsp + 96], rdx
	mov	rdx, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 104], rdx
	mov	rdx, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 112], rdx
	mov	rdx, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 120], rdx
	test	r11, r11
	je	LBB5_25
	mov	r9, qword ptr [rsp + 600]
	mov	rdi, qword ptr [rsp + 120]
	mov	qword ptr [rsp + 328], rdi
	mov	r14, qword ptr [rsp + 112]
	mov	qword ptr [rsp + 320], r14
	mov	rbx, qword ptr [rsp + 104]
	mov	qword ptr [rsp + 312], rbx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 304], rdx
	mov	rcx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 296], rcx
	mov	rax, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 288], rax
	mov	rsi, qword ptr [rsp + 64]
	mov	rdi, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 272], rsi
	mov	qword ptr [rsp + 224], r14
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 208], rdx
	mov	qword ptr [rsp + 200], rcx
	mov	qword ptr [rsp + 192], rax
	mov	qword ptr [rsp + 184], rdi
	mov	qword ptr [rsp + 176], rsi
	mov	rax, qword ptr [rsp + 328]
	mov	qword ptr [rsp + 232], rax
	mov	rsi, qword ptr [r11]
	sub	rsi, qword ptr [r8]
	jb	LBB5_33
	mov	rcx, qword ptr [r10]
	mov	r8, qword ptr [r10 + 8]
	mov	rax, qword ptr [rsp + 232]
	mov	qword ptr [rsp + 120], rax
	mov	rax, qword ptr [rsp + 224]
	mov	qword ptr [rsp + 112], rax
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 200]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 192]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 176]
	mov	rdx, qword ptr [rsp + 184]
	mov	qword ptr [rsp + 72], rdx
	mov	qword ptr [rsp + 64], rax
Ltmp234:
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 640]
	lea	r9, [rsp + 64]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h08cd0410494d8951E
Ltmp235:
	cmp	qword ptr [rsp + 384], 2
	jb	LBB5_32
	mov	r15, qword ptr [rsp + 392]
	mov	rbx, qword ptr [rsp + 400]
Ltmp236:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp237:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB5_32
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
LBB5_32:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movaps	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	jmp	LBB5_37
LBB5_14:
	mov	al, byte ptr [rsp + 928]
	test	al, al
	jne	LBB5_16
Ltmp247:
	mov	rdi, rbx
	mov	rsi, r14
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp248:
LBB5_16:
	mov	rax, qword ptr [rsp + 704]
	cmp	rax, 1
	jne	LBB5_17
	movaps	xmm0, xmmword ptr [rsp + 768]
	movaps	xmm1, xmmword ptr [rsp + 784]
	movaps	xmm2, xmmword ptr [rsp + 800]
	movaps	xmm3, xmmword ptr [rsp + 816]
LBB5_37:
	mov	rax, qword ptr [rsp + 264]
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [rax], xmm4
	movaps	xmm4, xmmword ptr [rsp + 368]
	movaps	xmmword ptr [rax + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 352]
	movaps	xmmword ptr [rax + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 336]
	movaps	xmmword ptr [rax + 48], xmm4
	movaps	xmmword ptr [rax + 64], xmm0
	movaps	xmmword ptr [rax + 80], xmm1
	movaps	xmmword ptr [rax + 96], xmm2
	movaps	xmmword ptr [rax + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB5_17:
	test	rax, rax
	je	LBB5_35
	mov	rdi, qword ptr [rsp + 712]
	mov	rsi, qword ptr [rsp + 720]
Ltmp250:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp251:
	jmp	LBB5_6
LBB5_5:
Ltmp255:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp256:
	jmp	LBB5_6
LBB5_35:
Ltmp252:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp253:
	jmp	LBB5_6
LBB5_7:
Ltmp217:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp218:
	jmp	LBB5_6
LBB5_25:
Ltmp241:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp242:
	jmp	LBB5_6
LBB5_33:
Ltmp239:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp240:
	jmp	LBB5_6
LBB5_47:
Ltmp254:
	jmp	LBB5_42
LBB5_40:
Ltmp249:
	jmp	LBB5_46
LBB5_38:
Ltmp238:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB5_34:
Ltmp243:
	mov	r14, rax
Ltmp244:
	lea	rdi, [rsp + 384]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp245:
	jmp	LBB5_43
LBB5_41:
Ltmp246:
LBB5_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB5_19:
Ltmp223:
Ltmp224:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp225:
	mov	rcx, rdx
	lea	rsi, [rsp + 928]
Ltmp226:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp227:
LBB5_6:
	ud2
LBB5_45:
Ltmp228:
	jmp	LBB5_46
LBB5_44:
Ltmp257:
	jmp	LBB5_46
LBB5_39:
Ltmp233:
LBB5_46:
	mov	r14, rax
	lea	rdi, [rsp + 704]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB5_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end5:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table5:
Lexception5:
	.byte	255
	.byte	155
	.uleb128 Lttbase5-Lttbaseref5
Lttbaseref5:
	.byte	1
	.uleb128 Lcst_end5-Lcst_begin5
Lcst_begin5:
	.uleb128 Ltmp215-Lfunc_begin5
	.uleb128 Ltmp220-Ltmp215
	.uleb128 Ltmp257-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp221-Lfunc_begin5
	.uleb128 Ltmp222-Ltmp221
	.uleb128 Ltmp223-Lfunc_begin5
	.byte	3
	.uleb128 Ltmp231-Lfunc_begin5
	.uleb128 Ltmp230-Ltmp231
	.uleb128 Ltmp233-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp230-Lfunc_begin5
	.uleb128 Ltmp234-Ltmp230
	.byte	0
	.byte	0
	.uleb128 Ltmp234-Lfunc_begin5
	.uleb128 Ltmp235-Ltmp234
	.uleb128 Ltmp243-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp236-Lfunc_begin5
	.uleb128 Ltmp237-Ltmp236
	.uleb128 Ltmp238-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp247-Lfunc_begin5
	.uleb128 Ltmp248-Ltmp247
	.uleb128 Ltmp249-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp250-Lfunc_begin5
	.uleb128 Ltmp251-Ltmp250
	.uleb128 Ltmp254-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp255-Lfunc_begin5
	.uleb128 Ltmp256-Ltmp255
	.uleb128 Ltmp257-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp252-Lfunc_begin5
	.uleb128 Ltmp253-Ltmp252
	.uleb128 Ltmp254-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp217-Lfunc_begin5
	.uleb128 Ltmp218-Ltmp217
	.uleb128 Ltmp257-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp241-Lfunc_begin5
	.uleb128 Ltmp240-Ltmp241
	.uleb128 Ltmp243-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp240-Lfunc_begin5
	.uleb128 Ltmp244-Ltmp240
	.byte	0
	.byte	0
	.uleb128 Ltmp244-Lfunc_begin5
	.uleb128 Ltmp245-Ltmp244
	.uleb128 Ltmp246-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp245-Lfunc_begin5
	.uleb128 Ltmp224-Ltmp245
	.byte	0
	.byte	0
	.uleb128 Ltmp224-Lfunc_begin5
	.uleb128 Ltmp225-Ltmp224
	.uleb128 Ltmp257-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp226-Lfunc_begin5
	.uleb128 Ltmp227-Ltmp226
	.uleb128 Ltmp228-Lfunc_begin5
	.byte	0
	.uleb128 Ltmp227-Lfunc_begin5
	.uleb128 Lfunc_end5-Ltmp227
	.byte	0
	.byte	0
Lcst_end5:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase5:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h3290a287d572be01E:
Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception6
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB6_4
	add	rsi, rsi
	jb	LBB6_7
	lea	rdi, [rbx + 256]
Ltmp258:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp259:
	mov	rsi, qword ptr [rbx + 272]
LBB6_4:
	sub	rsi, 1
	jb	LBB6_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h6733e7fed8fc0b08E]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp262:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp263:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp264:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h2395d30d65c44400E
Ltmp265:
LBB6_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB6_14
	jmp	LBB6_18
	.p2align	4, 0x90
LBB6_23:
Ltmp274:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp275:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB6_18
LBB6_14:
Ltmp272:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp273:
	test	rdx, rdx
	je	LBB6_16
	cmp	rax, r12
	jne	LBB6_23
	cmp	rdx, r13
	jne	LBB6_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB6_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB6_27
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp277:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h2395d30d65c44400E
Ltmp278:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB6_33
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp279:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp280:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB6_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB6_33
LBB6_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB6_18
Ltmp290:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp291:
LBB6_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB6_19
LBB6_33:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB6_19:
	test	rax, rax
	je	LBB6_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp293:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp294:
	jmp	LBB6_6
LBB6_5:
Ltmp298:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp299:
	jmp	LBB6_6
LBB6_35:
Ltmp295:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp296:
	jmp	LBB6_6
LBB6_7:
Ltmp260:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp261:
	jmp	LBB6_6
LBB6_25:
Ltmp284:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp285:
	jmp	LBB6_6
LBB6_27:
Ltmp282:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp283:
LBB6_6:
	ud2
LBB6_46:
Ltmp297:
	jmp	LBB6_40
LBB6_38:
Ltmp292:
	jmp	LBB6_45
LBB6_36:
Ltmp281:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB6_34:
Ltmp286:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp287:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp288:
	jmp	LBB6_41
LBB6_39:
Ltmp289:
LBB6_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB6_10:
Ltmp266:
Ltmp267:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp268:
	test	rax, rax
	je	LBB6_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp269:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp270:
	jmp	LBB6_6
LBB6_44:
Ltmp271:
	jmp	LBB6_45
LBB6_42:
Ltmp300:
	jmp	LBB6_45
LBB6_37:
Ltmp276:
LBB6_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB6_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end6:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table6:
Lexception6:
	.byte	255
	.byte	155
	.uleb128 Lttbase6-Lttbaseref6
Lttbaseref6:
	.byte	1
	.uleb128 Lcst_end6-Lcst_begin6
Lcst_begin6:
	.uleb128 Ltmp258-Lfunc_begin6
	.uleb128 Ltmp263-Ltmp258
	.uleb128 Ltmp300-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp264-Lfunc_begin6
	.uleb128 Ltmp265-Ltmp264
	.uleb128 Ltmp266-Lfunc_begin6
	.byte	3
	.uleb128 Ltmp274-Lfunc_begin6
	.uleb128 Ltmp273-Ltmp274
	.uleb128 Ltmp276-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp277-Lfunc_begin6
	.uleb128 Ltmp278-Ltmp277
	.uleb128 Ltmp286-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp279-Lfunc_begin6
	.uleb128 Ltmp280-Ltmp279
	.uleb128 Ltmp281-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp290-Lfunc_begin6
	.uleb128 Ltmp291-Ltmp290
	.uleb128 Ltmp292-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp293-Lfunc_begin6
	.uleb128 Ltmp294-Ltmp293
	.uleb128 Ltmp297-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp298-Lfunc_begin6
	.uleb128 Ltmp299-Ltmp298
	.uleb128 Ltmp300-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp295-Lfunc_begin6
	.uleb128 Ltmp296-Ltmp295
	.uleb128 Ltmp297-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp260-Lfunc_begin6
	.uleb128 Ltmp261-Ltmp260
	.uleb128 Ltmp300-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp284-Lfunc_begin6
	.uleb128 Ltmp283-Ltmp284
	.uleb128 Ltmp286-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp283-Lfunc_begin6
	.uleb128 Ltmp287-Ltmp283
	.byte	0
	.byte	0
	.uleb128 Ltmp287-Lfunc_begin6
	.uleb128 Ltmp288-Ltmp287
	.uleb128 Ltmp289-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp288-Lfunc_begin6
	.uleb128 Ltmp267-Ltmp288
	.byte	0
	.byte	0
	.uleb128 Ltmp267-Lfunc_begin6
	.uleb128 Ltmp268-Ltmp267
	.uleb128 Ltmp300-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp269-Lfunc_begin6
	.uleb128 Ltmp270-Ltmp269
	.uleb128 Ltmp271-Lfunc_begin6
	.byte	0
	.uleb128 Ltmp270-Lfunc_begin6
	.uleb128 Lfunc_end6-Ltmp270
	.byte	0
	.byte	0
Lcst_end6:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase6:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h35cb1e0ec72c1b47E:
Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception7
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB7_4
	add	rsi, rsi
	jb	LBB7_7
	lea	rdi, [rbx + 256]
Ltmp301:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp302:
	mov	rsi, qword ptr [rbx + 272]
LBB7_4:
	sub	rsi, 1
	jb	LBB7_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h04448f338fbbd7b1E]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp305:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp306:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp307:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17he71c6e485153800aE
Ltmp308:
LBB7_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB7_14
	jmp	LBB7_18
	.p2align	4, 0x90
LBB7_23:
Ltmp317:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp318:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB7_18
LBB7_14:
Ltmp315:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp316:
	test	rdx, rdx
	je	LBB7_16
	cmp	rax, r12
	jne	LBB7_23
	cmp	rdx, r13
	jne	LBB7_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB7_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB7_33
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp320:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17he71c6e485153800aE
Ltmp321:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB7_32
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp322:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp323:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB7_32
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB7_32
LBB7_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB7_18
Ltmp333:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp334:
LBB7_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB7_19
LBB7_32:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB7_19:
	test	rax, rax
	je	LBB7_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp336:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp337:
	jmp	LBB7_6
LBB7_5:
Ltmp341:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp342:
	jmp	LBB7_6
LBB7_35:
Ltmp338:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp339:
	jmp	LBB7_6
LBB7_7:
Ltmp303:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp304:
	jmp	LBB7_6
LBB7_25:
Ltmp327:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp328:
	jmp	LBB7_6
LBB7_33:
Ltmp325:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp326:
LBB7_6:
	ud2
LBB7_46:
Ltmp340:
	jmp	LBB7_40
LBB7_38:
Ltmp335:
	jmp	LBB7_45
LBB7_36:
Ltmp324:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB7_34:
Ltmp329:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp330:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp331:
	jmp	LBB7_41
LBB7_39:
Ltmp332:
LBB7_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB7_10:
Ltmp309:
Ltmp310:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp311:
	test	rax, rax
	je	LBB7_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp312:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp313:
	jmp	LBB7_6
LBB7_44:
Ltmp314:
	jmp	LBB7_45
LBB7_42:
Ltmp343:
	jmp	LBB7_45
LBB7_37:
Ltmp319:
LBB7_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB7_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end7:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table7:
Lexception7:
	.byte	255
	.byte	155
	.uleb128 Lttbase7-Lttbaseref7
Lttbaseref7:
	.byte	1
	.uleb128 Lcst_end7-Lcst_begin7
Lcst_begin7:
	.uleb128 Ltmp301-Lfunc_begin7
	.uleb128 Ltmp306-Ltmp301
	.uleb128 Ltmp343-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp307-Lfunc_begin7
	.uleb128 Ltmp308-Ltmp307
	.uleb128 Ltmp309-Lfunc_begin7
	.byte	3
	.uleb128 Ltmp317-Lfunc_begin7
	.uleb128 Ltmp316-Ltmp317
	.uleb128 Ltmp319-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp320-Lfunc_begin7
	.uleb128 Ltmp321-Ltmp320
	.uleb128 Ltmp329-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp322-Lfunc_begin7
	.uleb128 Ltmp323-Ltmp322
	.uleb128 Ltmp324-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp333-Lfunc_begin7
	.uleb128 Ltmp334-Ltmp333
	.uleb128 Ltmp335-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp336-Lfunc_begin7
	.uleb128 Ltmp337-Ltmp336
	.uleb128 Ltmp340-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp341-Lfunc_begin7
	.uleb128 Ltmp342-Ltmp341
	.uleb128 Ltmp343-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp338-Lfunc_begin7
	.uleb128 Ltmp339-Ltmp338
	.uleb128 Ltmp340-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp303-Lfunc_begin7
	.uleb128 Ltmp304-Ltmp303
	.uleb128 Ltmp343-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp327-Lfunc_begin7
	.uleb128 Ltmp326-Ltmp327
	.uleb128 Ltmp329-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp326-Lfunc_begin7
	.uleb128 Ltmp330-Ltmp326
	.byte	0
	.byte	0
	.uleb128 Ltmp330-Lfunc_begin7
	.uleb128 Ltmp331-Ltmp330
	.uleb128 Ltmp332-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp331-Lfunc_begin7
	.uleb128 Ltmp310-Ltmp331
	.byte	0
	.byte	0
	.uleb128 Ltmp310-Lfunc_begin7
	.uleb128 Ltmp311-Ltmp310
	.uleb128 Ltmp343-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp312-Lfunc_begin7
	.uleb128 Ltmp313-Ltmp312
	.uleb128 Ltmp314-Lfunc_begin7
	.byte	0
	.uleb128 Ltmp313-Lfunc_begin7
	.uleb128 Lfunc_end7-Ltmp313
	.byte	0
	.byte	0
Lcst_end7:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase7:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h3978e15f5771cce6E:
Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception8
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB8_4
	add	rsi, rsi
	jb	LBB8_7
	lea	rdi, [rbx + 256]
Ltmp344:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp345:
	mov	rsi, qword ptr [rbx + 272]
LBB8_4:
	sub	rsi, 1
	jb	LBB8_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h8da3cda5121704f4E]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp348:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp349:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp350:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf17d0abb9471ca78E
Ltmp351:
LBB8_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB8_14
	jmp	LBB8_18
	.p2align	4, 0x90
LBB8_23:
Ltmp360:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp361:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB8_18
LBB8_14:
Ltmp358:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp359:
	test	rdx, rdx
	je	LBB8_16
	cmp	rax, r12
	jne	LBB8_23
	cmp	rdx, r13
	jne	LBB8_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB8_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB8_27
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp363:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf17d0abb9471ca78E
Ltmp364:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB8_33
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp365:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp366:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB8_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB8_33
LBB8_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB8_18
Ltmp376:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp377:
LBB8_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB8_19
LBB8_33:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB8_19:
	test	rax, rax
	je	LBB8_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp379:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp380:
	jmp	LBB8_6
LBB8_5:
Ltmp384:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp385:
	jmp	LBB8_6
LBB8_35:
Ltmp381:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp382:
	jmp	LBB8_6
LBB8_7:
Ltmp346:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp347:
	jmp	LBB8_6
LBB8_25:
Ltmp370:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp371:
	jmp	LBB8_6
LBB8_27:
Ltmp368:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp369:
LBB8_6:
	ud2
LBB8_46:
Ltmp383:
	jmp	LBB8_40
LBB8_38:
Ltmp378:
	jmp	LBB8_45
LBB8_36:
Ltmp367:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB8_34:
Ltmp372:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp373:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp374:
	jmp	LBB8_41
LBB8_39:
Ltmp375:
LBB8_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB8_10:
Ltmp352:
Ltmp353:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp354:
	test	rax, rax
	je	LBB8_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp355:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp356:
	jmp	LBB8_6
LBB8_44:
Ltmp357:
	jmp	LBB8_45
LBB8_42:
Ltmp386:
	jmp	LBB8_45
LBB8_37:
Ltmp362:
LBB8_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB8_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end8:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table8:
Lexception8:
	.byte	255
	.byte	155
	.uleb128 Lttbase8-Lttbaseref8
Lttbaseref8:
	.byte	1
	.uleb128 Lcst_end8-Lcst_begin8
Lcst_begin8:
	.uleb128 Ltmp344-Lfunc_begin8
	.uleb128 Ltmp349-Ltmp344
	.uleb128 Ltmp386-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp350-Lfunc_begin8
	.uleb128 Ltmp351-Ltmp350
	.uleb128 Ltmp352-Lfunc_begin8
	.byte	3
	.uleb128 Ltmp360-Lfunc_begin8
	.uleb128 Ltmp359-Ltmp360
	.uleb128 Ltmp362-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp363-Lfunc_begin8
	.uleb128 Ltmp364-Ltmp363
	.uleb128 Ltmp372-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp365-Lfunc_begin8
	.uleb128 Ltmp366-Ltmp365
	.uleb128 Ltmp367-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp376-Lfunc_begin8
	.uleb128 Ltmp377-Ltmp376
	.uleb128 Ltmp378-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp379-Lfunc_begin8
	.uleb128 Ltmp380-Ltmp379
	.uleb128 Ltmp383-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp384-Lfunc_begin8
	.uleb128 Ltmp385-Ltmp384
	.uleb128 Ltmp386-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp381-Lfunc_begin8
	.uleb128 Ltmp382-Ltmp381
	.uleb128 Ltmp383-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp346-Lfunc_begin8
	.uleb128 Ltmp347-Ltmp346
	.uleb128 Ltmp386-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp370-Lfunc_begin8
	.uleb128 Ltmp369-Ltmp370
	.uleb128 Ltmp372-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp369-Lfunc_begin8
	.uleb128 Ltmp373-Ltmp369
	.byte	0
	.byte	0
	.uleb128 Ltmp373-Lfunc_begin8
	.uleb128 Ltmp374-Ltmp373
	.uleb128 Ltmp375-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp374-Lfunc_begin8
	.uleb128 Ltmp353-Ltmp374
	.byte	0
	.byte	0
	.uleb128 Ltmp353-Lfunc_begin8
	.uleb128 Ltmp354-Ltmp353
	.uleb128 Ltmp386-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp355-Lfunc_begin8
	.uleb128 Ltmp356-Ltmp355
	.uleb128 Ltmp357-Lfunc_begin8
	.byte	0
	.uleb128 Ltmp356-Lfunc_begin8
	.uleb128 Lfunc_end8-Ltmp356
	.byte	0
	.byte	0
Lcst_end8:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase8:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h3e6e22037d084d63E:
Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception9
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB9_4
	add	rsi, rsi
	jb	LBB9_7
	lea	rdi, [rbx + 256]
Ltmp387:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp388:
	mov	rsi, qword ptr [rbx + 272]
LBB9_4:
	sub	rsi, 1
	jb	LBB9_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h0a6c6ada20575cbeE]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp391:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp392:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp393:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf409ee847d2de198E
Ltmp394:
LBB9_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB9_14
	jmp	LBB9_18
	.p2align	4, 0x90
LBB9_23:
Ltmp403:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp404:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB9_18
LBB9_14:
Ltmp401:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp402:
	test	rdx, rdx
	je	LBB9_16
	cmp	rax, r12
	jne	LBB9_23
	cmp	rdx, r13
	jne	LBB9_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB9_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB9_27
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp406:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf409ee847d2de198E
Ltmp407:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB9_33
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp408:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp409:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB9_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB9_33
LBB9_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB9_18
Ltmp419:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp420:
LBB9_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB9_19
LBB9_33:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB9_19:
	test	rax, rax
	je	LBB9_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp422:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp423:
	jmp	LBB9_6
LBB9_5:
Ltmp427:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp428:
	jmp	LBB9_6
LBB9_35:
Ltmp424:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp425:
	jmp	LBB9_6
LBB9_7:
Ltmp389:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp390:
	jmp	LBB9_6
LBB9_25:
Ltmp413:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp414:
	jmp	LBB9_6
LBB9_27:
Ltmp411:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp412:
LBB9_6:
	ud2
LBB9_46:
Ltmp426:
	jmp	LBB9_40
LBB9_38:
Ltmp421:
	jmp	LBB9_45
LBB9_36:
Ltmp410:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB9_34:
Ltmp415:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp416:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp417:
	jmp	LBB9_41
LBB9_39:
Ltmp418:
LBB9_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB9_10:
Ltmp395:
Ltmp396:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp397:
	test	rax, rax
	je	LBB9_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp398:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp399:
	jmp	LBB9_6
LBB9_44:
Ltmp400:
	jmp	LBB9_45
LBB9_42:
Ltmp429:
	jmp	LBB9_45
LBB9_37:
Ltmp405:
LBB9_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB9_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end9:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table9:
Lexception9:
	.byte	255
	.byte	155
	.uleb128 Lttbase9-Lttbaseref9
Lttbaseref9:
	.byte	1
	.uleb128 Lcst_end9-Lcst_begin9
Lcst_begin9:
	.uleb128 Ltmp387-Lfunc_begin9
	.uleb128 Ltmp392-Ltmp387
	.uleb128 Ltmp429-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp393-Lfunc_begin9
	.uleb128 Ltmp394-Ltmp393
	.uleb128 Ltmp395-Lfunc_begin9
	.byte	3
	.uleb128 Ltmp403-Lfunc_begin9
	.uleb128 Ltmp402-Ltmp403
	.uleb128 Ltmp405-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp406-Lfunc_begin9
	.uleb128 Ltmp407-Ltmp406
	.uleb128 Ltmp415-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp408-Lfunc_begin9
	.uleb128 Ltmp409-Ltmp408
	.uleb128 Ltmp410-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp419-Lfunc_begin9
	.uleb128 Ltmp420-Ltmp419
	.uleb128 Ltmp421-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp422-Lfunc_begin9
	.uleb128 Ltmp423-Ltmp422
	.uleb128 Ltmp426-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp427-Lfunc_begin9
	.uleb128 Ltmp428-Ltmp427
	.uleb128 Ltmp429-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp424-Lfunc_begin9
	.uleb128 Ltmp425-Ltmp424
	.uleb128 Ltmp426-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp389-Lfunc_begin9
	.uleb128 Ltmp390-Ltmp389
	.uleb128 Ltmp429-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp413-Lfunc_begin9
	.uleb128 Ltmp412-Ltmp413
	.uleb128 Ltmp415-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp412-Lfunc_begin9
	.uleb128 Ltmp416-Ltmp412
	.byte	0
	.byte	0
	.uleb128 Ltmp416-Lfunc_begin9
	.uleb128 Ltmp417-Ltmp416
	.uleb128 Ltmp418-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp417-Lfunc_begin9
	.uleb128 Ltmp396-Ltmp417
	.byte	0
	.byte	0
	.uleb128 Ltmp396-Lfunc_begin9
	.uleb128 Ltmp397-Ltmp396
	.uleb128 Ltmp429-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp398-Lfunc_begin9
	.uleb128 Ltmp399-Ltmp398
	.uleb128 Ltmp400-Lfunc_begin9
	.byte	0
	.uleb128 Ltmp399-Lfunc_begin9
	.uleb128 Lfunc_end9-Ltmp399
	.byte	0
	.byte	0
Lcst_end9:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase9:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h47120a75e9270438E:
Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception10
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB10_4
	add	rsi, rsi
	jb	LBB10_7
	lea	rdi, [rbx + 256]
Ltmp430:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp431:
	mov	rsi, qword ptr [rbx + 272]
LBB10_4:
	sub	rsi, 1
	jb	LBB10_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h66098996f778b483E]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp434:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp435:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp436:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17he2e0ed02bd580b5bE
Ltmp437:
LBB10_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB10_14
	jmp	LBB10_18
	.p2align	4, 0x90
LBB10_23:
Ltmp446:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp447:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB10_18
LBB10_14:
Ltmp444:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp445:
	test	rdx, rdx
	je	LBB10_16
	cmp	rax, r12
	jne	LBB10_23
	cmp	rdx, r13
	jne	LBB10_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB10_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB10_27
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp449:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17he2e0ed02bd580b5bE
Ltmp450:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB10_33
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp451:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp452:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB10_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB10_33
LBB10_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB10_18
Ltmp462:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp463:
LBB10_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB10_19
LBB10_33:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB10_19:
	test	rax, rax
	je	LBB10_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp465:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp466:
	jmp	LBB10_6
LBB10_5:
Ltmp470:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp471:
	jmp	LBB10_6
LBB10_35:
Ltmp467:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp468:
	jmp	LBB10_6
LBB10_7:
Ltmp432:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp433:
	jmp	LBB10_6
LBB10_25:
Ltmp456:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp457:
	jmp	LBB10_6
LBB10_27:
Ltmp454:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp455:
LBB10_6:
	ud2
LBB10_46:
Ltmp469:
	jmp	LBB10_40
LBB10_38:
Ltmp464:
	jmp	LBB10_45
LBB10_36:
Ltmp453:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB10_34:
Ltmp458:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp459:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp460:
	jmp	LBB10_41
LBB10_39:
Ltmp461:
LBB10_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB10_10:
Ltmp438:
Ltmp439:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp440:
	test	rax, rax
	je	LBB10_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp441:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp442:
	jmp	LBB10_6
LBB10_44:
Ltmp443:
	jmp	LBB10_45
LBB10_42:
Ltmp472:
	jmp	LBB10_45
LBB10_37:
Ltmp448:
LBB10_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB10_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end10:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table10:
Lexception10:
	.byte	255
	.byte	155
	.uleb128 Lttbase10-Lttbaseref10
Lttbaseref10:
	.byte	1
	.uleb128 Lcst_end10-Lcst_begin10
Lcst_begin10:
	.uleb128 Ltmp430-Lfunc_begin10
	.uleb128 Ltmp435-Ltmp430
	.uleb128 Ltmp472-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp436-Lfunc_begin10
	.uleb128 Ltmp437-Ltmp436
	.uleb128 Ltmp438-Lfunc_begin10
	.byte	3
	.uleb128 Ltmp446-Lfunc_begin10
	.uleb128 Ltmp445-Ltmp446
	.uleb128 Ltmp448-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp449-Lfunc_begin10
	.uleb128 Ltmp450-Ltmp449
	.uleb128 Ltmp458-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp451-Lfunc_begin10
	.uleb128 Ltmp452-Ltmp451
	.uleb128 Ltmp453-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp462-Lfunc_begin10
	.uleb128 Ltmp463-Ltmp462
	.uleb128 Ltmp464-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp465-Lfunc_begin10
	.uleb128 Ltmp466-Ltmp465
	.uleb128 Ltmp469-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp470-Lfunc_begin10
	.uleb128 Ltmp471-Ltmp470
	.uleb128 Ltmp472-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp467-Lfunc_begin10
	.uleb128 Ltmp468-Ltmp467
	.uleb128 Ltmp469-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp432-Lfunc_begin10
	.uleb128 Ltmp433-Ltmp432
	.uleb128 Ltmp472-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp456-Lfunc_begin10
	.uleb128 Ltmp455-Ltmp456
	.uleb128 Ltmp458-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp455-Lfunc_begin10
	.uleb128 Ltmp459-Ltmp455
	.byte	0
	.byte	0
	.uleb128 Ltmp459-Lfunc_begin10
	.uleb128 Ltmp460-Ltmp459
	.uleb128 Ltmp461-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp460-Lfunc_begin10
	.uleb128 Ltmp439-Ltmp460
	.byte	0
	.byte	0
	.uleb128 Ltmp439-Lfunc_begin10
	.uleb128 Ltmp440-Ltmp439
	.uleb128 Ltmp472-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp441-Lfunc_begin10
	.uleb128 Ltmp442-Ltmp441
	.uleb128 Ltmp443-Lfunc_begin10
	.byte	0
	.uleb128 Ltmp442-Lfunc_begin10
	.uleb128 Lfunc_end10-Ltmp442
	.byte	0
	.byte	0
Lcst_end10:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase10:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h481b8c02e05c9cc4E:
Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception11
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 768
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	dword ptr [rsp + 60], ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	r15, rdi
	mov	byte ptr [rsp + 504], 0
	mov	rax, qword ptr [rsi]
	mov	rcx, qword ptr [rsi + 8]
	mov	qword ptr [rsp + 448], rax
	mov	qword ptr [rsp + 456], rcx
	mov	rax, qword ptr [rsi + 16]
	mov	qword ptr [rsp + 464], rax
	mov	rax, qword ptr [rsi + 24]
	mov	qword ptr [rsp + 472], rax
	mov	rax, qword ptr [rsi + 32]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsi + 40]
	mov	qword ptr [rsp + 488], rax
	mov	rax, qword ptr [rsi + 48]
	mov	qword ptr [rsp + 496], rax
	mov	qword ptr [rsp + 320], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	jl	LBB11_4
	add	rsi, rsi
	jb	LBB11_7
	lea	rdi, [rbx + 256]
Ltmp473:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp474:
	mov	rsi, qword ptr [rbx + 272]
LBB11_4:
	sub	rsi, 1
	jb	LBB11_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 320]
	mov	qword ptr [rax + rsi], r13
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17ha1d92ab8f967b530E]
	mov	qword ptr [rax + rsi + 8], rcx
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp477:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp478:
	mov	rax, qword ptr [r12 + 80]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [r12 + 72]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [r12 + 96]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [r12 + 88]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r12 + 56]
	mov	rcx, qword ptr [r12 + 64]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
	mov	r14d, dword ptr [rsp + 60]
	mov	byte ptr [rsp + 112], r14b
	mov	r9, qword ptr [rsp + 80]
	mov	rdi, qword ptr [rsp + 88]
	movdqa	xmm0, xmmword ptr [rsp + 96]
	movdqa	xmm1, xmmword ptr [rsp + 64]
	movq	rcx, xmm1
	pshufd	xmm1, xmm1, 78
	movq	rax, xmm1
	pshufd	xmm1, xmm0, 78
	xor	edx, edx
	test	r14b, r14b
	setne	dl
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	movq	qword ptr [rsp + 192], xmm0
	mov	qword ptr [rsp + 176], r9
	mov	qword ptr [rsp + 184], rdi
Ltmp479:
	movq	qword ptr [rsp], xmm1
	lea	rdi, [rsp + 512]
	lea	r9, [rsp + 176]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h88562aaf0f422f1dE
Ltmp480:
	movaps	xmm0, xmmword ptr [rsp + 512]
	movaps	xmmword ptr [rsp + 272], xmm0
	movaps	xmm0, xmmword ptr [rsp + 528]
	movaps	xmmword ptr [rsp + 256], xmm0
	movaps	xmm0, xmmword ptr [rsp + 544]
	movaps	xmmword ptr [rsp + 240], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 560]
	movdqa	xmmword ptr [rsp + 224], xmm0
	lea	r12, [rsp + 504]
	mov	al, byte ptr [rsp + 504]
	test	al, al
	je	LBB11_12
	jmp	LBB11_16
	.p2align	4, 0x90
LBB11_23:
Ltmp489:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp490:
	movzx	eax, byte ptr [rsp + 504]
	test	al, al
	jne	LBB11_16
LBB11_12:
Ltmp487:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp488:
	test	rdx, rdx
	je	LBB11_14
	cmp	rax, r13
	jne	LBB11_23
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17ha1d92ab8f967b530E]
	cmp	rdx, rcx
	jne	LBB11_23
	lea	rdi, [rsp + 512]
	lea	rsi, [rsp + 320]
	mov	edx, 192
	call	_memcpy
	mov	rsi, qword ptr [rsp + 640]
	mov	rcx, qword ptr [rsp + 648]
	mov	rax, qword ptr [rsp + 656]
	mov	rdx, qword ptr [rsp + 664]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 672]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 680]
	mov	qword ptr [rsp + 80], rdx
	test	rsi, rsi
	je	LBB11_25
	mov	r9, qword ptr [rsp + 688]
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 312], rdi
	mov	rbx, qword ptr [rsp + 64]
	mov	rdx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 304], rdx
	mov	qword ptr [rsp + 296], rbx
	mov	qword ptr [rsp + 216], rdi
	mov	qword ptr [rsp + 208], rdx
	mov	qword ptr [rsp + 200], rbx
	mov	rsi, qword ptr [rsi]
	sub	rsi, qword ptr [rcx]
	jb	LBB11_27
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 192], rax
	mov	rax, qword ptr [rsp + 200]
	mov	rdx, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 184], rdx
	mov	qword ptr [rsp + 176], rax
Ltmp492:
	mov	qword ptr [rsp], r9
	movzx	edx, r14b
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 176]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h88562aaf0f422f1dE
Ltmp493:
	cmp	qword ptr [rsp + 512], 2
	jb	LBB11_33
	mov	r12, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 528]
Ltmp494:
	mov	rdi, r12
	call	qword ptr [rbx]
Ltmp495:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB11_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r12
	call	___rust_dealloc
LBB11_33:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	jmp	LBB11_37
LBB11_14:
	mov	al, byte ptr [rsp + 504]
	test	al, al
	jne	LBB11_16
Ltmp505:
	mov	rdi, rbx
	mov	rsi, r12
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp506:
LBB11_16:
	mov	rax, qword ptr [rsp + 320]
	cmp	rax, 1
	jne	LBB11_17
	movaps	xmm0, xmmword ptr [rsp + 384]
	movaps	xmm1, xmmword ptr [rsp + 400]
	movaps	xmm2, xmmword ptr [rsp + 416]
	movaps	xmm3, xmmword ptr [rsp + 432]
LBB11_37:
	movaps	xmm4, xmmword ptr [rsp + 272]
	movaps	xmmword ptr [r15], xmm4
	movaps	xmm4, xmmword ptr [rsp + 256]
	movaps	xmmword ptr [r15 + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [r15 + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 224]
	movaps	xmmword ptr [r15 + 48], xmm4
	movaps	xmmword ptr [r15 + 64], xmm0
	movaps	xmmword ptr [r15 + 80], xmm1
	movaps	xmmword ptr [r15 + 96], xmm2
	movaps	xmmword ptr [r15 + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB11_17:
	test	rax, rax
	je	LBB11_35
	mov	rdi, qword ptr [rsp + 328]
	mov	rsi, qword ptr [rsp + 336]
Ltmp508:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp509:
	jmp	LBB11_6
LBB11_5:
Ltmp513:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp514:
	jmp	LBB11_6
LBB11_35:
Ltmp510:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp511:
	jmp	LBB11_6
LBB11_7:
Ltmp475:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp476:
	jmp	LBB11_6
LBB11_25:
Ltmp499:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp500:
	jmp	LBB11_6
LBB11_27:
Ltmp497:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp498:
	jmp	LBB11_6
LBB11_47:
Ltmp512:
	jmp	LBB11_42
LBB11_40:
Ltmp507:
	jmp	LBB11_46
LBB11_38:
Ltmp496:
	mov	r14, rax
	mov	rdi, r12
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB11_34:
Ltmp501:
	mov	r14, rax
Ltmp502:
	lea	rdi, [rsp + 512]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp503:
	jmp	LBB11_43
LBB11_41:
Ltmp504:
LBB11_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB11_19:
Ltmp481:
Ltmp482:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp483:
	mov	rcx, rdx
	lea	rsi, [rsp + 504]
Ltmp484:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp485:
LBB11_6:
	ud2
LBB11_45:
Ltmp486:
	jmp	LBB11_46
LBB11_44:
Ltmp515:
	jmp	LBB11_46
LBB11_39:
Ltmp491:
LBB11_46:
	mov	r14, rax
	lea	rdi, [rsp + 320]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB11_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end11:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table11:
Lexception11:
	.byte	255
	.byte	155
	.uleb128 Lttbase11-Lttbaseref11
Lttbaseref11:
	.byte	1
	.uleb128 Lcst_end11-Lcst_begin11
Lcst_begin11:
	.uleb128 Ltmp473-Lfunc_begin11
	.uleb128 Ltmp478-Ltmp473
	.uleb128 Ltmp515-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp479-Lfunc_begin11
	.uleb128 Ltmp480-Ltmp479
	.uleb128 Ltmp481-Lfunc_begin11
	.byte	3
	.uleb128 Ltmp489-Lfunc_begin11
	.uleb128 Ltmp488-Ltmp489
	.uleb128 Ltmp491-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp488-Lfunc_begin11
	.uleb128 Ltmp492-Ltmp488
	.byte	0
	.byte	0
	.uleb128 Ltmp492-Lfunc_begin11
	.uleb128 Ltmp493-Ltmp492
	.uleb128 Ltmp501-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp494-Lfunc_begin11
	.uleb128 Ltmp495-Ltmp494
	.uleb128 Ltmp496-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp505-Lfunc_begin11
	.uleb128 Ltmp506-Ltmp505
	.uleb128 Ltmp507-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp508-Lfunc_begin11
	.uleb128 Ltmp509-Ltmp508
	.uleb128 Ltmp512-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp513-Lfunc_begin11
	.uleb128 Ltmp514-Ltmp513
	.uleb128 Ltmp515-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp510-Lfunc_begin11
	.uleb128 Ltmp511-Ltmp510
	.uleb128 Ltmp512-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp475-Lfunc_begin11
	.uleb128 Ltmp476-Ltmp475
	.uleb128 Ltmp515-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp499-Lfunc_begin11
	.uleb128 Ltmp498-Ltmp499
	.uleb128 Ltmp501-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp498-Lfunc_begin11
	.uleb128 Ltmp502-Ltmp498
	.byte	0
	.byte	0
	.uleb128 Ltmp502-Lfunc_begin11
	.uleb128 Ltmp503-Ltmp502
	.uleb128 Ltmp504-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp503-Lfunc_begin11
	.uleb128 Ltmp482-Ltmp503
	.byte	0
	.byte	0
	.uleb128 Ltmp482-Lfunc_begin11
	.uleb128 Ltmp483-Ltmp482
	.uleb128 Ltmp515-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp484-Lfunc_begin11
	.uleb128 Ltmp485-Ltmp484
	.uleb128 Ltmp486-Lfunc_begin11
	.byte	0
	.uleb128 Ltmp485-Lfunc_begin11
	.uleb128 Lfunc_end11-Ltmp485
	.byte	0
	.byte	0
Lcst_end11:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase11:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h4f66ac2b113b268bE:
Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception12
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 1024
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r8d, ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	qword ptr [rsp + 264], rdi
	mov	byte ptr [rsp + 928], 0
	lea	rdi, [rsp + 832]
	mov	ecx, 12
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 704], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rsp + 240], r8d
	jl	LBB12_4
	add	rsi, rsi
	jb	LBB12_7
	lea	rdi, [rbx + 256]
Ltmp516:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp517:
	mov	rsi, qword ptr [rbx + 272]
LBB12_4:
	sub	rsi, 1
	jb	LBB12_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 704]
	mov	qword ptr [rax + rsi], r13
	lea	r15, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h0fd9205a2cb1e06eE]
	mov	qword ptr [rax + rsi + 8], r15
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp520:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp521:
	movdqu	xmm0, xmmword ptr [r12 + 96]
	movups	xmm1, xmmword ptr [r12 + 112]
	movups	xmm2, xmmword ptr [r12 + 128]
	movups	xmm3, xmmword ptr [r12 + 144]
	mov	r9, qword ptr [r12 + 176]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	rdx, xmm0
	mov	rdi, qword ptr [r12 + 160]
	mov	rax, qword ptr [r12 + 168]
	mov	qword ptr [rsp + 184], rax
	mov	qword ptr [rsp + 176], rdi
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	movups	xmmword ptr [rsp + 416], xmm3
	movups	xmmword ptr [rsp + 400], xmm2
	movups	xmmword ptr [rsp + 384], xmm1
	mov	qword ptr [rsp + 432], rdi
	mov	qword ptr [rsp + 440], rax
Ltmp522:
	mov	qword ptr [rsp], r9
	movzx	r12d, byte ptr [rsp + 240]
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 384]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17ha2f99a0eebe114e4E
Ltmp523:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmmword ptr [rsp + 240], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmmword ptr [rsp + 368], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movaps	xmmword ptr [rsp + 352], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rsp + 336], xmm0
	lea	r14, [rsp + 928]
	mov	al, byte ptr [rsp + 928]
	test	al, al
	je	LBB12_12
	jmp	LBB12_16
	.p2align	4, 0x90
LBB12_23:
Ltmp532:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp533:
	movzx	eax, byte ptr [rsp + 928]
	test	al, al
	jne	LBB12_16
LBB12_12:
Ltmp530:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp531:
	test	rdx, rdx
	je	LBB12_14
	cmp	rax, r13
	jne	LBB12_23
	cmp	rdx, r15
	jne	LBB12_23
	lea	rdi, [rsp + 384]
	lea	rsi, [rsp + 704]
	mov	edx, 256
	call	_memcpy
	mov	r11, qword ptr [rsp + 512]
	mov	r8, qword ptr [rsp + 520]
	mov	r10, qword ptr [rsp + 528]
	mov	rdx, qword ptr [rsp + 536]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 552]
	mov	qword ptr [rsp + 80], rdx
	mov	rdx, qword ptr [rsp + 560]
	mov	qword ptr [rsp + 88], rdx
	mov	rdx, qword ptr [rsp + 568]
	mov	qword ptr [rsp + 96], rdx
	mov	rdx, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 104], rdx
	mov	rdx, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 112], rdx
	mov	rdx, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 120], rdx
	test	r11, r11
	je	LBB12_25
	mov	r9, qword ptr [rsp + 600]
	mov	rdi, qword ptr [rsp + 120]
	mov	qword ptr [rsp + 328], rdi
	mov	r14, qword ptr [rsp + 112]
	mov	qword ptr [rsp + 320], r14
	mov	rbx, qword ptr [rsp + 104]
	mov	qword ptr [rsp + 312], rbx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 304], rdx
	mov	rcx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 296], rcx
	mov	rax, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 288], rax
	mov	rsi, qword ptr [rsp + 64]
	mov	rdi, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 272], rsi
	mov	qword ptr [rsp + 224], r14
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 208], rdx
	mov	qword ptr [rsp + 200], rcx
	mov	qword ptr [rsp + 192], rax
	mov	qword ptr [rsp + 184], rdi
	mov	qword ptr [rsp + 176], rsi
	mov	rax, qword ptr [rsp + 328]
	mov	qword ptr [rsp + 232], rax
	mov	rsi, qword ptr [r11]
	sub	rsi, qword ptr [r8]
	jb	LBB12_33
	mov	rcx, qword ptr [r10]
	mov	r8, qword ptr [r10 + 8]
	mov	rax, qword ptr [rsp + 232]
	mov	qword ptr [rsp + 120], rax
	mov	rax, qword ptr [rsp + 224]
	mov	qword ptr [rsp + 112], rax
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 200]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 192]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 176]
	mov	rdx, qword ptr [rsp + 184]
	mov	qword ptr [rsp + 72], rdx
	mov	qword ptr [rsp + 64], rax
Ltmp535:
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 640]
	lea	r9, [rsp + 64]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17ha2f99a0eebe114e4E
Ltmp536:
	cmp	qword ptr [rsp + 384], 2
	jb	LBB12_32
	mov	r15, qword ptr [rsp + 392]
	mov	rbx, qword ptr [rsp + 400]
Ltmp537:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp538:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB12_32
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
LBB12_32:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movaps	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	jmp	LBB12_37
LBB12_14:
	mov	al, byte ptr [rsp + 928]
	test	al, al
	jne	LBB12_16
Ltmp548:
	mov	rdi, rbx
	mov	rsi, r14
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp549:
LBB12_16:
	mov	rax, qword ptr [rsp + 704]
	cmp	rax, 1
	jne	LBB12_17
	movaps	xmm0, xmmword ptr [rsp + 768]
	movaps	xmm1, xmmword ptr [rsp + 784]
	movaps	xmm2, xmmword ptr [rsp + 800]
	movaps	xmm3, xmmword ptr [rsp + 816]
LBB12_37:
	mov	rax, qword ptr [rsp + 264]
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [rax], xmm4
	movaps	xmm4, xmmword ptr [rsp + 368]
	movaps	xmmword ptr [rax + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 352]
	movaps	xmmword ptr [rax + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 336]
	movaps	xmmword ptr [rax + 48], xmm4
	movaps	xmmword ptr [rax + 64], xmm0
	movaps	xmmword ptr [rax + 80], xmm1
	movaps	xmmword ptr [rax + 96], xmm2
	movaps	xmmword ptr [rax + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB12_17:
	test	rax, rax
	je	LBB12_35
	mov	rdi, qword ptr [rsp + 712]
	mov	rsi, qword ptr [rsp + 720]
Ltmp551:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp552:
	jmp	LBB12_6
LBB12_5:
Ltmp556:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp557:
	jmp	LBB12_6
LBB12_35:
Ltmp553:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp554:
	jmp	LBB12_6
LBB12_7:
Ltmp518:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp519:
	jmp	LBB12_6
LBB12_25:
Ltmp542:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp543:
	jmp	LBB12_6
LBB12_33:
Ltmp540:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp541:
	jmp	LBB12_6
LBB12_47:
Ltmp555:
	jmp	LBB12_42
LBB12_40:
Ltmp550:
	jmp	LBB12_46
LBB12_38:
Ltmp539:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB12_34:
Ltmp544:
	mov	r14, rax
Ltmp545:
	lea	rdi, [rsp + 384]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp546:
	jmp	LBB12_43
LBB12_41:
Ltmp547:
LBB12_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB12_19:
Ltmp524:
Ltmp525:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp526:
	mov	rcx, rdx
	lea	rsi, [rsp + 928]
Ltmp527:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp528:
LBB12_6:
	ud2
LBB12_45:
Ltmp529:
	jmp	LBB12_46
LBB12_44:
Ltmp558:
	jmp	LBB12_46
LBB12_39:
Ltmp534:
LBB12_46:
	mov	r14, rax
	lea	rdi, [rsp + 704]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB12_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end12:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table12:
Lexception12:
	.byte	255
	.byte	155
	.uleb128 Lttbase12-Lttbaseref12
Lttbaseref12:
	.byte	1
	.uleb128 Lcst_end12-Lcst_begin12
Lcst_begin12:
	.uleb128 Ltmp516-Lfunc_begin12
	.uleb128 Ltmp521-Ltmp516
	.uleb128 Ltmp558-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp522-Lfunc_begin12
	.uleb128 Ltmp523-Ltmp522
	.uleb128 Ltmp524-Lfunc_begin12
	.byte	3
	.uleb128 Ltmp532-Lfunc_begin12
	.uleb128 Ltmp531-Ltmp532
	.uleb128 Ltmp534-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp531-Lfunc_begin12
	.uleb128 Ltmp535-Ltmp531
	.byte	0
	.byte	0
	.uleb128 Ltmp535-Lfunc_begin12
	.uleb128 Ltmp536-Ltmp535
	.uleb128 Ltmp544-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp537-Lfunc_begin12
	.uleb128 Ltmp538-Ltmp537
	.uleb128 Ltmp539-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp548-Lfunc_begin12
	.uleb128 Ltmp549-Ltmp548
	.uleb128 Ltmp550-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp551-Lfunc_begin12
	.uleb128 Ltmp552-Ltmp551
	.uleb128 Ltmp555-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp556-Lfunc_begin12
	.uleb128 Ltmp557-Ltmp556
	.uleb128 Ltmp558-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp553-Lfunc_begin12
	.uleb128 Ltmp554-Ltmp553
	.uleb128 Ltmp555-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp518-Lfunc_begin12
	.uleb128 Ltmp519-Ltmp518
	.uleb128 Ltmp558-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp542-Lfunc_begin12
	.uleb128 Ltmp541-Ltmp542
	.uleb128 Ltmp544-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp541-Lfunc_begin12
	.uleb128 Ltmp545-Ltmp541
	.byte	0
	.byte	0
	.uleb128 Ltmp545-Lfunc_begin12
	.uleb128 Ltmp546-Ltmp545
	.uleb128 Ltmp547-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp546-Lfunc_begin12
	.uleb128 Ltmp525-Ltmp546
	.byte	0
	.byte	0
	.uleb128 Ltmp525-Lfunc_begin12
	.uleb128 Ltmp526-Ltmp525
	.uleb128 Ltmp558-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp527-Lfunc_begin12
	.uleb128 Ltmp528-Ltmp527
	.uleb128 Ltmp529-Lfunc_begin12
	.byte	0
	.uleb128 Ltmp528-Lfunc_begin12
	.uleb128 Lfunc_end12-Ltmp528
	.byte	0
	.byte	0
Lcst_end12:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase12:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h52f524c866d61f1cE:
Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception13
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 768
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	dword ptr [rsp + 60], ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	r15, rdi
	mov	byte ptr [rsp + 504], 0
	mov	rax, qword ptr [rsi]
	mov	rcx, qword ptr [rsi + 8]
	mov	qword ptr [rsp + 448], rax
	mov	qword ptr [rsp + 456], rcx
	mov	rax, qword ptr [rsi + 16]
	mov	qword ptr [rsp + 464], rax
	mov	rax, qword ptr [rsi + 24]
	mov	qword ptr [rsp + 472], rax
	mov	rax, qword ptr [rsi + 32]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsi + 40]
	mov	qword ptr [rsp + 488], rax
	mov	rax, qword ptr [rsi + 48]
	mov	qword ptr [rsp + 496], rax
	mov	qword ptr [rsp + 320], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	jl	LBB13_4
	add	rsi, rsi
	jb	LBB13_7
	lea	rdi, [rbx + 256]
Ltmp559:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp560:
	mov	rsi, qword ptr [rbx + 272]
LBB13_4:
	sub	rsi, 1
	jb	LBB13_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 320]
	mov	qword ptr [rax + rsi], r13
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h006e09d4d7103f8cE]
	mov	qword ptr [rax + rsi + 8], rcx
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp563:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp564:
	mov	rax, qword ptr [r12 + 80]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [r12 + 72]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [r12 + 96]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [r12 + 88]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r12 + 56]
	mov	rcx, qword ptr [r12 + 64]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
	mov	r14d, dword ptr [rsp + 60]
	mov	byte ptr [rsp + 112], r14b
	mov	r9, qword ptr [rsp + 80]
	mov	rdi, qword ptr [rsp + 88]
	movdqa	xmm0, xmmword ptr [rsp + 96]
	movdqa	xmm1, xmmword ptr [rsp + 64]
	movq	rcx, xmm1
	pshufd	xmm1, xmm1, 78
	movq	rax, xmm1
	pshufd	xmm1, xmm0, 78
	xor	edx, edx
	test	r14b, r14b
	setne	dl
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	movq	qword ptr [rsp + 192], xmm0
	mov	qword ptr [rsp + 176], r9
	mov	qword ptr [rsp + 184], rdi
Ltmp565:
	movq	qword ptr [rsp], xmm1
	lea	rdi, [rsp + 512]
	lea	r9, [rsp + 176]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf8f8293b3b524e6eE
Ltmp566:
	movaps	xmm0, xmmword ptr [rsp + 512]
	movaps	xmmword ptr [rsp + 272], xmm0
	movaps	xmm0, xmmword ptr [rsp + 528]
	movaps	xmmword ptr [rsp + 256], xmm0
	movaps	xmm0, xmmword ptr [rsp + 544]
	movaps	xmmword ptr [rsp + 240], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 560]
	movdqa	xmmword ptr [rsp + 224], xmm0
	lea	r12, [rsp + 504]
	mov	al, byte ptr [rsp + 504]
	test	al, al
	je	LBB13_12
	jmp	LBB13_16
	.p2align	4, 0x90
LBB13_23:
Ltmp575:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp576:
	movzx	eax, byte ptr [rsp + 504]
	test	al, al
	jne	LBB13_16
LBB13_12:
Ltmp573:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp574:
	test	rdx, rdx
	je	LBB13_14
	cmp	rax, r13
	jne	LBB13_23
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h006e09d4d7103f8cE]
	cmp	rdx, rcx
	jne	LBB13_23
	lea	rdi, [rsp + 512]
	lea	rsi, [rsp + 320]
	mov	edx, 192
	call	_memcpy
	mov	rsi, qword ptr [rsp + 640]
	mov	rcx, qword ptr [rsp + 648]
	mov	rax, qword ptr [rsp + 656]
	mov	rdx, qword ptr [rsp + 664]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 672]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 680]
	mov	qword ptr [rsp + 80], rdx
	test	rsi, rsi
	je	LBB13_25
	mov	r9, qword ptr [rsp + 688]
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 312], rdi
	mov	rbx, qword ptr [rsp + 64]
	mov	rdx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 304], rdx
	mov	qword ptr [rsp + 296], rbx
	mov	qword ptr [rsp + 216], rdi
	mov	qword ptr [rsp + 208], rdx
	mov	qword ptr [rsp + 200], rbx
	mov	rsi, qword ptr [rsi]
	sub	rsi, qword ptr [rcx]
	jb	LBB13_33
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 192], rax
	mov	rax, qword ptr [rsp + 200]
	mov	rdx, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 184], rdx
	mov	qword ptr [rsp + 176], rax
Ltmp578:
	mov	qword ptr [rsp], r9
	movzx	edx, r14b
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 176]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf8f8293b3b524e6eE
Ltmp579:
	cmp	qword ptr [rsp + 512], 2
	jb	LBB13_32
	mov	r12, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 528]
Ltmp580:
	mov	rdi, r12
	call	qword ptr [rbx]
Ltmp581:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB13_32
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r12
	call	___rust_dealloc
LBB13_32:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	jmp	LBB13_37
LBB13_14:
	mov	al, byte ptr [rsp + 504]
	test	al, al
	jne	LBB13_16
Ltmp591:
	mov	rdi, rbx
	mov	rsi, r12
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp592:
LBB13_16:
	mov	rax, qword ptr [rsp + 320]
	cmp	rax, 1
	jne	LBB13_17
	movaps	xmm0, xmmword ptr [rsp + 384]
	movaps	xmm1, xmmword ptr [rsp + 400]
	movaps	xmm2, xmmword ptr [rsp + 416]
	movaps	xmm3, xmmword ptr [rsp + 432]
LBB13_37:
	movaps	xmm4, xmmword ptr [rsp + 272]
	movaps	xmmword ptr [r15], xmm4
	movaps	xmm4, xmmword ptr [rsp + 256]
	movaps	xmmword ptr [r15 + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [r15 + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 224]
	movaps	xmmword ptr [r15 + 48], xmm4
	movaps	xmmword ptr [r15 + 64], xmm0
	movaps	xmmword ptr [r15 + 80], xmm1
	movaps	xmmword ptr [r15 + 96], xmm2
	movaps	xmmword ptr [r15 + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB13_17:
	test	rax, rax
	je	LBB13_35
	mov	rdi, qword ptr [rsp + 328]
	mov	rsi, qword ptr [rsp + 336]
Ltmp594:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp595:
	jmp	LBB13_6
LBB13_5:
Ltmp599:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp600:
	jmp	LBB13_6
LBB13_35:
Ltmp596:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp597:
	jmp	LBB13_6
LBB13_7:
Ltmp561:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp562:
	jmp	LBB13_6
LBB13_25:
Ltmp585:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp586:
	jmp	LBB13_6
LBB13_33:
Ltmp583:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp584:
	jmp	LBB13_6
LBB13_47:
Ltmp598:
	jmp	LBB13_42
LBB13_40:
Ltmp593:
	jmp	LBB13_46
LBB13_38:
Ltmp582:
	mov	r14, rax
	mov	rdi, r12
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB13_34:
Ltmp587:
	mov	r14, rax
Ltmp588:
	lea	rdi, [rsp + 512]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp589:
	jmp	LBB13_43
LBB13_41:
Ltmp590:
LBB13_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB13_19:
Ltmp567:
Ltmp568:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp569:
	mov	rcx, rdx
	lea	rsi, [rsp + 504]
Ltmp570:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp571:
LBB13_6:
	ud2
LBB13_45:
Ltmp572:
	jmp	LBB13_46
LBB13_44:
Ltmp601:
	jmp	LBB13_46
LBB13_39:
Ltmp577:
LBB13_46:
	mov	r14, rax
	lea	rdi, [rsp + 320]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB13_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end13:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table13:
Lexception13:
	.byte	255
	.byte	155
	.uleb128 Lttbase13-Lttbaseref13
Lttbaseref13:
	.byte	1
	.uleb128 Lcst_end13-Lcst_begin13
Lcst_begin13:
	.uleb128 Ltmp559-Lfunc_begin13
	.uleb128 Ltmp564-Ltmp559
	.uleb128 Ltmp601-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp565-Lfunc_begin13
	.uleb128 Ltmp566-Ltmp565
	.uleb128 Ltmp567-Lfunc_begin13
	.byte	3
	.uleb128 Ltmp575-Lfunc_begin13
	.uleb128 Ltmp574-Ltmp575
	.uleb128 Ltmp577-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp574-Lfunc_begin13
	.uleb128 Ltmp578-Ltmp574
	.byte	0
	.byte	0
	.uleb128 Ltmp578-Lfunc_begin13
	.uleb128 Ltmp579-Ltmp578
	.uleb128 Ltmp587-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp580-Lfunc_begin13
	.uleb128 Ltmp581-Ltmp580
	.uleb128 Ltmp582-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp591-Lfunc_begin13
	.uleb128 Ltmp592-Ltmp591
	.uleb128 Ltmp593-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp594-Lfunc_begin13
	.uleb128 Ltmp595-Ltmp594
	.uleb128 Ltmp598-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp599-Lfunc_begin13
	.uleb128 Ltmp600-Ltmp599
	.uleb128 Ltmp601-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp596-Lfunc_begin13
	.uleb128 Ltmp597-Ltmp596
	.uleb128 Ltmp598-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp561-Lfunc_begin13
	.uleb128 Ltmp562-Ltmp561
	.uleb128 Ltmp601-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp585-Lfunc_begin13
	.uleb128 Ltmp584-Ltmp585
	.uleb128 Ltmp587-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp584-Lfunc_begin13
	.uleb128 Ltmp588-Ltmp584
	.byte	0
	.byte	0
	.uleb128 Ltmp588-Lfunc_begin13
	.uleb128 Ltmp589-Ltmp588
	.uleb128 Ltmp590-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp589-Lfunc_begin13
	.uleb128 Ltmp568-Ltmp589
	.byte	0
	.byte	0
	.uleb128 Ltmp568-Lfunc_begin13
	.uleb128 Ltmp569-Ltmp568
	.uleb128 Ltmp601-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp570-Lfunc_begin13
	.uleb128 Ltmp571-Ltmp570
	.uleb128 Ltmp572-Lfunc_begin13
	.byte	0
	.uleb128 Ltmp571-Lfunc_begin13
	.uleb128 Lfunc_end13-Ltmp571
	.byte	0
	.byte	0
Lcst_end13:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase13:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h6b8f521016c729d0E:
Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception14
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 1024
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r8d, ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	qword ptr [rsp + 264], rdi
	mov	byte ptr [rsp + 928], 0
	lea	rdi, [rsp + 832]
	mov	ecx, 12
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 704], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rsp + 240], r8d
	jl	LBB14_4
	add	rsi, rsi
	jb	LBB14_7
	lea	rdi, [rbx + 256]
Ltmp602:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp603:
	mov	rsi, qword ptr [rbx + 272]
LBB14_4:
	sub	rsi, 1
	jb	LBB14_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 704]
	mov	qword ptr [rax + rsi], r13
	lea	r15, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hd23e8ab73b0a4946E]
	mov	qword ptr [rax + rsi + 8], r15
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp606:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp607:
	movdqu	xmm0, xmmword ptr [r12 + 96]
	movups	xmm1, xmmword ptr [r12 + 112]
	movups	xmm2, xmmword ptr [r12 + 128]
	movups	xmm3, xmmword ptr [r12 + 144]
	mov	r9, qword ptr [r12 + 176]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	rdx, xmm0
	mov	rdi, qword ptr [r12 + 160]
	mov	rax, qword ptr [r12 + 168]
	mov	qword ptr [rsp + 184], rax
	mov	qword ptr [rsp + 176], rdi
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	movups	xmmword ptr [rsp + 416], xmm3
	movups	xmmword ptr [rsp + 400], xmm2
	movups	xmmword ptr [rsp + 384], xmm1
	mov	qword ptr [rsp + 432], rdi
	mov	qword ptr [rsp + 440], rax
Ltmp608:
	mov	qword ptr [rsp], r9
	movzx	r12d, byte ptr [rsp + 240]
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 384]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h2eb6b78daa809218E
Ltmp609:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmmword ptr [rsp + 240], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmmword ptr [rsp + 368], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movaps	xmmword ptr [rsp + 352], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rsp + 336], xmm0
	lea	r14, [rsp + 928]
	mov	al, byte ptr [rsp + 928]
	test	al, al
	je	LBB14_12
	jmp	LBB14_16
	.p2align	4, 0x90
LBB14_23:
Ltmp618:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp619:
	movzx	eax, byte ptr [rsp + 928]
	test	al, al
	jne	LBB14_16
LBB14_12:
Ltmp616:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp617:
	test	rdx, rdx
	je	LBB14_14
	cmp	rax, r13
	jne	LBB14_23
	cmp	rdx, r15
	jne	LBB14_23
	lea	rdi, [rsp + 384]
	lea	rsi, [rsp + 704]
	mov	edx, 256
	call	_memcpy
	mov	r11, qword ptr [rsp + 512]
	mov	r8, qword ptr [rsp + 520]
	mov	r10, qword ptr [rsp + 528]
	mov	rdx, qword ptr [rsp + 536]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 552]
	mov	qword ptr [rsp + 80], rdx
	mov	rdx, qword ptr [rsp + 560]
	mov	qword ptr [rsp + 88], rdx
	mov	rdx, qword ptr [rsp + 568]
	mov	qword ptr [rsp + 96], rdx
	mov	rdx, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 104], rdx
	mov	rdx, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 112], rdx
	mov	rdx, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 120], rdx
	test	r11, r11
	je	LBB14_25
	mov	r9, qword ptr [rsp + 600]
	mov	rdi, qword ptr [rsp + 120]
	mov	qword ptr [rsp + 328], rdi
	mov	r14, qword ptr [rsp + 112]
	mov	qword ptr [rsp + 320], r14
	mov	rbx, qword ptr [rsp + 104]
	mov	qword ptr [rsp + 312], rbx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 304], rdx
	mov	rcx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 296], rcx
	mov	rax, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 288], rax
	mov	rsi, qword ptr [rsp + 64]
	mov	rdi, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 272], rsi
	mov	qword ptr [rsp + 224], r14
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 208], rdx
	mov	qword ptr [rsp + 200], rcx
	mov	qword ptr [rsp + 192], rax
	mov	qword ptr [rsp + 184], rdi
	mov	qword ptr [rsp + 176], rsi
	mov	rax, qword ptr [rsp + 328]
	mov	qword ptr [rsp + 232], rax
	mov	rsi, qword ptr [r11]
	sub	rsi, qword ptr [r8]
	jb	LBB14_27
	mov	rcx, qword ptr [r10]
	mov	r8, qword ptr [r10 + 8]
	mov	rax, qword ptr [rsp + 232]
	mov	qword ptr [rsp + 120], rax
	mov	rax, qword ptr [rsp + 224]
	mov	qword ptr [rsp + 112], rax
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 200]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 192]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 176]
	mov	rdx, qword ptr [rsp + 184]
	mov	qword ptr [rsp + 72], rdx
	mov	qword ptr [rsp + 64], rax
Ltmp621:
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 640]
	lea	r9, [rsp + 64]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h2eb6b78daa809218E
Ltmp622:
	cmp	qword ptr [rsp + 384], 2
	jb	LBB14_33
	mov	r15, qword ptr [rsp + 392]
	mov	rbx, qword ptr [rsp + 400]
Ltmp623:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp624:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB14_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
LBB14_33:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movaps	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	jmp	LBB14_37
LBB14_14:
	mov	al, byte ptr [rsp + 928]
	test	al, al
	jne	LBB14_16
Ltmp634:
	mov	rdi, rbx
	mov	rsi, r14
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp635:
LBB14_16:
	mov	rax, qword ptr [rsp + 704]
	cmp	rax, 1
	jne	LBB14_17
	movaps	xmm0, xmmword ptr [rsp + 768]
	movaps	xmm1, xmmword ptr [rsp + 784]
	movaps	xmm2, xmmword ptr [rsp + 800]
	movaps	xmm3, xmmword ptr [rsp + 816]
LBB14_37:
	mov	rax, qword ptr [rsp + 264]
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [rax], xmm4
	movaps	xmm4, xmmword ptr [rsp + 368]
	movaps	xmmword ptr [rax + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 352]
	movaps	xmmword ptr [rax + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 336]
	movaps	xmmword ptr [rax + 48], xmm4
	movaps	xmmword ptr [rax + 64], xmm0
	movaps	xmmword ptr [rax + 80], xmm1
	movaps	xmmword ptr [rax + 96], xmm2
	movaps	xmmword ptr [rax + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB14_17:
	test	rax, rax
	je	LBB14_35
	mov	rdi, qword ptr [rsp + 712]
	mov	rsi, qword ptr [rsp + 720]
Ltmp637:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp638:
	jmp	LBB14_6
LBB14_5:
Ltmp642:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp643:
	jmp	LBB14_6
LBB14_35:
Ltmp639:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp640:
	jmp	LBB14_6
LBB14_7:
Ltmp604:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp605:
	jmp	LBB14_6
LBB14_25:
Ltmp628:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp629:
	jmp	LBB14_6
LBB14_27:
Ltmp626:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp627:
	jmp	LBB14_6
LBB14_47:
Ltmp641:
	jmp	LBB14_42
LBB14_40:
Ltmp636:
	jmp	LBB14_46
LBB14_38:
Ltmp625:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB14_34:
Ltmp630:
	mov	r14, rax
Ltmp631:
	lea	rdi, [rsp + 384]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp632:
	jmp	LBB14_43
LBB14_41:
Ltmp633:
LBB14_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB14_19:
Ltmp610:
Ltmp611:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp612:
	mov	rcx, rdx
	lea	rsi, [rsp + 928]
Ltmp613:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp614:
LBB14_6:
	ud2
LBB14_45:
Ltmp615:
	jmp	LBB14_46
LBB14_44:
Ltmp644:
	jmp	LBB14_46
LBB14_39:
Ltmp620:
LBB14_46:
	mov	r14, rax
	lea	rdi, [rsp + 704]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB14_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end14:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table14:
Lexception14:
	.byte	255
	.byte	155
	.uleb128 Lttbase14-Lttbaseref14
Lttbaseref14:
	.byte	1
	.uleb128 Lcst_end14-Lcst_begin14
Lcst_begin14:
	.uleb128 Ltmp602-Lfunc_begin14
	.uleb128 Ltmp607-Ltmp602
	.uleb128 Ltmp644-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp608-Lfunc_begin14
	.uleb128 Ltmp609-Ltmp608
	.uleb128 Ltmp610-Lfunc_begin14
	.byte	3
	.uleb128 Ltmp618-Lfunc_begin14
	.uleb128 Ltmp617-Ltmp618
	.uleb128 Ltmp620-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp617-Lfunc_begin14
	.uleb128 Ltmp621-Ltmp617
	.byte	0
	.byte	0
	.uleb128 Ltmp621-Lfunc_begin14
	.uleb128 Ltmp622-Ltmp621
	.uleb128 Ltmp630-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp623-Lfunc_begin14
	.uleb128 Ltmp624-Ltmp623
	.uleb128 Ltmp625-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp634-Lfunc_begin14
	.uleb128 Ltmp635-Ltmp634
	.uleb128 Ltmp636-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp637-Lfunc_begin14
	.uleb128 Ltmp638-Ltmp637
	.uleb128 Ltmp641-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp642-Lfunc_begin14
	.uleb128 Ltmp643-Ltmp642
	.uleb128 Ltmp644-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp639-Lfunc_begin14
	.uleb128 Ltmp640-Ltmp639
	.uleb128 Ltmp641-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp604-Lfunc_begin14
	.uleb128 Ltmp605-Ltmp604
	.uleb128 Ltmp644-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp628-Lfunc_begin14
	.uleb128 Ltmp627-Ltmp628
	.uleb128 Ltmp630-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp627-Lfunc_begin14
	.uleb128 Ltmp631-Ltmp627
	.byte	0
	.byte	0
	.uleb128 Ltmp631-Lfunc_begin14
	.uleb128 Ltmp632-Ltmp631
	.uleb128 Ltmp633-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp632-Lfunc_begin14
	.uleb128 Ltmp611-Ltmp632
	.byte	0
	.byte	0
	.uleb128 Ltmp611-Lfunc_begin14
	.uleb128 Ltmp612-Ltmp611
	.uleb128 Ltmp644-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp613-Lfunc_begin14
	.uleb128 Ltmp614-Ltmp613
	.uleb128 Ltmp615-Lfunc_begin14
	.byte	0
	.uleb128 Ltmp614-Lfunc_begin14
	.uleb128 Lfunc_end14-Ltmp614
	.byte	0
	.byte	0
Lcst_end14:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase14:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h702911570b428847E:
Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception15
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 1024
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r8d, ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	qword ptr [rsp + 264], rdi
	mov	byte ptr [rsp + 928], 0
	lea	rdi, [rsp + 832]
	mov	ecx, 12
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 704], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rsp + 240], r8d
	jl	LBB15_4
	add	rsi, rsi
	jb	LBB15_7
	lea	rdi, [rbx + 256]
Ltmp645:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp646:
	mov	rsi, qword ptr [rbx + 272]
LBB15_4:
	sub	rsi, 1
	jb	LBB15_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 704]
	mov	qword ptr [rax + rsi], r13
	lea	r15, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hdece5c6b42c6eff4E]
	mov	qword ptr [rax + rsi + 8], r15
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp649:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp650:
	movdqu	xmm0, xmmword ptr [r12 + 96]
	movups	xmm1, xmmword ptr [r12 + 112]
	movups	xmm2, xmmword ptr [r12 + 128]
	movups	xmm3, xmmword ptr [r12 + 144]
	mov	r9, qword ptr [r12 + 176]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	rdx, xmm0
	mov	rdi, qword ptr [r12 + 160]
	mov	rax, qword ptr [r12 + 168]
	mov	qword ptr [rsp + 184], rax
	mov	qword ptr [rsp + 176], rdi
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	movups	xmmword ptr [rsp + 416], xmm3
	movups	xmmword ptr [rsp + 400], xmm2
	movups	xmmword ptr [rsp + 384], xmm1
	mov	qword ptr [rsp + 432], rdi
	mov	qword ptr [rsp + 440], rax
Ltmp651:
	mov	qword ptr [rsp], r9
	movzx	r12d, byte ptr [rsp + 240]
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 384]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h134d0549b874d7b0E
Ltmp652:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmmword ptr [rsp + 240], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmmword ptr [rsp + 368], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movaps	xmmword ptr [rsp + 352], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rsp + 336], xmm0
	lea	r14, [rsp + 928]
	mov	al, byte ptr [rsp + 928]
	test	al, al
	je	LBB15_12
	jmp	LBB15_16
	.p2align	4, 0x90
LBB15_23:
Ltmp661:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp662:
	movzx	eax, byte ptr [rsp + 928]
	test	al, al
	jne	LBB15_16
LBB15_12:
Ltmp659:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp660:
	test	rdx, rdx
	je	LBB15_14
	cmp	rax, r13
	jne	LBB15_23
	cmp	rdx, r15
	jne	LBB15_23
	lea	rdi, [rsp + 384]
	lea	rsi, [rsp + 704]
	mov	edx, 256
	call	_memcpy
	mov	r11, qword ptr [rsp + 512]
	mov	r8, qword ptr [rsp + 520]
	mov	r10, qword ptr [rsp + 528]
	mov	rdx, qword ptr [rsp + 536]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 552]
	mov	qword ptr [rsp + 80], rdx
	mov	rdx, qword ptr [rsp + 560]
	mov	qword ptr [rsp + 88], rdx
	mov	rdx, qword ptr [rsp + 568]
	mov	qword ptr [rsp + 96], rdx
	mov	rdx, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 104], rdx
	mov	rdx, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 112], rdx
	mov	rdx, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 120], rdx
	test	r11, r11
	je	LBB15_25
	mov	r9, qword ptr [rsp + 600]
	mov	rdi, qword ptr [rsp + 120]
	mov	qword ptr [rsp + 328], rdi
	mov	r14, qword ptr [rsp + 112]
	mov	qword ptr [rsp + 320], r14
	mov	rbx, qword ptr [rsp + 104]
	mov	qword ptr [rsp + 312], rbx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 304], rdx
	mov	rcx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 296], rcx
	mov	rax, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 288], rax
	mov	rsi, qword ptr [rsp + 64]
	mov	rdi, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 272], rsi
	mov	qword ptr [rsp + 224], r14
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 208], rdx
	mov	qword ptr [rsp + 200], rcx
	mov	qword ptr [rsp + 192], rax
	mov	qword ptr [rsp + 184], rdi
	mov	qword ptr [rsp + 176], rsi
	mov	rax, qword ptr [rsp + 328]
	mov	qword ptr [rsp + 232], rax
	mov	rsi, qword ptr [r11]
	sub	rsi, qword ptr [r8]
	jb	LBB15_27
	mov	rcx, qword ptr [r10]
	mov	r8, qword ptr [r10 + 8]
	mov	rax, qword ptr [rsp + 232]
	mov	qword ptr [rsp + 120], rax
	mov	rax, qword ptr [rsp + 224]
	mov	qword ptr [rsp + 112], rax
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 200]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 192]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 176]
	mov	rdx, qword ptr [rsp + 184]
	mov	qword ptr [rsp + 72], rdx
	mov	qword ptr [rsp + 64], rax
Ltmp664:
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 640]
	lea	r9, [rsp + 64]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h134d0549b874d7b0E
Ltmp665:
	cmp	qword ptr [rsp + 384], 2
	jb	LBB15_33
	mov	r15, qword ptr [rsp + 392]
	mov	rbx, qword ptr [rsp + 400]
Ltmp666:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp667:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB15_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
LBB15_33:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movaps	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	jmp	LBB15_37
LBB15_14:
	mov	al, byte ptr [rsp + 928]
	test	al, al
	jne	LBB15_16
Ltmp677:
	mov	rdi, rbx
	mov	rsi, r14
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp678:
LBB15_16:
	mov	rax, qword ptr [rsp + 704]
	cmp	rax, 1
	jne	LBB15_17
	movaps	xmm0, xmmword ptr [rsp + 768]
	movaps	xmm1, xmmword ptr [rsp + 784]
	movaps	xmm2, xmmword ptr [rsp + 800]
	movaps	xmm3, xmmword ptr [rsp + 816]
LBB15_37:
	mov	rax, qword ptr [rsp + 264]
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [rax], xmm4
	movaps	xmm4, xmmword ptr [rsp + 368]
	movaps	xmmword ptr [rax + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 352]
	movaps	xmmword ptr [rax + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 336]
	movaps	xmmword ptr [rax + 48], xmm4
	movaps	xmmword ptr [rax + 64], xmm0
	movaps	xmmword ptr [rax + 80], xmm1
	movaps	xmmword ptr [rax + 96], xmm2
	movaps	xmmword ptr [rax + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB15_17:
	test	rax, rax
	je	LBB15_35
	mov	rdi, qword ptr [rsp + 712]
	mov	rsi, qword ptr [rsp + 720]
Ltmp680:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp681:
	jmp	LBB15_6
LBB15_5:
Ltmp685:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp686:
	jmp	LBB15_6
LBB15_35:
Ltmp682:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp683:
	jmp	LBB15_6
LBB15_7:
Ltmp647:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp648:
	jmp	LBB15_6
LBB15_25:
Ltmp671:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp672:
	jmp	LBB15_6
LBB15_27:
Ltmp669:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp670:
	jmp	LBB15_6
LBB15_47:
Ltmp684:
	jmp	LBB15_42
LBB15_40:
Ltmp679:
	jmp	LBB15_46
LBB15_38:
Ltmp668:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB15_34:
Ltmp673:
	mov	r14, rax
Ltmp674:
	lea	rdi, [rsp + 384]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp675:
	jmp	LBB15_43
LBB15_41:
Ltmp676:
LBB15_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB15_19:
Ltmp653:
Ltmp654:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp655:
	mov	rcx, rdx
	lea	rsi, [rsp + 928]
Ltmp656:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp657:
LBB15_6:
	ud2
LBB15_45:
Ltmp658:
	jmp	LBB15_46
LBB15_44:
Ltmp687:
	jmp	LBB15_46
LBB15_39:
Ltmp663:
LBB15_46:
	mov	r14, rax
	lea	rdi, [rsp + 704]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB15_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end15:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table15:
Lexception15:
	.byte	255
	.byte	155
	.uleb128 Lttbase15-Lttbaseref15
Lttbaseref15:
	.byte	1
	.uleb128 Lcst_end15-Lcst_begin15
Lcst_begin15:
	.uleb128 Ltmp645-Lfunc_begin15
	.uleb128 Ltmp650-Ltmp645
	.uleb128 Ltmp687-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp651-Lfunc_begin15
	.uleb128 Ltmp652-Ltmp651
	.uleb128 Ltmp653-Lfunc_begin15
	.byte	3
	.uleb128 Ltmp661-Lfunc_begin15
	.uleb128 Ltmp660-Ltmp661
	.uleb128 Ltmp663-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp660-Lfunc_begin15
	.uleb128 Ltmp664-Ltmp660
	.byte	0
	.byte	0
	.uleb128 Ltmp664-Lfunc_begin15
	.uleb128 Ltmp665-Ltmp664
	.uleb128 Ltmp673-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp666-Lfunc_begin15
	.uleb128 Ltmp667-Ltmp666
	.uleb128 Ltmp668-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp677-Lfunc_begin15
	.uleb128 Ltmp678-Ltmp677
	.uleb128 Ltmp679-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp680-Lfunc_begin15
	.uleb128 Ltmp681-Ltmp680
	.uleb128 Ltmp684-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp685-Lfunc_begin15
	.uleb128 Ltmp686-Ltmp685
	.uleb128 Ltmp687-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp682-Lfunc_begin15
	.uleb128 Ltmp683-Ltmp682
	.uleb128 Ltmp684-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp647-Lfunc_begin15
	.uleb128 Ltmp648-Ltmp647
	.uleb128 Ltmp687-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp671-Lfunc_begin15
	.uleb128 Ltmp670-Ltmp671
	.uleb128 Ltmp673-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp670-Lfunc_begin15
	.uleb128 Ltmp674-Ltmp670
	.byte	0
	.byte	0
	.uleb128 Ltmp674-Lfunc_begin15
	.uleb128 Ltmp675-Ltmp674
	.uleb128 Ltmp676-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp675-Lfunc_begin15
	.uleb128 Ltmp654-Ltmp675
	.byte	0
	.byte	0
	.uleb128 Ltmp654-Lfunc_begin15
	.uleb128 Ltmp655-Ltmp654
	.uleb128 Ltmp687-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp656-Lfunc_begin15
	.uleb128 Ltmp657-Ltmp656
	.uleb128 Ltmp658-Lfunc_begin15
	.byte	0
	.uleb128 Ltmp657-Lfunc_begin15
	.uleb128 Lfunc_end15-Ltmp657
	.byte	0
	.byte	0
Lcst_end15:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase15:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h88842e955f57968cE:
Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception16
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 896
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	dword ptr [rsp + 60], ecx
	mov	r12, rdx
	mov	rbx, rsi
	mov	r15, rdi
	mov	byte ptr [rsp + 512], 0
	mov	rax, qword ptr [rsi]
	mov	rcx, qword ptr [rsi + 8]
	mov	qword ptr [rsp + 448], rax
	mov	qword ptr [rsp + 456], rcx
	mov	rax, qword ptr [rsi + 16]
	mov	qword ptr [rsp + 464], rax
	mov	rax, qword ptr [rsi + 24]
	mov	qword ptr [rsp + 472], rax
	mov	rax, qword ptr [rsi + 32]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsi + 40]
	mov	qword ptr [rsp + 488], rax
	mov	rax, qword ptr [rsi + 48]
	mov	qword ptr [rsp + 496], rax
	mov	rax, qword ptr [rsi + 56]
	mov	qword ptr [rsp + 504], rax
	mov	qword ptr [rsp + 320], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	jl	LBB16_4
	add	rsi, rsi
	jb	LBB16_7
	lea	rdi, [r12 + 256]
Ltmp688:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp689:
	mov	rsi, qword ptr [r12 + 272]
LBB16_4:
	sub	rsi, 1
	jb	LBB16_5
	mov	rax, qword ptr [r12 + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 320]
	mov	qword ptr [rax + rsi], r13
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h97eed5dde8a9bab4E]
	mov	qword ptr [rax + rsi + 8], rcx
	##MEMBARRIER
	mov	rax, qword ptr [r12 + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [r12 + 304]
	mov	rsi, qword ptr [r12 + 288]
Ltmp692:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp693:
	mov	rax, qword ptr [rbx + 88]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rbx + 80]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rbx + 112]
	mov	qword ptr [rsp + 112], rax
	mov	rax, qword ptr [rbx + 104]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [rbx + 96]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rbx + 64]
	mov	rcx, qword ptr [rbx + 72]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
	mov	r14d, dword ptr [rsp + 60]
	mov	byte ptr [rsp + 120], r14b
	mov	rax, qword ptr [rsp + 80]
	mov	rdi, qword ptr [rsp + 88]
	movdqa	xmm0, xmmword ptr [rsp + 112]
	movdqa	xmm1, xmmword ptr [rsp + 96]
	movdqa	xmm2, xmmword ptr [rsp + 64]
	movq	rcx, xmm2
	pshufd	xmm2, xmm2, 78
	movq	rbx, xmm2
	pshufd	xmm2, xmm1, 78
	pextrw	esi, xmm0, 4
	xor	edx, edx
	test	sil, sil
	setne	dl
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rbx]
	mov	r8, qword ptr [rbx + 8]
	movq	qword ptr [rsp + 192], xmm1
	mov	qword ptr [rsp + 176], rax
	mov	qword ptr [rsp + 184], rdi
Ltmp694:
	movq	qword ptr [rsp + 8], xmm0
	movq	qword ptr [rsp], xmm2
	lea	rdi, [rsp + 576]
	lea	r9, [rsp + 176]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7090b48d49163759E
Ltmp695:
	movaps	xmm0, xmmword ptr [rsp + 576]
	movaps	xmmword ptr [rsp + 272], xmm0
	movaps	xmm0, xmmword ptr [rsp + 592]
	movaps	xmmword ptr [rsp + 256], xmm0
	movaps	xmm0, xmmword ptr [rsp + 608]
	movaps	xmmword ptr [rsp + 240], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 624]
	movdqa	xmmword ptr [rsp + 224], xmm0
	lea	rbx, [rsp + 512]
	mov	al, byte ptr [rsp + 512]
	test	al, al
	je	LBB16_12
	jmp	LBB16_16
	.p2align	4, 0x90
LBB16_23:
Ltmp704:
	mov	rdi, r12
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp705:
	movzx	eax, byte ptr [rsp + 512]
	test	al, al
	jne	LBB16_16
LBB16_12:
Ltmp702:
	mov	rdi, r12
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp703:
	test	rdx, rdx
	je	LBB16_14
	cmp	rax, r13
	jne	LBB16_23
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h97eed5dde8a9bab4E]
	cmp	rdx, rcx
	jne	LBB16_23
	lea	rdi, [rsp + 576]
	lea	rsi, [rsp + 320]
	mov	edx, 256
	call	_memcpy
	mov	rsi, qword ptr [rsp + 704]
	mov	rcx, qword ptr [rsp + 712]
	mov	rax, qword ptr [rsp + 720]
	mov	rdx, qword ptr [rsp + 728]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 744]
	mov	qword ptr [rsp + 80], rdx
	test	rsi, rsi
	je	LBB16_25
	mov	r9, qword ptr [rsp + 752]
	mov	r10, qword ptr [rsp + 760]
	mov	rbx, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 312], rbx
	mov	rdx, qword ptr [rsp + 64]
	mov	rdi, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 304], rdi
	mov	qword ptr [rsp + 296], rdx
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 208], rdi
	mov	qword ptr [rsp + 200], rdx
	mov	rsi, qword ptr [rsi]
	sub	rsi, qword ptr [rcx]
	jb	LBB16_27
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 192], rax
	mov	rax, qword ptr [rsp + 200]
	mov	rdx, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 184], rdx
	mov	qword ptr [rsp + 176], rax
Ltmp707:
	mov	qword ptr [rsp + 8], r10
	mov	qword ptr [rsp], r9
	movzx	edx, r14b
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 176]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7090b48d49163759E
Ltmp708:
	cmp	qword ptr [rsp + 576], 2
	jb	LBB16_33
	mov	r12, qword ptr [rsp + 584]
	mov	rbx, qword ptr [rsp + 592]
Ltmp709:
	mov	rdi, r12
	call	qword ptr [rbx]
Ltmp710:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB16_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r12
	call	___rust_dealloc
LBB16_33:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	jmp	LBB16_37
LBB16_14:
	mov	al, byte ptr [rsp + 512]
	test	al, al
	jne	LBB16_16
Ltmp720:
	mov	rdi, r12
	mov	rsi, rbx
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp721:
LBB16_16:
	mov	rax, qword ptr [rsp + 320]
	cmp	rax, 1
	jne	LBB16_17
	movaps	xmm0, xmmword ptr [rsp + 384]
	movaps	xmm1, xmmword ptr [rsp + 400]
	movaps	xmm2, xmmword ptr [rsp + 416]
	movaps	xmm3, xmmword ptr [rsp + 432]
LBB16_37:
	movaps	xmm4, xmmword ptr [rsp + 272]
	movaps	xmmword ptr [r15], xmm4
	movaps	xmm4, xmmword ptr [rsp + 256]
	movaps	xmmword ptr [r15 + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [r15 + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 224]
	movaps	xmmword ptr [r15 + 48], xmm4
	movaps	xmmword ptr [r15 + 64], xmm0
	movaps	xmmword ptr [r15 + 80], xmm1
	movaps	xmmword ptr [r15 + 96], xmm2
	movaps	xmmword ptr [r15 + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB16_17:
	test	rax, rax
	je	LBB16_35
	mov	rdi, qword ptr [rsp + 328]
	mov	rsi, qword ptr [rsp + 336]
Ltmp723:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp724:
	jmp	LBB16_6
LBB16_5:
Ltmp728:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp729:
	jmp	LBB16_6
LBB16_35:
Ltmp725:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp726:
	jmp	LBB16_6
LBB16_7:
Ltmp690:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp691:
	jmp	LBB16_6
LBB16_25:
Ltmp714:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp715:
	jmp	LBB16_6
LBB16_27:
Ltmp712:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp713:
	jmp	LBB16_6
LBB16_47:
Ltmp727:
	jmp	LBB16_42
LBB16_40:
Ltmp722:
	jmp	LBB16_46
LBB16_38:
Ltmp711:
	mov	r14, rax
	mov	rdi, r12
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB16_34:
Ltmp716:
	mov	r14, rax
Ltmp717:
	lea	rdi, [rsp + 576]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp718:
	jmp	LBB16_43
LBB16_41:
Ltmp719:
LBB16_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB16_19:
Ltmp696:
Ltmp697:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp698:
	mov	rcx, rdx
	lea	rsi, [rsp + 512]
Ltmp699:
	mov	rdi, r12
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp700:
LBB16_6:
	ud2
LBB16_45:
Ltmp701:
	jmp	LBB16_46
LBB16_44:
Ltmp730:
	jmp	LBB16_46
LBB16_39:
Ltmp706:
LBB16_46:
	mov	r14, rax
	lea	rdi, [rsp + 320]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB16_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end16:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table16:
Lexception16:
	.byte	255
	.byte	155
	.uleb128 Lttbase16-Lttbaseref16
Lttbaseref16:
	.byte	1
	.uleb128 Lcst_end16-Lcst_begin16
Lcst_begin16:
	.uleb128 Ltmp688-Lfunc_begin16
	.uleb128 Ltmp693-Ltmp688
	.uleb128 Ltmp730-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp694-Lfunc_begin16
	.uleb128 Ltmp695-Ltmp694
	.uleb128 Ltmp696-Lfunc_begin16
	.byte	3
	.uleb128 Ltmp704-Lfunc_begin16
	.uleb128 Ltmp703-Ltmp704
	.uleb128 Ltmp706-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp703-Lfunc_begin16
	.uleb128 Ltmp707-Ltmp703
	.byte	0
	.byte	0
	.uleb128 Ltmp707-Lfunc_begin16
	.uleb128 Ltmp708-Ltmp707
	.uleb128 Ltmp716-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp709-Lfunc_begin16
	.uleb128 Ltmp710-Ltmp709
	.uleb128 Ltmp711-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp720-Lfunc_begin16
	.uleb128 Ltmp721-Ltmp720
	.uleb128 Ltmp722-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp723-Lfunc_begin16
	.uleb128 Ltmp724-Ltmp723
	.uleb128 Ltmp727-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp728-Lfunc_begin16
	.uleb128 Ltmp729-Ltmp728
	.uleb128 Ltmp730-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp725-Lfunc_begin16
	.uleb128 Ltmp726-Ltmp725
	.uleb128 Ltmp727-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp690-Lfunc_begin16
	.uleb128 Ltmp691-Ltmp690
	.uleb128 Ltmp730-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp714-Lfunc_begin16
	.uleb128 Ltmp713-Ltmp714
	.uleb128 Ltmp716-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp713-Lfunc_begin16
	.uleb128 Ltmp717-Ltmp713
	.byte	0
	.byte	0
	.uleb128 Ltmp717-Lfunc_begin16
	.uleb128 Ltmp718-Ltmp717
	.uleb128 Ltmp719-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp718-Lfunc_begin16
	.uleb128 Ltmp697-Ltmp718
	.byte	0
	.byte	0
	.uleb128 Ltmp697-Lfunc_begin16
	.uleb128 Ltmp698-Ltmp697
	.uleb128 Ltmp730-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp699-Lfunc_begin16
	.uleb128 Ltmp700-Ltmp699
	.uleb128 Ltmp701-Lfunc_begin16
	.byte	0
	.uleb128 Ltmp700-Lfunc_begin16
	.uleb128 Lfunc_end16-Ltmp700
	.byte	0
	.byte	0
Lcst_end16:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase16:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9321494734bafdcbE:
Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception17
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 1024
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r8d, ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	qword ptr [rsp + 264], rdi
	mov	byte ptr [rsp + 928], 0
	lea	rdi, [rsp + 832]
	mov	ecx, 12
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 704], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rsp + 240], r8d
	jl	LBB17_4
	add	rsi, rsi
	jb	LBB17_7
	lea	rdi, [rbx + 256]
Ltmp731:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp732:
	mov	rsi, qword ptr [rbx + 272]
LBB17_4:
	sub	rsi, 1
	jb	LBB17_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 704]
	mov	qword ptr [rax + rsi], r13
	lea	r15, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h5f3213e3b662df40E]
	mov	qword ptr [rax + rsi + 8], r15
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp735:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp736:
	movups	xmm0, xmmword ptr [r12 + 112]
	movups	xmm1, xmmword ptr [r12 + 128]
	movups	xmm2, xmmword ptr [r12 + 144]
	mov	r9, qword ptr [r12 + 176]
	movdqu	xmm3, xmmword ptr [r12 + 96]
	movq	rcx, xmm3
	pshufd	xmm3, xmm3, 78
	movq	rdx, xmm3
	mov	rdi, qword ptr [r12 + 160]
	mov	rax, qword ptr [r12 + 168]
	mov	qword ptr [rsp + 184], rax
	mov	qword ptr [rsp + 176], rdi
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	movups	xmmword ptr [rsp + 416], xmm2
	movups	xmmword ptr [rsp + 400], xmm1
	movups	xmmword ptr [rsp + 384], xmm0
	mov	qword ptr [rsp + 432], rdi
	mov	qword ptr [rsp + 440], rax
Ltmp737:
	mov	qword ptr [rsp], r9
	movzx	r12d, byte ptr [rsp + 240]
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 384]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h88adf7442447d004E
Ltmp738:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmmword ptr [rsp + 240], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmmword ptr [rsp + 368], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movaps	xmmword ptr [rsp + 352], xmm0
	movaps	xmm0, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rsp + 336], xmm0
	lea	r14, [rsp + 928]
	mov	al, byte ptr [rsp + 928]
	test	al, al
	je	LBB17_12
	jmp	LBB17_16
	.p2align	4, 0x90
LBB17_23:
Ltmp747:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp748:
	movzx	eax, byte ptr [rsp + 928]
	test	al, al
	jne	LBB17_16
LBB17_12:
Ltmp745:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp746:
	test	rdx, rdx
	je	LBB17_14
	cmp	rax, r13
	jne	LBB17_23
	cmp	rdx, r15
	jne	LBB17_23
	lea	rdi, [rsp + 384]
	lea	rsi, [rsp + 704]
	mov	edx, 256
	call	_memcpy
	mov	r11, qword ptr [rsp + 512]
	mov	r8, qword ptr [rsp + 520]
	mov	r10, qword ptr [rsp + 528]
	mov	rdx, qword ptr [rsp + 536]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 552]
	mov	qword ptr [rsp + 80], rdx
	mov	rdx, qword ptr [rsp + 560]
	mov	qword ptr [rsp + 88], rdx
	mov	rdx, qword ptr [rsp + 568]
	mov	qword ptr [rsp + 96], rdx
	mov	rdx, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 104], rdx
	mov	rdx, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 112], rdx
	mov	rdx, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 120], rdx
	test	r11, r11
	je	LBB17_25
	mov	r9, qword ptr [rsp + 600]
	mov	rdi, qword ptr [rsp + 120]
	mov	qword ptr [rsp + 328], rdi
	mov	r14, qword ptr [rsp + 112]
	mov	qword ptr [rsp + 320], r14
	mov	rbx, qword ptr [rsp + 104]
	mov	qword ptr [rsp + 312], rbx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 304], rdx
	mov	rcx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 296], rcx
	mov	rax, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 288], rax
	mov	rsi, qword ptr [rsp + 64]
	mov	rdi, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 272], rsi
	mov	qword ptr [rsp + 224], r14
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 208], rdx
	mov	qword ptr [rsp + 200], rcx
	mov	qword ptr [rsp + 192], rax
	mov	qword ptr [rsp + 184], rdi
	mov	qword ptr [rsp + 176], rsi
	mov	rax, qword ptr [rsp + 328]
	mov	qword ptr [rsp + 232], rax
	mov	rsi, qword ptr [r11]
	sub	rsi, qword ptr [r8]
	jb	LBB17_33
	mov	rcx, qword ptr [r10]
	mov	r8, qword ptr [r10 + 8]
	mov	rax, qword ptr [rsp + 232]
	mov	qword ptr [rsp + 120], rax
	mov	rax, qword ptr [rsp + 224]
	mov	qword ptr [rsp + 112], rax
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 200]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 192]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 176]
	mov	rdx, qword ptr [rsp + 184]
	mov	qword ptr [rsp + 72], rdx
	mov	qword ptr [rsp + 64], rax
Ltmp750:
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 640]
	lea	r9, [rsp + 64]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h88adf7442447d004E
Ltmp751:
	cmp	qword ptr [rsp + 384], 2
	jb	LBB17_32
	mov	r15, qword ptr [rsp + 392]
	mov	rbx, qword ptr [rsp + 400]
Ltmp752:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp753:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB17_32
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
LBB17_32:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movaps	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	jmp	LBB17_37
LBB17_14:
	mov	al, byte ptr [rsp + 928]
	test	al, al
	jne	LBB17_16
Ltmp763:
	mov	rdi, rbx
	mov	rsi, r14
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp764:
LBB17_16:
	mov	rax, qword ptr [rsp + 704]
	cmp	rax, 1
	jne	LBB17_17
	movaps	xmm0, xmmword ptr [rsp + 768]
	movaps	xmm1, xmmword ptr [rsp + 784]
	movaps	xmm2, xmmword ptr [rsp + 800]
	movaps	xmm3, xmmword ptr [rsp + 816]
LBB17_37:
	mov	rax, qword ptr [rsp + 264]
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [rax], xmm4
	movaps	xmm4, xmmword ptr [rsp + 368]
	movaps	xmmword ptr [rax + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 352]
	movaps	xmmword ptr [rax + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 336]
	movaps	xmmword ptr [rax + 48], xmm4
	movaps	xmmword ptr [rax + 64], xmm0
	movaps	xmmword ptr [rax + 80], xmm1
	movaps	xmmword ptr [rax + 96], xmm2
	movaps	xmmword ptr [rax + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB17_17:
	test	rax, rax
	je	LBB17_35
	mov	rdi, qword ptr [rsp + 712]
	mov	rsi, qword ptr [rsp + 720]
Ltmp766:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp767:
	jmp	LBB17_6
LBB17_5:
Ltmp771:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp772:
	jmp	LBB17_6
LBB17_35:
Ltmp768:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp769:
	jmp	LBB17_6
LBB17_7:
Ltmp733:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp734:
	jmp	LBB17_6
LBB17_25:
Ltmp757:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp758:
	jmp	LBB17_6
LBB17_33:
Ltmp755:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp756:
	jmp	LBB17_6
LBB17_47:
Ltmp770:
	jmp	LBB17_42
LBB17_40:
Ltmp765:
	jmp	LBB17_46
LBB17_38:
Ltmp754:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB17_34:
Ltmp759:
	mov	r14, rax
Ltmp760:
	lea	rdi, [rsp + 384]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp761:
	jmp	LBB17_43
LBB17_41:
Ltmp762:
LBB17_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB17_19:
Ltmp739:
Ltmp740:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp741:
	mov	rcx, rdx
	lea	rsi, [rsp + 928]
Ltmp742:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp743:
LBB17_6:
	ud2
LBB17_45:
Ltmp744:
	jmp	LBB17_46
LBB17_44:
Ltmp773:
	jmp	LBB17_46
LBB17_39:
Ltmp749:
LBB17_46:
	mov	r14, rax
	lea	rdi, [rsp + 704]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB17_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end17:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table17:
Lexception17:
	.byte	255
	.byte	155
	.uleb128 Lttbase17-Lttbaseref17
Lttbaseref17:
	.byte	1
	.uleb128 Lcst_end17-Lcst_begin17
Lcst_begin17:
	.uleb128 Ltmp731-Lfunc_begin17
	.uleb128 Ltmp736-Ltmp731
	.uleb128 Ltmp773-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp737-Lfunc_begin17
	.uleb128 Ltmp738-Ltmp737
	.uleb128 Ltmp739-Lfunc_begin17
	.byte	3
	.uleb128 Ltmp747-Lfunc_begin17
	.uleb128 Ltmp746-Ltmp747
	.uleb128 Ltmp749-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp746-Lfunc_begin17
	.uleb128 Ltmp750-Ltmp746
	.byte	0
	.byte	0
	.uleb128 Ltmp750-Lfunc_begin17
	.uleb128 Ltmp751-Ltmp750
	.uleb128 Ltmp759-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp752-Lfunc_begin17
	.uleb128 Ltmp753-Ltmp752
	.uleb128 Ltmp754-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp763-Lfunc_begin17
	.uleb128 Ltmp764-Ltmp763
	.uleb128 Ltmp765-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp766-Lfunc_begin17
	.uleb128 Ltmp767-Ltmp766
	.uleb128 Ltmp770-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp771-Lfunc_begin17
	.uleb128 Ltmp772-Ltmp771
	.uleb128 Ltmp773-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp768-Lfunc_begin17
	.uleb128 Ltmp769-Ltmp768
	.uleb128 Ltmp770-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp733-Lfunc_begin17
	.uleb128 Ltmp734-Ltmp733
	.uleb128 Ltmp773-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp757-Lfunc_begin17
	.uleb128 Ltmp756-Ltmp757
	.uleb128 Ltmp759-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp756-Lfunc_begin17
	.uleb128 Ltmp760-Ltmp756
	.byte	0
	.byte	0
	.uleb128 Ltmp760-Lfunc_begin17
	.uleb128 Ltmp761-Ltmp760
	.uleb128 Ltmp762-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp761-Lfunc_begin17
	.uleb128 Ltmp740-Ltmp761
	.byte	0
	.byte	0
	.uleb128 Ltmp740-Lfunc_begin17
	.uleb128 Ltmp741-Ltmp740
	.uleb128 Ltmp773-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp742-Lfunc_begin17
	.uleb128 Ltmp743-Ltmp742
	.uleb128 Ltmp744-Lfunc_begin17
	.byte	0
	.uleb128 Ltmp743-Lfunc_begin17
	.uleb128 Lfunc_end17-Ltmp743
	.byte	0
	.byte	0
Lcst_end17:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase17:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9495025b2b50f61eE:
Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception18
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB18_4
	add	rsi, rsi
	jb	LBB18_7
	lea	rdi, [rbx + 256]
Ltmp774:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp775:
	mov	rsi, qword ptr [rbx + 272]
LBB18_4:
	sub	rsi, 1
	jb	LBB18_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17haa8806a7ca9a90c2E]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp778:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp779:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp780:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h9d5f279b65cc3217E
Ltmp781:
LBB18_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB18_14
	jmp	LBB18_18
	.p2align	4, 0x90
LBB18_23:
Ltmp790:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp791:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB18_18
LBB18_14:
Ltmp788:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp789:
	test	rdx, rdx
	je	LBB18_16
	cmp	rax, r12
	jne	LBB18_23
	cmp	rdx, r13
	jne	LBB18_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB18_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB18_27
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp793:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h9d5f279b65cc3217E
Ltmp794:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB18_33
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp795:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp796:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB18_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB18_33
LBB18_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB18_18
Ltmp806:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp807:
LBB18_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB18_19
LBB18_33:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB18_19:
	test	rax, rax
	je	LBB18_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp809:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp810:
	jmp	LBB18_6
LBB18_5:
Ltmp814:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp815:
	jmp	LBB18_6
LBB18_35:
Ltmp811:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp812:
	jmp	LBB18_6
LBB18_7:
Ltmp776:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp777:
	jmp	LBB18_6
LBB18_25:
Ltmp800:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp801:
	jmp	LBB18_6
LBB18_27:
Ltmp798:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp799:
LBB18_6:
	ud2
LBB18_46:
Ltmp813:
	jmp	LBB18_40
LBB18_38:
Ltmp808:
	jmp	LBB18_45
LBB18_36:
Ltmp797:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB18_34:
Ltmp802:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp803:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp804:
	jmp	LBB18_41
LBB18_39:
Ltmp805:
LBB18_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB18_10:
Ltmp782:
Ltmp783:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp784:
	test	rax, rax
	je	LBB18_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp785:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp786:
	jmp	LBB18_6
LBB18_44:
Ltmp787:
	jmp	LBB18_45
LBB18_42:
Ltmp816:
	jmp	LBB18_45
LBB18_37:
Ltmp792:
LBB18_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB18_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end18:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table18:
Lexception18:
	.byte	255
	.byte	155
	.uleb128 Lttbase18-Lttbaseref18
Lttbaseref18:
	.byte	1
	.uleb128 Lcst_end18-Lcst_begin18
Lcst_begin18:
	.uleb128 Ltmp774-Lfunc_begin18
	.uleb128 Ltmp779-Ltmp774
	.uleb128 Ltmp816-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp780-Lfunc_begin18
	.uleb128 Ltmp781-Ltmp780
	.uleb128 Ltmp782-Lfunc_begin18
	.byte	3
	.uleb128 Ltmp790-Lfunc_begin18
	.uleb128 Ltmp789-Ltmp790
	.uleb128 Ltmp792-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp793-Lfunc_begin18
	.uleb128 Ltmp794-Ltmp793
	.uleb128 Ltmp802-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp795-Lfunc_begin18
	.uleb128 Ltmp796-Ltmp795
	.uleb128 Ltmp797-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp806-Lfunc_begin18
	.uleb128 Ltmp807-Ltmp806
	.uleb128 Ltmp808-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp809-Lfunc_begin18
	.uleb128 Ltmp810-Ltmp809
	.uleb128 Ltmp813-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp814-Lfunc_begin18
	.uleb128 Ltmp815-Ltmp814
	.uleb128 Ltmp816-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp811-Lfunc_begin18
	.uleb128 Ltmp812-Ltmp811
	.uleb128 Ltmp813-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp776-Lfunc_begin18
	.uleb128 Ltmp777-Ltmp776
	.uleb128 Ltmp816-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp800-Lfunc_begin18
	.uleb128 Ltmp799-Ltmp800
	.uleb128 Ltmp802-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp799-Lfunc_begin18
	.uleb128 Ltmp803-Ltmp799
	.byte	0
	.byte	0
	.uleb128 Ltmp803-Lfunc_begin18
	.uleb128 Ltmp804-Ltmp803
	.uleb128 Ltmp805-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp804-Lfunc_begin18
	.uleb128 Ltmp783-Ltmp804
	.byte	0
	.byte	0
	.uleb128 Ltmp783-Lfunc_begin18
	.uleb128 Ltmp784-Ltmp783
	.uleb128 Ltmp816-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp785-Lfunc_begin18
	.uleb128 Ltmp786-Ltmp785
	.uleb128 Ltmp787-Lfunc_begin18
	.byte	0
	.uleb128 Ltmp786-Lfunc_begin18
	.uleb128 Lfunc_end18-Ltmp786
	.byte	0
	.byte	0
Lcst_end18:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase18:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9890762a6a4004c5E:
Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception19
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 1024
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r8d, ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	qword ptr [rsp + 264], rdi
	mov	byte ptr [rsp + 928], 0
	lea	rdi, [rsp + 832]
	mov	ecx, 12
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 704], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rsp + 240], r8d
	jl	LBB19_4
	add	rsi, rsi
	jb	LBB19_7
	lea	rdi, [rbx + 256]
Ltmp817:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp818:
	mov	rsi, qword ptr [rbx + 272]
LBB19_4:
	sub	rsi, 1
	jb	LBB19_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 704]
	mov	qword ptr [rax + rsi], r13
	lea	r15, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h85e1b76bd1affdd5E]
	mov	qword ptr [rax + rsi + 8], r15
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp821:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp822:
	movdqu	xmm0, xmmword ptr [r12 + 96]
	movups	xmm1, xmmword ptr [r12 + 112]
	movups	xmm2, xmmword ptr [r12 + 128]
	movups	xmm3, xmmword ptr [r12 + 144]
	mov	r9, qword ptr [r12 + 176]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	rdx, xmm0
	mov	rdi, qword ptr [r12 + 160]
	mov	rax, qword ptr [r12 + 168]
	mov	qword ptr [rsp + 184], rax
	mov	qword ptr [rsp + 176], rdi
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	movups	xmmword ptr [rsp + 416], xmm3
	movups	xmmword ptr [rsp + 400], xmm2
	movups	xmmword ptr [rsp + 384], xmm1
	mov	qword ptr [rsp + 432], rdi
	mov	qword ptr [rsp + 440], rax
Ltmp823:
	mov	qword ptr [rsp], r9
	movzx	r12d, byte ptr [rsp + 240]
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 384]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h0d59b9077151e637E
Ltmp824:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmmword ptr [rsp + 240], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmmword ptr [rsp + 368], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movaps	xmmword ptr [rsp + 352], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rsp + 336], xmm0
	lea	r14, [rsp + 928]
	mov	al, byte ptr [rsp + 928]
	test	al, al
	je	LBB19_12
	jmp	LBB19_16
	.p2align	4, 0x90
LBB19_23:
Ltmp833:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp834:
	movzx	eax, byte ptr [rsp + 928]
	test	al, al
	jne	LBB19_16
LBB19_12:
Ltmp831:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp832:
	test	rdx, rdx
	je	LBB19_14
	cmp	rax, r13
	jne	LBB19_23
	cmp	rdx, r15
	jne	LBB19_23
	lea	rdi, [rsp + 384]
	lea	rsi, [rsp + 704]
	mov	edx, 256
	call	_memcpy
	mov	r11, qword ptr [rsp + 512]
	mov	r8, qword ptr [rsp + 520]
	mov	r10, qword ptr [rsp + 528]
	mov	rdx, qword ptr [rsp + 536]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 552]
	mov	qword ptr [rsp + 80], rdx
	mov	rdx, qword ptr [rsp + 560]
	mov	qword ptr [rsp + 88], rdx
	mov	rdx, qword ptr [rsp + 568]
	mov	qword ptr [rsp + 96], rdx
	mov	rdx, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 104], rdx
	mov	rdx, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 112], rdx
	mov	rdx, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 120], rdx
	test	r11, r11
	je	LBB19_25
	mov	r9, qword ptr [rsp + 600]
	mov	rdi, qword ptr [rsp + 120]
	mov	qword ptr [rsp + 328], rdi
	mov	r14, qword ptr [rsp + 112]
	mov	qword ptr [rsp + 320], r14
	mov	rbx, qword ptr [rsp + 104]
	mov	qword ptr [rsp + 312], rbx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 304], rdx
	mov	rcx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 296], rcx
	mov	rax, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 288], rax
	mov	rsi, qword ptr [rsp + 64]
	mov	rdi, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 272], rsi
	mov	qword ptr [rsp + 224], r14
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 208], rdx
	mov	qword ptr [rsp + 200], rcx
	mov	qword ptr [rsp + 192], rax
	mov	qword ptr [rsp + 184], rdi
	mov	qword ptr [rsp + 176], rsi
	mov	rax, qword ptr [rsp + 328]
	mov	qword ptr [rsp + 232], rax
	mov	rsi, qword ptr [r11]
	sub	rsi, qword ptr [r8]
	jb	LBB19_27
	mov	rcx, qword ptr [r10]
	mov	r8, qword ptr [r10 + 8]
	mov	rax, qword ptr [rsp + 232]
	mov	qword ptr [rsp + 120], rax
	mov	rax, qword ptr [rsp + 224]
	mov	qword ptr [rsp + 112], rax
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 200]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 192]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 176]
	mov	rdx, qword ptr [rsp + 184]
	mov	qword ptr [rsp + 72], rdx
	mov	qword ptr [rsp + 64], rax
Ltmp836:
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 640]
	lea	r9, [rsp + 64]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h0d59b9077151e637E
Ltmp837:
	cmp	qword ptr [rsp + 384], 2
	jb	LBB19_33
	mov	r15, qword ptr [rsp + 392]
	mov	rbx, qword ptr [rsp + 400]
Ltmp838:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp839:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB19_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
LBB19_33:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movaps	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	jmp	LBB19_37
LBB19_14:
	mov	al, byte ptr [rsp + 928]
	test	al, al
	jne	LBB19_16
Ltmp849:
	mov	rdi, rbx
	mov	rsi, r14
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp850:
LBB19_16:
	mov	rax, qword ptr [rsp + 704]
	cmp	rax, 1
	jne	LBB19_17
	movaps	xmm0, xmmword ptr [rsp + 768]
	movaps	xmm1, xmmword ptr [rsp + 784]
	movaps	xmm2, xmmword ptr [rsp + 800]
	movaps	xmm3, xmmword ptr [rsp + 816]
LBB19_37:
	mov	rax, qword ptr [rsp + 264]
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [rax], xmm4
	movaps	xmm4, xmmword ptr [rsp + 368]
	movaps	xmmword ptr [rax + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 352]
	movaps	xmmword ptr [rax + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 336]
	movaps	xmmword ptr [rax + 48], xmm4
	movaps	xmmword ptr [rax + 64], xmm0
	movaps	xmmword ptr [rax + 80], xmm1
	movaps	xmmword ptr [rax + 96], xmm2
	movaps	xmmword ptr [rax + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB19_17:
	test	rax, rax
	je	LBB19_35
	mov	rdi, qword ptr [rsp + 712]
	mov	rsi, qword ptr [rsp + 720]
Ltmp852:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp853:
	jmp	LBB19_6
LBB19_5:
Ltmp857:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp858:
	jmp	LBB19_6
LBB19_35:
Ltmp854:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp855:
	jmp	LBB19_6
LBB19_7:
Ltmp819:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp820:
	jmp	LBB19_6
LBB19_25:
Ltmp843:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp844:
	jmp	LBB19_6
LBB19_27:
Ltmp841:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp842:
	jmp	LBB19_6
LBB19_47:
Ltmp856:
	jmp	LBB19_42
LBB19_40:
Ltmp851:
	jmp	LBB19_46
LBB19_38:
Ltmp840:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB19_34:
Ltmp845:
	mov	r14, rax
Ltmp846:
	lea	rdi, [rsp + 384]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp847:
	jmp	LBB19_43
LBB19_41:
Ltmp848:
LBB19_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB19_19:
Ltmp825:
Ltmp826:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp827:
	mov	rcx, rdx
	lea	rsi, [rsp + 928]
Ltmp828:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp829:
LBB19_6:
	ud2
LBB19_45:
Ltmp830:
	jmp	LBB19_46
LBB19_44:
Ltmp859:
	jmp	LBB19_46
LBB19_39:
Ltmp835:
LBB19_46:
	mov	r14, rax
	lea	rdi, [rsp + 704]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB19_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end19:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table19:
Lexception19:
	.byte	255
	.byte	155
	.uleb128 Lttbase19-Lttbaseref19
Lttbaseref19:
	.byte	1
	.uleb128 Lcst_end19-Lcst_begin19
Lcst_begin19:
	.uleb128 Ltmp817-Lfunc_begin19
	.uleb128 Ltmp822-Ltmp817
	.uleb128 Ltmp859-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp823-Lfunc_begin19
	.uleb128 Ltmp824-Ltmp823
	.uleb128 Ltmp825-Lfunc_begin19
	.byte	3
	.uleb128 Ltmp833-Lfunc_begin19
	.uleb128 Ltmp832-Ltmp833
	.uleb128 Ltmp835-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp832-Lfunc_begin19
	.uleb128 Ltmp836-Ltmp832
	.byte	0
	.byte	0
	.uleb128 Ltmp836-Lfunc_begin19
	.uleb128 Ltmp837-Ltmp836
	.uleb128 Ltmp845-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp838-Lfunc_begin19
	.uleb128 Ltmp839-Ltmp838
	.uleb128 Ltmp840-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp849-Lfunc_begin19
	.uleb128 Ltmp850-Ltmp849
	.uleb128 Ltmp851-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp852-Lfunc_begin19
	.uleb128 Ltmp853-Ltmp852
	.uleb128 Ltmp856-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp857-Lfunc_begin19
	.uleb128 Ltmp858-Ltmp857
	.uleb128 Ltmp859-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp854-Lfunc_begin19
	.uleb128 Ltmp855-Ltmp854
	.uleb128 Ltmp856-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp819-Lfunc_begin19
	.uleb128 Ltmp820-Ltmp819
	.uleb128 Ltmp859-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp843-Lfunc_begin19
	.uleb128 Ltmp842-Ltmp843
	.uleb128 Ltmp845-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp842-Lfunc_begin19
	.uleb128 Ltmp846-Ltmp842
	.byte	0
	.byte	0
	.uleb128 Ltmp846-Lfunc_begin19
	.uleb128 Ltmp847-Ltmp846
	.uleb128 Ltmp848-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp847-Lfunc_begin19
	.uleb128 Ltmp826-Ltmp847
	.byte	0
	.byte	0
	.uleb128 Ltmp826-Lfunc_begin19
	.uleb128 Ltmp827-Ltmp826
	.uleb128 Ltmp859-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp828-Lfunc_begin19
	.uleb128 Ltmp829-Ltmp828
	.uleb128 Ltmp830-Lfunc_begin19
	.byte	0
	.uleb128 Ltmp829-Lfunc_begin19
	.uleb128 Lfunc_end19-Ltmp829
	.byte	0
	.byte	0
Lcst_end19:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase19:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9ca205191000996dE:
Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception20
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB20_4
	add	rsi, rsi
	jb	LBB20_7
	lea	rdi, [rbx + 256]
Ltmp860:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp861:
	mov	rsi, qword ptr [rbx + 272]
LBB20_4:
	sub	rsi, 1
	jb	LBB20_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h6149570e01c37addE]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp864:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp865:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp866:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hddeecd8dd3b2af70E
Ltmp867:
LBB20_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB20_14
	jmp	LBB20_18
	.p2align	4, 0x90
LBB20_23:
Ltmp876:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp877:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB20_18
LBB20_14:
Ltmp874:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp875:
	test	rdx, rdx
	je	LBB20_16
	cmp	rax, r12
	jne	LBB20_23
	cmp	rdx, r13
	jne	LBB20_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB20_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB20_27
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp879:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hddeecd8dd3b2af70E
Ltmp880:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB20_33
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp881:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp882:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB20_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB20_33
LBB20_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB20_18
Ltmp892:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp893:
LBB20_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB20_19
LBB20_33:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB20_19:
	test	rax, rax
	je	LBB20_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp895:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp896:
	jmp	LBB20_6
LBB20_5:
Ltmp900:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp901:
	jmp	LBB20_6
LBB20_35:
Ltmp897:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp898:
	jmp	LBB20_6
LBB20_7:
Ltmp862:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp863:
	jmp	LBB20_6
LBB20_25:
Ltmp886:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp887:
	jmp	LBB20_6
LBB20_27:
Ltmp884:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp885:
LBB20_6:
	ud2
LBB20_46:
Ltmp899:
	jmp	LBB20_40
LBB20_38:
Ltmp894:
	jmp	LBB20_45
LBB20_36:
Ltmp883:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB20_34:
Ltmp888:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp889:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp890:
	jmp	LBB20_41
LBB20_39:
Ltmp891:
LBB20_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB20_10:
Ltmp868:
Ltmp869:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp870:
	test	rax, rax
	je	LBB20_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp871:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp872:
	jmp	LBB20_6
LBB20_44:
Ltmp873:
	jmp	LBB20_45
LBB20_42:
Ltmp902:
	jmp	LBB20_45
LBB20_37:
Ltmp878:
LBB20_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB20_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end20:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table20:
Lexception20:
	.byte	255
	.byte	155
	.uleb128 Lttbase20-Lttbaseref20
Lttbaseref20:
	.byte	1
	.uleb128 Lcst_end20-Lcst_begin20
Lcst_begin20:
	.uleb128 Ltmp860-Lfunc_begin20
	.uleb128 Ltmp865-Ltmp860
	.uleb128 Ltmp902-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp866-Lfunc_begin20
	.uleb128 Ltmp867-Ltmp866
	.uleb128 Ltmp868-Lfunc_begin20
	.byte	3
	.uleb128 Ltmp876-Lfunc_begin20
	.uleb128 Ltmp875-Ltmp876
	.uleb128 Ltmp878-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp879-Lfunc_begin20
	.uleb128 Ltmp880-Ltmp879
	.uleb128 Ltmp888-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp881-Lfunc_begin20
	.uleb128 Ltmp882-Ltmp881
	.uleb128 Ltmp883-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp892-Lfunc_begin20
	.uleb128 Ltmp893-Ltmp892
	.uleb128 Ltmp894-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp895-Lfunc_begin20
	.uleb128 Ltmp896-Ltmp895
	.uleb128 Ltmp899-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp900-Lfunc_begin20
	.uleb128 Ltmp901-Ltmp900
	.uleb128 Ltmp902-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp897-Lfunc_begin20
	.uleb128 Ltmp898-Ltmp897
	.uleb128 Ltmp899-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp862-Lfunc_begin20
	.uleb128 Ltmp863-Ltmp862
	.uleb128 Ltmp902-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp886-Lfunc_begin20
	.uleb128 Ltmp885-Ltmp886
	.uleb128 Ltmp888-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp885-Lfunc_begin20
	.uleb128 Ltmp889-Ltmp885
	.byte	0
	.byte	0
	.uleb128 Ltmp889-Lfunc_begin20
	.uleb128 Ltmp890-Ltmp889
	.uleb128 Ltmp891-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp890-Lfunc_begin20
	.uleb128 Ltmp869-Ltmp890
	.byte	0
	.byte	0
	.uleb128 Ltmp869-Lfunc_begin20
	.uleb128 Ltmp870-Ltmp869
	.uleb128 Ltmp902-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp871-Lfunc_begin20
	.uleb128 Ltmp872-Ltmp871
	.uleb128 Ltmp873-Lfunc_begin20
	.byte	0
	.uleb128 Ltmp872-Lfunc_begin20
	.uleb128 Lfunc_end20-Ltmp872
	.byte	0
	.byte	0
Lcst_end20:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase20:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hb2418168bff1c57dE:
Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception21
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 1024
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r8d, ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	qword ptr [rsp + 264], rdi
	mov	byte ptr [rsp + 928], 0
	lea	rdi, [rsp + 832]
	mov	ecx, 12
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 704], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rsp + 240], r8d
	jl	LBB21_4
	add	rsi, rsi
	jb	LBB21_7
	lea	rdi, [rbx + 256]
Ltmp903:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp904:
	mov	rsi, qword ptr [rbx + 272]
LBB21_4:
	sub	rsi, 1
	jb	LBB21_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 704]
	mov	qword ptr [rax + rsi], r13
	lea	r15, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h8fdce23ca587fd0dE]
	mov	qword ptr [rax + rsi + 8], r15
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp907:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp908:
	movdqu	xmm0, xmmword ptr [r12 + 96]
	movups	xmm1, xmmword ptr [r12 + 112]
	movups	xmm2, xmmword ptr [r12 + 128]
	movups	xmm3, xmmword ptr [r12 + 144]
	mov	r9, qword ptr [r12 + 176]
	mov	rdx, qword ptr [r12 + 160]
	mov	rdi, qword ptr [r12 + 168]
	mov	qword ptr [rsp + 184], rdi
	mov	qword ptr [rsp + 176], rdx
	movq	rcx, xmm0
	mov	rsi, qword ptr [rcx]
	pshufd	xmm0, xmm0, 78
	movq	rax, xmm0
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	movups	xmmword ptr [rsp + 416], xmm3
	movups	xmmword ptr [rsp + 400], xmm2
	movups	xmmword ptr [rsp + 384], xmm1
	mov	qword ptr [rsp + 432], rdx
	mov	qword ptr [rsp + 440], rdi
Ltmp909:
	mov	qword ptr [rsp], r9
	movzx	r12d, byte ptr [rsp + 240]
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 384]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h0ffe93cfb7fb0572E
Ltmp910:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmmword ptr [rsp + 240], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmmword ptr [rsp + 368], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movaps	xmmword ptr [rsp + 352], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rsp + 336], xmm0
	lea	r14, [rsp + 928]
	mov	al, byte ptr [rsp + 928]
	test	al, al
	je	LBB21_12
	jmp	LBB21_16
	.p2align	4, 0x90
LBB21_23:
Ltmp919:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp920:
	movzx	eax, byte ptr [rsp + 928]
	test	al, al
	jne	LBB21_16
LBB21_12:
Ltmp917:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp918:
	test	rdx, rdx
	je	LBB21_14
	cmp	rax, r13
	jne	LBB21_23
	cmp	rdx, r15
	jne	LBB21_23
	lea	rdi, [rsp + 384]
	lea	rsi, [rsp + 704]
	mov	edx, 256
	call	_memcpy
	mov	r11, qword ptr [rsp + 512]
	mov	r8, qword ptr [rsp + 520]
	mov	r10, qword ptr [rsp + 528]
	mov	rdx, qword ptr [rsp + 536]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 552]
	mov	qword ptr [rsp + 80], rdx
	mov	rdx, qword ptr [rsp + 560]
	mov	qword ptr [rsp + 88], rdx
	mov	rdx, qword ptr [rsp + 568]
	mov	qword ptr [rsp + 96], rdx
	mov	rdx, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 104], rdx
	mov	rdx, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 112], rdx
	mov	rdx, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 120], rdx
	test	r11, r11
	je	LBB21_25
	mov	r9, qword ptr [rsp + 600]
	mov	rdi, qword ptr [rsp + 120]
	mov	qword ptr [rsp + 328], rdi
	mov	r14, qword ptr [rsp + 112]
	mov	qword ptr [rsp + 320], r14
	mov	rbx, qword ptr [rsp + 104]
	mov	qword ptr [rsp + 312], rbx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 304], rdx
	mov	rcx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 296], rcx
	mov	rax, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 288], rax
	mov	rsi, qword ptr [rsp + 64]
	mov	rdi, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 272], rsi
	mov	qword ptr [rsp + 224], r14
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 208], rdx
	mov	qword ptr [rsp + 200], rcx
	mov	qword ptr [rsp + 192], rax
	mov	qword ptr [rsp + 184], rdi
	mov	qword ptr [rsp + 176], rsi
	mov	rax, qword ptr [rsp + 328]
	mov	qword ptr [rsp + 232], rax
	mov	rsi, qword ptr [r11]
	sub	rsi, qword ptr [r8]
	jb	LBB21_27
	mov	rcx, qword ptr [r10]
	mov	r8, qword ptr [r10 + 8]
	mov	rax, qword ptr [rsp + 232]
	mov	qword ptr [rsp + 120], rax
	mov	rax, qword ptr [rsp + 224]
	mov	qword ptr [rsp + 112], rax
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 200]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 192]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 176]
	mov	rdx, qword ptr [rsp + 184]
	mov	qword ptr [rsp + 72], rdx
	mov	qword ptr [rsp + 64], rax
Ltmp922:
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 640]
	lea	r9, [rsp + 64]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h0ffe93cfb7fb0572E
Ltmp923:
	cmp	qword ptr [rsp + 384], 2
	jb	LBB21_33
	mov	r15, qword ptr [rsp + 392]
	mov	rbx, qword ptr [rsp + 400]
Ltmp924:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp925:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB21_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
LBB21_33:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movaps	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	jmp	LBB21_37
LBB21_14:
	mov	al, byte ptr [rsp + 928]
	test	al, al
	jne	LBB21_16
Ltmp935:
	mov	rdi, rbx
	mov	rsi, r14
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp936:
LBB21_16:
	mov	rax, qword ptr [rsp + 704]
	cmp	rax, 1
	jne	LBB21_17
	movaps	xmm0, xmmword ptr [rsp + 768]
	movaps	xmm1, xmmword ptr [rsp + 784]
	movaps	xmm2, xmmword ptr [rsp + 800]
	movaps	xmm3, xmmword ptr [rsp + 816]
LBB21_37:
	mov	rax, qword ptr [rsp + 264]
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [rax], xmm4
	movaps	xmm4, xmmword ptr [rsp + 368]
	movaps	xmmword ptr [rax + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 352]
	movaps	xmmword ptr [rax + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 336]
	movaps	xmmword ptr [rax + 48], xmm4
	movaps	xmmword ptr [rax + 64], xmm0
	movaps	xmmword ptr [rax + 80], xmm1
	movaps	xmmword ptr [rax + 96], xmm2
	movaps	xmmword ptr [rax + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB21_17:
	test	rax, rax
	je	LBB21_35
	mov	rdi, qword ptr [rsp + 712]
	mov	rsi, qword ptr [rsp + 720]
Ltmp938:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp939:
	jmp	LBB21_6
LBB21_5:
Ltmp943:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp944:
	jmp	LBB21_6
LBB21_35:
Ltmp940:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp941:
	jmp	LBB21_6
LBB21_7:
Ltmp905:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp906:
	jmp	LBB21_6
LBB21_25:
Ltmp929:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp930:
	jmp	LBB21_6
LBB21_27:
Ltmp927:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp928:
	jmp	LBB21_6
LBB21_47:
Ltmp942:
	jmp	LBB21_42
LBB21_40:
Ltmp937:
	jmp	LBB21_46
LBB21_38:
Ltmp926:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB21_34:
Ltmp931:
	mov	r14, rax
Ltmp932:
	lea	rdi, [rsp + 384]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp933:
	jmp	LBB21_43
LBB21_41:
Ltmp934:
LBB21_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB21_19:
Ltmp911:
Ltmp912:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp913:
	mov	rcx, rdx
	lea	rsi, [rsp + 928]
Ltmp914:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp915:
LBB21_6:
	ud2
LBB21_45:
Ltmp916:
	jmp	LBB21_46
LBB21_44:
Ltmp945:
	jmp	LBB21_46
LBB21_39:
Ltmp921:
LBB21_46:
	mov	r14, rax
	lea	rdi, [rsp + 704]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB21_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end21:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table21:
Lexception21:
	.byte	255
	.byte	155
	.uleb128 Lttbase21-Lttbaseref21
Lttbaseref21:
	.byte	1
	.uleb128 Lcst_end21-Lcst_begin21
Lcst_begin21:
	.uleb128 Ltmp903-Lfunc_begin21
	.uleb128 Ltmp908-Ltmp903
	.uleb128 Ltmp945-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp909-Lfunc_begin21
	.uleb128 Ltmp910-Ltmp909
	.uleb128 Ltmp911-Lfunc_begin21
	.byte	3
	.uleb128 Ltmp919-Lfunc_begin21
	.uleb128 Ltmp918-Ltmp919
	.uleb128 Ltmp921-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp918-Lfunc_begin21
	.uleb128 Ltmp922-Ltmp918
	.byte	0
	.byte	0
	.uleb128 Ltmp922-Lfunc_begin21
	.uleb128 Ltmp923-Ltmp922
	.uleb128 Ltmp931-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp924-Lfunc_begin21
	.uleb128 Ltmp925-Ltmp924
	.uleb128 Ltmp926-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp935-Lfunc_begin21
	.uleb128 Ltmp936-Ltmp935
	.uleb128 Ltmp937-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp938-Lfunc_begin21
	.uleb128 Ltmp939-Ltmp938
	.uleb128 Ltmp942-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp943-Lfunc_begin21
	.uleb128 Ltmp944-Ltmp943
	.uleb128 Ltmp945-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp940-Lfunc_begin21
	.uleb128 Ltmp941-Ltmp940
	.uleb128 Ltmp942-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp905-Lfunc_begin21
	.uleb128 Ltmp906-Ltmp905
	.uleb128 Ltmp945-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp929-Lfunc_begin21
	.uleb128 Ltmp928-Ltmp929
	.uleb128 Ltmp931-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp928-Lfunc_begin21
	.uleb128 Ltmp932-Ltmp928
	.byte	0
	.byte	0
	.uleb128 Ltmp932-Lfunc_begin21
	.uleb128 Ltmp933-Ltmp932
	.uleb128 Ltmp934-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp933-Lfunc_begin21
	.uleb128 Ltmp912-Ltmp933
	.byte	0
	.byte	0
	.uleb128 Ltmp912-Lfunc_begin21
	.uleb128 Ltmp913-Ltmp912
	.uleb128 Ltmp945-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp914-Lfunc_begin21
	.uleb128 Ltmp915-Ltmp914
	.uleb128 Ltmp916-Lfunc_begin21
	.byte	0
	.uleb128 Ltmp915-Lfunc_begin21
	.uleb128 Lfunc_end21-Ltmp915
	.byte	0
	.byte	0
Lcst_end21:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase21:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hd3310eccc434e7d5E:
Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception22
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB22_4
	add	rsi, rsi
	jb	LBB22_7
	lea	rdi, [rbx + 256]
Ltmp946:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp947:
	mov	rsi, qword ptr [rbx + 272]
LBB22_4:
	sub	rsi, 1
	jb	LBB22_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2f5ce5cc9ac7e4fbE]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp950:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp951:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp952:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h333b34283e7d4003E
Ltmp953:
LBB22_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB22_14
	jmp	LBB22_18
	.p2align	4, 0x90
LBB22_23:
Ltmp962:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp963:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB22_18
LBB22_14:
Ltmp960:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp961:
	test	rdx, rdx
	je	LBB22_16
	cmp	rax, r12
	jne	LBB22_23
	cmp	rdx, r13
	jne	LBB22_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB22_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB22_27
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp965:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h333b34283e7d4003E
Ltmp966:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB22_33
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp967:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp968:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB22_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB22_33
LBB22_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB22_18
Ltmp978:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp979:
LBB22_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB22_19
LBB22_33:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB22_19:
	test	rax, rax
	je	LBB22_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp981:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp982:
	jmp	LBB22_6
LBB22_5:
Ltmp986:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp987:
	jmp	LBB22_6
LBB22_35:
Ltmp983:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp984:
	jmp	LBB22_6
LBB22_7:
Ltmp948:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp949:
	jmp	LBB22_6
LBB22_25:
Ltmp972:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp973:
	jmp	LBB22_6
LBB22_27:
Ltmp970:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp971:
LBB22_6:
	ud2
LBB22_46:
Ltmp985:
	jmp	LBB22_40
LBB22_38:
Ltmp980:
	jmp	LBB22_45
LBB22_36:
Ltmp969:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB22_34:
Ltmp974:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp975:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp976:
	jmp	LBB22_41
LBB22_39:
Ltmp977:
LBB22_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB22_10:
Ltmp954:
Ltmp955:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp956:
	test	rax, rax
	je	LBB22_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp957:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp958:
	jmp	LBB22_6
LBB22_44:
Ltmp959:
	jmp	LBB22_45
LBB22_42:
Ltmp988:
	jmp	LBB22_45
LBB22_37:
Ltmp964:
LBB22_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB22_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end22:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table22:
Lexception22:
	.byte	255
	.byte	155
	.uleb128 Lttbase22-Lttbaseref22
Lttbaseref22:
	.byte	1
	.uleb128 Lcst_end22-Lcst_begin22
Lcst_begin22:
	.uleb128 Ltmp946-Lfunc_begin22
	.uleb128 Ltmp951-Ltmp946
	.uleb128 Ltmp988-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp952-Lfunc_begin22
	.uleb128 Ltmp953-Ltmp952
	.uleb128 Ltmp954-Lfunc_begin22
	.byte	3
	.uleb128 Ltmp962-Lfunc_begin22
	.uleb128 Ltmp961-Ltmp962
	.uleb128 Ltmp964-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp965-Lfunc_begin22
	.uleb128 Ltmp966-Ltmp965
	.uleb128 Ltmp974-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp967-Lfunc_begin22
	.uleb128 Ltmp968-Ltmp967
	.uleb128 Ltmp969-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp978-Lfunc_begin22
	.uleb128 Ltmp979-Ltmp978
	.uleb128 Ltmp980-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp981-Lfunc_begin22
	.uleb128 Ltmp982-Ltmp981
	.uleb128 Ltmp985-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp986-Lfunc_begin22
	.uleb128 Ltmp987-Ltmp986
	.uleb128 Ltmp988-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp983-Lfunc_begin22
	.uleb128 Ltmp984-Ltmp983
	.uleb128 Ltmp985-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp948-Lfunc_begin22
	.uleb128 Ltmp949-Ltmp948
	.uleb128 Ltmp988-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp972-Lfunc_begin22
	.uleb128 Ltmp971-Ltmp972
	.uleb128 Ltmp974-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp971-Lfunc_begin22
	.uleb128 Ltmp975-Ltmp971
	.byte	0
	.byte	0
	.uleb128 Ltmp975-Lfunc_begin22
	.uleb128 Ltmp976-Ltmp975
	.uleb128 Ltmp977-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp976-Lfunc_begin22
	.uleb128 Ltmp955-Ltmp976
	.byte	0
	.byte	0
	.uleb128 Ltmp955-Lfunc_begin22
	.uleb128 Ltmp956-Ltmp955
	.uleb128 Ltmp988-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp957-Lfunc_begin22
	.uleb128 Ltmp958-Ltmp957
	.uleb128 Ltmp959-Lfunc_begin22
	.byte	0
	.uleb128 Ltmp958-Lfunc_begin22
	.uleb128 Lfunc_end22-Ltmp958
	.byte	0
	.byte	0
Lcst_end22:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase22:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hd467aaba5ed10466E:
Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception23
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 768
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	dword ptr [rsp + 60], ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	r15, rdi
	mov	byte ptr [rsp + 504], 0
	mov	rax, qword ptr [rsi]
	mov	rcx, qword ptr [rsi + 8]
	mov	qword ptr [rsp + 448], rax
	mov	qword ptr [rsp + 456], rcx
	mov	rax, qword ptr [rsi + 16]
	mov	qword ptr [rsp + 464], rax
	mov	rax, qword ptr [rsi + 24]
	mov	qword ptr [rsp + 472], rax
	mov	rax, qword ptr [rsi + 32]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsi + 40]
	mov	qword ptr [rsp + 488], rax
	mov	rax, qword ptr [rsi + 48]
	mov	qword ptr [rsp + 496], rax
	mov	qword ptr [rsp + 320], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	jl	LBB23_4
	add	rsi, rsi
	jb	LBB23_7
	lea	rdi, [rbx + 256]
Ltmp989:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp990:
	mov	rsi, qword ptr [rbx + 272]
LBB23_4:
	sub	rsi, 1
	jb	LBB23_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 320]
	mov	qword ptr [rax + rsi], r13
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hcc144b7baeda931fE]
	mov	qword ptr [rax + rsi + 8], rcx
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp993:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp994:
	mov	rax, qword ptr [r12 + 80]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [r12 + 72]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [r12 + 96]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [r12 + 88]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r12 + 56]
	mov	rcx, qword ptr [r12 + 64]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
	mov	r14d, dword ptr [rsp + 60]
	mov	byte ptr [rsp + 112], r14b
	mov	r9, qword ptr [rsp + 80]
	mov	rdi, qword ptr [rsp + 88]
	movdqa	xmm0, xmmword ptr [rsp + 96]
	movdqa	xmm1, xmmword ptr [rsp + 64]
	movq	rcx, xmm1
	pshufd	xmm1, xmm1, 78
	movq	rax, xmm1
	pshufd	xmm1, xmm0, 78
	xor	edx, edx
	test	r14b, r14b
	setne	dl
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	movq	qword ptr [rsp + 192], xmm0
	mov	qword ptr [rsp + 176], r9
	mov	qword ptr [rsp + 184], rdi
Ltmp995:
	movq	qword ptr [rsp], xmm1
	lea	rdi, [rsp + 512]
	lea	r9, [rsp + 176]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hce15a800f10f4e33E
Ltmp996:
	movaps	xmm0, xmmword ptr [rsp + 512]
	movaps	xmmword ptr [rsp + 272], xmm0
	movaps	xmm0, xmmword ptr [rsp + 528]
	movaps	xmmword ptr [rsp + 256], xmm0
	movaps	xmm0, xmmword ptr [rsp + 544]
	movaps	xmmword ptr [rsp + 240], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 560]
	movdqa	xmmword ptr [rsp + 224], xmm0
	lea	r12, [rsp + 504]
	mov	al, byte ptr [rsp + 504]
	test	al, al
	je	LBB23_12
	jmp	LBB23_16
	.p2align	4, 0x90
LBB23_23:
Ltmp1005:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp1006:
	movzx	eax, byte ptr [rsp + 504]
	test	al, al
	jne	LBB23_16
LBB23_12:
Ltmp1003:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp1004:
	test	rdx, rdx
	je	LBB23_14
	cmp	rax, r13
	jne	LBB23_23
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hcc144b7baeda931fE]
	cmp	rdx, rcx
	jne	LBB23_23
	lea	rdi, [rsp + 512]
	lea	rsi, [rsp + 320]
	mov	edx, 192
	call	_memcpy
	mov	rsi, qword ptr [rsp + 640]
	mov	rcx, qword ptr [rsp + 648]
	mov	rax, qword ptr [rsp + 656]
	mov	rdx, qword ptr [rsp + 664]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 672]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 680]
	mov	qword ptr [rsp + 80], rdx
	test	rsi, rsi
	je	LBB23_25
	mov	r9, qword ptr [rsp + 688]
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 312], rdi
	mov	rbx, qword ptr [rsp + 64]
	mov	rdx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 304], rdx
	mov	qword ptr [rsp + 296], rbx
	mov	qword ptr [rsp + 216], rdi
	mov	qword ptr [rsp + 208], rdx
	mov	qword ptr [rsp + 200], rbx
	mov	rsi, qword ptr [rsi]
	sub	rsi, qword ptr [rcx]
	jb	LBB23_27
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	mov	rax, qword ptr [rsp + 216]
	mov	qword ptr [rsp + 192], rax
	mov	rax, qword ptr [rsp + 200]
	mov	rdx, qword ptr [rsp + 208]
	mov	qword ptr [rsp + 184], rdx
	mov	qword ptr [rsp + 176], rax
Ltmp1008:
	mov	qword ptr [rsp], r9
	movzx	edx, r14b
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 176]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hce15a800f10f4e33E
Ltmp1009:
	cmp	qword ptr [rsp + 512], 2
	jb	LBB23_33
	mov	r12, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 528]
Ltmp1010:
	mov	rdi, r12
	call	qword ptr [rbx]
Ltmp1011:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB23_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r12
	call	___rust_dealloc
LBB23_33:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	jmp	LBB23_37
LBB23_14:
	mov	al, byte ptr [rsp + 504]
	test	al, al
	jne	LBB23_16
Ltmp1021:
	mov	rdi, rbx
	mov	rsi, r12
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp1022:
LBB23_16:
	mov	rax, qword ptr [rsp + 320]
	cmp	rax, 1
	jne	LBB23_17
	movaps	xmm0, xmmword ptr [rsp + 384]
	movaps	xmm1, xmmword ptr [rsp + 400]
	movaps	xmm2, xmmword ptr [rsp + 416]
	movaps	xmm3, xmmword ptr [rsp + 432]
LBB23_37:
	movaps	xmm4, xmmword ptr [rsp + 272]
	movaps	xmmword ptr [r15], xmm4
	movaps	xmm4, xmmword ptr [rsp + 256]
	movaps	xmmword ptr [r15 + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [r15 + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 224]
	movaps	xmmword ptr [r15 + 48], xmm4
	movaps	xmmword ptr [r15 + 64], xmm0
	movaps	xmmword ptr [r15 + 80], xmm1
	movaps	xmmword ptr [r15 + 96], xmm2
	movaps	xmmword ptr [r15 + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB23_17:
	test	rax, rax
	je	LBB23_35
	mov	rdi, qword ptr [rsp + 328]
	mov	rsi, qword ptr [rsp + 336]
Ltmp1024:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1025:
	jmp	LBB23_6
LBB23_5:
Ltmp1029:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1030:
	jmp	LBB23_6
LBB23_35:
Ltmp1026:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1027:
	jmp	LBB23_6
LBB23_7:
Ltmp991:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp992:
	jmp	LBB23_6
LBB23_25:
Ltmp1015:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1016:
	jmp	LBB23_6
LBB23_27:
Ltmp1013:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1014:
	jmp	LBB23_6
LBB23_47:
Ltmp1028:
	jmp	LBB23_42
LBB23_40:
Ltmp1023:
	jmp	LBB23_46
LBB23_38:
Ltmp1012:
	mov	r14, rax
	mov	rdi, r12
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB23_34:
Ltmp1017:
	mov	r14, rax
Ltmp1018:
	lea	rdi, [rsp + 512]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp1019:
	jmp	LBB23_43
LBB23_41:
Ltmp1020:
LBB23_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB23_19:
Ltmp997:
Ltmp998:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp999:
	mov	rcx, rdx
	lea	rsi, [rsp + 504]
Ltmp1000:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp1001:
LBB23_6:
	ud2
LBB23_45:
Ltmp1002:
	jmp	LBB23_46
LBB23_44:
Ltmp1031:
	jmp	LBB23_46
LBB23_39:
Ltmp1007:
LBB23_46:
	mov	r14, rax
	lea	rdi, [rsp + 320]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB23_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end23:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table23:
Lexception23:
	.byte	255
	.byte	155
	.uleb128 Lttbase23-Lttbaseref23
Lttbaseref23:
	.byte	1
	.uleb128 Lcst_end23-Lcst_begin23
Lcst_begin23:
	.uleb128 Ltmp989-Lfunc_begin23
	.uleb128 Ltmp994-Ltmp989
	.uleb128 Ltmp1031-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp995-Lfunc_begin23
	.uleb128 Ltmp996-Ltmp995
	.uleb128 Ltmp997-Lfunc_begin23
	.byte	3
	.uleb128 Ltmp1005-Lfunc_begin23
	.uleb128 Ltmp1004-Ltmp1005
	.uleb128 Ltmp1007-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp1004-Lfunc_begin23
	.uleb128 Ltmp1008-Ltmp1004
	.byte	0
	.byte	0
	.uleb128 Ltmp1008-Lfunc_begin23
	.uleb128 Ltmp1009-Ltmp1008
	.uleb128 Ltmp1017-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp1010-Lfunc_begin23
	.uleb128 Ltmp1011-Ltmp1010
	.uleb128 Ltmp1012-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp1021-Lfunc_begin23
	.uleb128 Ltmp1022-Ltmp1021
	.uleb128 Ltmp1023-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp1024-Lfunc_begin23
	.uleb128 Ltmp1025-Ltmp1024
	.uleb128 Ltmp1028-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp1029-Lfunc_begin23
	.uleb128 Ltmp1030-Ltmp1029
	.uleb128 Ltmp1031-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp1026-Lfunc_begin23
	.uleb128 Ltmp1027-Ltmp1026
	.uleb128 Ltmp1028-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp991-Lfunc_begin23
	.uleb128 Ltmp992-Ltmp991
	.uleb128 Ltmp1031-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp1015-Lfunc_begin23
	.uleb128 Ltmp1014-Ltmp1015
	.uleb128 Ltmp1017-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp1014-Lfunc_begin23
	.uleb128 Ltmp1018-Ltmp1014
	.byte	0
	.byte	0
	.uleb128 Ltmp1018-Lfunc_begin23
	.uleb128 Ltmp1019-Ltmp1018
	.uleb128 Ltmp1020-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp1019-Lfunc_begin23
	.uleb128 Ltmp998-Ltmp1019
	.byte	0
	.byte	0
	.uleb128 Ltmp998-Lfunc_begin23
	.uleb128 Ltmp999-Ltmp998
	.uleb128 Ltmp1031-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp1000-Lfunc_begin23
	.uleb128 Ltmp1001-Ltmp1000
	.uleb128 Ltmp1002-Lfunc_begin23
	.byte	0
	.uleb128 Ltmp1001-Lfunc_begin23
	.uleb128 Lfunc_end23-Ltmp1001
	.byte	0
	.byte	0
Lcst_end23:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase23:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hdfa8584ced223de9E:
Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception24
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 768
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	dword ptr [rsp + 60], ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	r15, rdi
	mov	byte ptr [rsp + 504], 0
	mov	rax, qword ptr [rsi]
	mov	rcx, qword ptr [rsi + 8]
	mov	qword ptr [rsp + 448], rax
	mov	qword ptr [rsp + 456], rcx
	mov	rax, qword ptr [rsi + 16]
	mov	qword ptr [rsp + 464], rax
	mov	rax, qword ptr [rsi + 24]
	mov	qword ptr [rsp + 472], rax
	mov	rax, qword ptr [rsi + 32]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsi + 40]
	mov	qword ptr [rsp + 488], rax
	mov	rax, qword ptr [rsi + 48]
	mov	qword ptr [rsp + 496], rax
	mov	qword ptr [rsp + 320], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	jl	LBB24_4
	add	rsi, rsi
	jb	LBB24_7
	lea	rdi, [rbx + 256]
Ltmp1032:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp1033:
	mov	rsi, qword ptr [rbx + 272]
LBB24_4:
	sub	rsi, 1
	jb	LBB24_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 320]
	mov	qword ptr [rax + rsi], r13
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h83d26d877944e7c7E]
	mov	qword ptr [rax + rsi + 8], rcx
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp1036:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp1037:
	mov	rax, qword ptr [r12 + 80]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [r12 + 72]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [r12 + 96]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [r12 + 88]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r12 + 56]
	mov	rcx, qword ptr [r12 + 64]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
	mov	r14d, dword ptr [rsp + 60]
	mov	byte ptr [rsp + 112], r14b
	mov	r9, qword ptr [rsp + 80]
	mov	rdi, qword ptr [rsp + 88]
	movdqa	xmm0, xmmword ptr [rsp + 96]
	movdqa	xmm1, xmmword ptr [rsp + 64]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movq	rcx, xmm1
	pshufd	xmm1, xmm1, 78
	movq	rax, xmm1
	movaps	xmmword ptr [rsp + 272], xmm2
	xor	edx, edx
	cmp	byte ptr [rsp + 272], 0
	pshufd	xmm1, xmm0, 78
	setne	dl
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	movq	qword ptr [rsp + 176], xmm0
	mov	qword ptr [rsp + 160], r9
	mov	qword ptr [rsp + 168], rdi
Ltmp1038:
	movq	qword ptr [rsp], xmm1
	lea	rdi, [rsp + 512]
	lea	r9, [rsp + 160]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h1013a109747a48f3E
Ltmp1039:
	movaps	xmm0, xmmword ptr [rsp + 512]
	movaps	xmmword ptr [rsp + 256], xmm0
	movaps	xmm0, xmmword ptr [rsp + 528]
	movaps	xmmword ptr [rsp + 240], xmm0
	movaps	xmm0, xmmword ptr [rsp + 544]
	movaps	xmmword ptr [rsp + 224], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 560]
	movdqa	xmmword ptr [rsp + 208], xmm0
	lea	r12, [rsp + 504]
	mov	al, byte ptr [rsp + 504]
	test	al, al
	je	LBB24_12
	jmp	LBB24_16
	.p2align	4, 0x90
LBB24_23:
Ltmp1048:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp1049:
	movzx	eax, byte ptr [rsp + 504]
	test	al, al
	jne	LBB24_16
LBB24_12:
Ltmp1046:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp1047:
	test	rdx, rdx
	je	LBB24_14
	cmp	rax, r13
	jne	LBB24_23
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h83d26d877944e7c7E]
	cmp	rdx, rcx
	jne	LBB24_23
	lea	rdi, [rsp + 512]
	lea	rsi, [rsp + 320]
	mov	edx, 192
	call	_memcpy
	mov	rsi, qword ptr [rsp + 640]
	mov	rcx, qword ptr [rsp + 648]
	mov	rax, qword ptr [rsp + 656]
	mov	rdx, qword ptr [rsp + 664]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 672]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 680]
	mov	qword ptr [rsp + 80], rdx
	test	rsi, rsi
	je	LBB24_25
	mov	r9, qword ptr [rsp + 688]
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 312], rdi
	mov	rbx, qword ptr [rsp + 64]
	mov	rdx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 304], rdx
	mov	qword ptr [rsp + 296], rbx
	mov	qword ptr [rsp + 200], rdi
	mov	qword ptr [rsp + 192], rdx
	mov	qword ptr [rsp + 184], rbx
	mov	rsi, qword ptr [rsi]
	sub	rsi, qword ptr [rcx]
	jb	LBB24_27
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	mov	rax, qword ptr [rsp + 200]
	mov	qword ptr [rsp + 176], rax
	mov	rax, qword ptr [rsp + 184]
	mov	rdx, qword ptr [rsp + 192]
	mov	qword ptr [rsp + 168], rdx
	mov	qword ptr [rsp + 160], rax
Ltmp1051:
	mov	qword ptr [rsp], r9
	movzx	edx, r14b
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 160]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h1013a109747a48f3E
Ltmp1052:
	cmp	qword ptr [rsp + 512], 2
	jb	LBB24_33
	mov	r12, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 528]
Ltmp1053:
	mov	rdi, r12
	call	qword ptr [rbx]
Ltmp1054:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB24_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r12
	call	___rust_dealloc
LBB24_33:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	jmp	LBB24_37
LBB24_14:
	mov	al, byte ptr [rsp + 504]
	test	al, al
	jne	LBB24_16
Ltmp1064:
	mov	rdi, rbx
	mov	rsi, r12
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp1065:
LBB24_16:
	mov	rax, qword ptr [rsp + 320]
	cmp	rax, 1
	jne	LBB24_17
	movaps	xmm0, xmmword ptr [rsp + 384]
	movaps	xmm1, xmmword ptr [rsp + 400]
	movaps	xmm2, xmmword ptr [rsp + 416]
	movaps	xmm3, xmmword ptr [rsp + 432]
LBB24_37:
	movaps	xmm4, xmmword ptr [rsp + 256]
	movaps	xmmword ptr [r15], xmm4
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [r15 + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 224]
	movaps	xmmword ptr [r15 + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 208]
	movaps	xmmword ptr [r15 + 48], xmm4
	movaps	xmmword ptr [r15 + 64], xmm0
	movaps	xmmword ptr [r15 + 80], xmm1
	movaps	xmmword ptr [r15 + 96], xmm2
	movaps	xmmword ptr [r15 + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB24_17:
	test	rax, rax
	je	LBB24_35
	mov	rdi, qword ptr [rsp + 328]
	mov	rsi, qword ptr [rsp + 336]
Ltmp1067:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1068:
	jmp	LBB24_6
LBB24_5:
Ltmp1072:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1073:
	jmp	LBB24_6
LBB24_35:
Ltmp1069:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1070:
	jmp	LBB24_6
LBB24_7:
Ltmp1034:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1035:
	jmp	LBB24_6
LBB24_25:
Ltmp1058:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1059:
	jmp	LBB24_6
LBB24_27:
Ltmp1056:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1057:
	jmp	LBB24_6
LBB24_47:
Ltmp1071:
	jmp	LBB24_42
LBB24_40:
Ltmp1066:
	jmp	LBB24_46
LBB24_38:
Ltmp1055:
	mov	r14, rax
	mov	rdi, r12
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB24_34:
Ltmp1060:
	mov	r14, rax
Ltmp1061:
	lea	rdi, [rsp + 512]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp1062:
	jmp	LBB24_43
LBB24_41:
Ltmp1063:
LBB24_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB24_19:
Ltmp1040:
Ltmp1041:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1042:
	mov	rcx, rdx
	lea	rsi, [rsp + 504]
Ltmp1043:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp1044:
LBB24_6:
	ud2
LBB24_45:
Ltmp1045:
	jmp	LBB24_46
LBB24_44:
Ltmp1074:
	jmp	LBB24_46
LBB24_39:
Ltmp1050:
LBB24_46:
	mov	r14, rax
	lea	rdi, [rsp + 320]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB24_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end24:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table24:
Lexception24:
	.byte	255
	.byte	155
	.uleb128 Lttbase24-Lttbaseref24
Lttbaseref24:
	.byte	1
	.uleb128 Lcst_end24-Lcst_begin24
Lcst_begin24:
	.uleb128 Ltmp1032-Lfunc_begin24
	.uleb128 Ltmp1037-Ltmp1032
	.uleb128 Ltmp1074-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1038-Lfunc_begin24
	.uleb128 Ltmp1039-Ltmp1038
	.uleb128 Ltmp1040-Lfunc_begin24
	.byte	3
	.uleb128 Ltmp1048-Lfunc_begin24
	.uleb128 Ltmp1047-Ltmp1048
	.uleb128 Ltmp1050-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1047-Lfunc_begin24
	.uleb128 Ltmp1051-Ltmp1047
	.byte	0
	.byte	0
	.uleb128 Ltmp1051-Lfunc_begin24
	.uleb128 Ltmp1052-Ltmp1051
	.uleb128 Ltmp1060-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1053-Lfunc_begin24
	.uleb128 Ltmp1054-Ltmp1053
	.uleb128 Ltmp1055-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1064-Lfunc_begin24
	.uleb128 Ltmp1065-Ltmp1064
	.uleb128 Ltmp1066-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1067-Lfunc_begin24
	.uleb128 Ltmp1068-Ltmp1067
	.uleb128 Ltmp1071-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1072-Lfunc_begin24
	.uleb128 Ltmp1073-Ltmp1072
	.uleb128 Ltmp1074-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1069-Lfunc_begin24
	.uleb128 Ltmp1070-Ltmp1069
	.uleb128 Ltmp1071-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1034-Lfunc_begin24
	.uleb128 Ltmp1035-Ltmp1034
	.uleb128 Ltmp1074-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1058-Lfunc_begin24
	.uleb128 Ltmp1057-Ltmp1058
	.uleb128 Ltmp1060-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1057-Lfunc_begin24
	.uleb128 Ltmp1061-Ltmp1057
	.byte	0
	.byte	0
	.uleb128 Ltmp1061-Lfunc_begin24
	.uleb128 Ltmp1062-Ltmp1061
	.uleb128 Ltmp1063-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1062-Lfunc_begin24
	.uleb128 Ltmp1041-Ltmp1062
	.byte	0
	.byte	0
	.uleb128 Ltmp1041-Lfunc_begin24
	.uleb128 Ltmp1042-Ltmp1041
	.uleb128 Ltmp1074-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1043-Lfunc_begin24
	.uleb128 Ltmp1044-Ltmp1043
	.uleb128 Ltmp1045-Lfunc_begin24
	.byte	0
	.uleb128 Ltmp1044-Lfunc_begin24
	.uleb128 Lfunc_end24-Ltmp1044
	.byte	0
	.byte	0
Lcst_end24:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase24:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17he54d9e491b91f7a1E:
Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception25
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 768
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	dword ptr [rsp + 60], ecx
	mov	rbx, rdx
	mov	r12, rsi
	mov	r15, rdi
	mov	byte ptr [rsp + 504], 0
	mov	rax, qword ptr [rsi]
	mov	rcx, qword ptr [rsi + 8]
	mov	qword ptr [rsp + 448], rax
	mov	qword ptr [rsp + 456], rcx
	mov	rax, qword ptr [rsi + 16]
	mov	qword ptr [rsp + 464], rax
	mov	rax, qword ptr [rsi + 24]
	mov	qword ptr [rsp + 472], rax
	mov	rax, qword ptr [rsi + 32]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsi + 40]
	mov	qword ptr [rsp + 488], rax
	mov	rax, qword ptr [rsi + 48]
	mov	qword ptr [rsp + 496], rax
	mov	qword ptr [rsp + 320], 0
	mov	rax, qword ptr [rdx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rdx + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	jl	LBB25_4
	add	rsi, rsi
	jb	LBB25_7
	lea	rdi, [rbx + 256]
Ltmp1075:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp1076:
	mov	rsi, qword ptr [rbx + 272]
LBB25_4:
	sub	rsi, 1
	jb	LBB25_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 320]
	mov	qword ptr [rax + rsi], r13
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h23a755ad2f7f77cfE]
	mov	qword ptr [rax + rsi + 8], rcx
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp1079:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp1080:
	mov	rax, qword ptr [r12 + 80]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [r12 + 72]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [r12 + 96]
	mov	qword ptr [rsp + 104], rax
	mov	rax, qword ptr [r12 + 88]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r12 + 56]
	mov	rcx, qword ptr [r12 + 64]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
	mov	r14d, dword ptr [rsp + 60]
	mov	byte ptr [rsp + 112], r14b
	mov	r9, qword ptr [rsp + 80]
	mov	rdi, qword ptr [rsp + 88]
	movdqa	xmm0, xmmword ptr [rsp + 96]
	movdqa	xmm1, xmmword ptr [rsp + 64]
	movq	rcx, xmm1
	pshufd	xmm1, xmm1, 78
	movq	rax, xmm1
	movaps	xmm1, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rsp + 272], xmm1
	xor	edx, edx
	cmp	byte ptr [rsp + 272], 0
	pshufd	xmm1, xmm0, 78
	setne	dl
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	movq	qword ptr [rsp + 176], xmm0
	mov	qword ptr [rsp + 160], r9
	mov	qword ptr [rsp + 168], rdi
Ltmp1081:
	movq	qword ptr [rsp], xmm1
	lea	rdi, [rsp + 512]
	lea	r9, [rsp + 160]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7e7cdc163fa85702E
Ltmp1082:
	movaps	xmm0, xmmword ptr [rsp + 512]
	movaps	xmmword ptr [rsp + 256], xmm0
	movaps	xmm0, xmmword ptr [rsp + 528]
	movaps	xmmword ptr [rsp + 240], xmm0
	movaps	xmm0, xmmword ptr [rsp + 544]
	movaps	xmmword ptr [rsp + 224], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 560]
	movdqa	xmmword ptr [rsp + 208], xmm0
	lea	r12, [rsp + 504]
	mov	al, byte ptr [rsp + 504]
	test	al, al
	je	LBB25_12
	jmp	LBB25_16
	.p2align	4, 0x90
LBB25_23:
Ltmp1091:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp1092:
	movzx	eax, byte ptr [rsp + 504]
	test	al, al
	jne	LBB25_16
LBB25_12:
Ltmp1089:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp1090:
	test	rdx, rdx
	je	LBB25_14
	cmp	rax, r13
	jne	LBB25_23
	lea	rcx, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h23a755ad2f7f77cfE]
	cmp	rdx, rcx
	jne	LBB25_23
	lea	rdi, [rsp + 512]
	lea	rsi, [rsp + 320]
	mov	edx, 192
	call	_memcpy
	mov	rsi, qword ptr [rsp + 640]
	mov	rcx, qword ptr [rsp + 648]
	mov	rax, qword ptr [rsp + 656]
	mov	rdx, qword ptr [rsp + 664]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 672]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 680]
	mov	qword ptr [rsp + 80], rdx
	test	rsi, rsi
	je	LBB25_25
	mov	r9, qword ptr [rsp + 688]
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 312], rdi
	mov	rbx, qword ptr [rsp + 64]
	mov	rdx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 304], rdx
	mov	qword ptr [rsp + 296], rbx
	mov	qword ptr [rsp + 200], rdi
	mov	qword ptr [rsp + 192], rdx
	mov	qword ptr [rsp + 184], rbx
	mov	rsi, qword ptr [rsi]
	sub	rsi, qword ptr [rcx]
	jb	LBB25_27
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	mov	rax, qword ptr [rsp + 200]
	mov	qword ptr [rsp + 176], rax
	mov	rax, qword ptr [rsp + 184]
	mov	rdx, qword ptr [rsp + 192]
	mov	qword ptr [rsp + 168], rdx
	mov	qword ptr [rsp + 160], rax
Ltmp1094:
	mov	qword ptr [rsp], r9
	movzx	edx, r14b
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 160]
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7e7cdc163fa85702E
Ltmp1095:
	cmp	qword ptr [rsp + 512], 2
	jb	LBB25_33
	mov	r12, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 528]
Ltmp1096:
	mov	rdi, r12
	call	qword ptr [rbx]
Ltmp1097:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB25_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r12
	call	___rust_dealloc
LBB25_33:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	jmp	LBB25_37
LBB25_14:
	mov	al, byte ptr [rsp + 504]
	test	al, al
	jne	LBB25_16
Ltmp1107:
	mov	rdi, rbx
	mov	rsi, r12
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp1108:
LBB25_16:
	mov	rax, qword ptr [rsp + 320]
	cmp	rax, 1
	jne	LBB25_17
	movaps	xmm0, xmmword ptr [rsp + 384]
	movaps	xmm1, xmmword ptr [rsp + 400]
	movaps	xmm2, xmmword ptr [rsp + 416]
	movaps	xmm3, xmmword ptr [rsp + 432]
LBB25_37:
	movaps	xmm4, xmmword ptr [rsp + 256]
	movaps	xmmword ptr [r15], xmm4
	movaps	xmm4, xmmword ptr [rsp + 240]
	movaps	xmmword ptr [r15 + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 224]
	movaps	xmmword ptr [r15 + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 208]
	movaps	xmmword ptr [r15 + 48], xmm4
	movaps	xmmword ptr [r15 + 64], xmm0
	movaps	xmmword ptr [r15 + 80], xmm1
	movaps	xmmword ptr [r15 + 96], xmm2
	movaps	xmmword ptr [r15 + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB25_17:
	test	rax, rax
	je	LBB25_35
	mov	rdi, qword ptr [rsp + 328]
	mov	rsi, qword ptr [rsp + 336]
Ltmp1110:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1111:
	jmp	LBB25_6
LBB25_5:
Ltmp1115:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1116:
	jmp	LBB25_6
LBB25_35:
Ltmp1112:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1113:
	jmp	LBB25_6
LBB25_7:
Ltmp1077:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1078:
	jmp	LBB25_6
LBB25_25:
Ltmp1101:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1102:
	jmp	LBB25_6
LBB25_27:
Ltmp1099:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1100:
	jmp	LBB25_6
LBB25_47:
Ltmp1114:
	jmp	LBB25_42
LBB25_40:
Ltmp1109:
	jmp	LBB25_46
LBB25_38:
Ltmp1098:
	mov	r14, rax
	mov	rdi, r12
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB25_34:
Ltmp1103:
	mov	r14, rax
Ltmp1104:
	lea	rdi, [rsp + 512]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp1105:
	jmp	LBB25_43
LBB25_41:
Ltmp1106:
LBB25_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB25_19:
Ltmp1083:
Ltmp1084:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1085:
	mov	rcx, rdx
	lea	rsi, [rsp + 504]
Ltmp1086:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp1087:
LBB25_6:
	ud2
LBB25_45:
Ltmp1088:
	jmp	LBB25_46
LBB25_44:
Ltmp1117:
	jmp	LBB25_46
LBB25_39:
Ltmp1093:
LBB25_46:
	mov	r14, rax
	lea	rdi, [rsp + 320]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB25_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end25:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table25:
Lexception25:
	.byte	255
	.byte	155
	.uleb128 Lttbase25-Lttbaseref25
Lttbaseref25:
	.byte	1
	.uleb128 Lcst_end25-Lcst_begin25
Lcst_begin25:
	.uleb128 Ltmp1075-Lfunc_begin25
	.uleb128 Ltmp1080-Ltmp1075
	.uleb128 Ltmp1117-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1081-Lfunc_begin25
	.uleb128 Ltmp1082-Ltmp1081
	.uleb128 Ltmp1083-Lfunc_begin25
	.byte	3
	.uleb128 Ltmp1091-Lfunc_begin25
	.uleb128 Ltmp1090-Ltmp1091
	.uleb128 Ltmp1093-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1090-Lfunc_begin25
	.uleb128 Ltmp1094-Ltmp1090
	.byte	0
	.byte	0
	.uleb128 Ltmp1094-Lfunc_begin25
	.uleb128 Ltmp1095-Ltmp1094
	.uleb128 Ltmp1103-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1096-Lfunc_begin25
	.uleb128 Ltmp1097-Ltmp1096
	.uleb128 Ltmp1098-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1107-Lfunc_begin25
	.uleb128 Ltmp1108-Ltmp1107
	.uleb128 Ltmp1109-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1110-Lfunc_begin25
	.uleb128 Ltmp1111-Ltmp1110
	.uleb128 Ltmp1114-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1115-Lfunc_begin25
	.uleb128 Ltmp1116-Ltmp1115
	.uleb128 Ltmp1117-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1112-Lfunc_begin25
	.uleb128 Ltmp1113-Ltmp1112
	.uleb128 Ltmp1114-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1077-Lfunc_begin25
	.uleb128 Ltmp1078-Ltmp1077
	.uleb128 Ltmp1117-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1101-Lfunc_begin25
	.uleb128 Ltmp1100-Ltmp1101
	.uleb128 Ltmp1103-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1100-Lfunc_begin25
	.uleb128 Ltmp1104-Ltmp1100
	.byte	0
	.byte	0
	.uleb128 Ltmp1104-Lfunc_begin25
	.uleb128 Ltmp1105-Ltmp1104
	.uleb128 Ltmp1106-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1105-Lfunc_begin25
	.uleb128 Ltmp1084-Ltmp1105
	.byte	0
	.byte	0
	.uleb128 Ltmp1084-Lfunc_begin25
	.uleb128 Ltmp1085-Ltmp1084
	.uleb128 Ltmp1117-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1086-Lfunc_begin25
	.uleb128 Ltmp1087-Ltmp1086
	.uleb128 Ltmp1088-Lfunc_begin25
	.byte	0
	.uleb128 Ltmp1087-Lfunc_begin25
	.uleb128 Lfunc_end25-Ltmp1087
	.byte	0
	.byte	0
Lcst_end25:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase25:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17he9e6a61e30b054aeE:
Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception26
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 184
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r15, rdi
	mov	rax, qword ptr [rdi + 40]
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rdi + 32]
	mov	qword ptr [rbp - 96], rax
	mov	rax, qword ptr [rdi + 24]
	mov	qword ptr [rbp - 104], rax
	mov	rax, qword ptr [rdi + 16]
	mov	qword ptr [rbp - 112], rax
	mov	rax, qword ptr [rdi]
	mov	rcx, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 120], rcx
	mov	qword ptr [rbp - 128], rax
	mov	byte ptr [rbp - 56], 0
	mov	qword ptr [rbp - 80], 0
	mov	rax, qword ptr [rsi + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rsi + 272]
	mov	rcx, r14
	sub	rcx, rax
	cmp	rcx, rsi
	mov	dword ptr [rbp - 44], edx
	jl	LBB26_4
	add	rsi, rsi
	jb	LBB26_7
	lea	rdi, [rbx + 256]
Ltmp1118:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp1119:
	mov	rsi, qword ptr [rbx + 272]
LBB26_4:
	sub	rsi, 1
	jb	LBB26_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r12, [rbp - 128]
	mov	qword ptr [rax + rsi], r12
	lea	r13, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h14d9cc91c3586ce4E]
	mov	qword ptr [rax + rsi + 8], r13
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp1122:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp1123:
	mov	rax, qword ptr [r15 + 48]
	mov	rcx, qword ptr [r15 + 56]
	mov	r8, qword ptr [r15 + 64]
	mov	r9, qword ptr [r15 + 72]
	mov	rsi, qword ptr [r15 + 80]
	mov	rdi, qword ptr [rax]
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
Ltmp1124:
	mov	qword ptr [rsp], rsi
	movzx	r14d, byte ptr [rbp - 44]
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7832ac13ae304cccE
Ltmp1125:
LBB26_12:
	lea	r15, [rbp - 56]
	mov	al, byte ptr [rbp - 56]
	test	al, al
	je	LBB26_14
	jmp	LBB26_18
	.p2align	4, 0x90
LBB26_23:
Ltmp1134:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp1135:
	movzx	eax, byte ptr [rbp - 56]
	test	al, al
	jne	LBB26_18
LBB26_14:
Ltmp1132:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp1133:
	test	rdx, rdx
	je	LBB26_16
	cmp	rax, r12
	jne	LBB26_23
	cmp	rdx, r13
	jne	LBB26_23
	lea	rdi, [rbp - 208]
	lea	rsi, [rbp - 128]
	mov	ecx, 10
	rep movsq es:[rdi], [rsi]
	mov	rax, qword ptr [rbp - 208]
	test	rax, rax
	je	LBB26_25
	mov	rcx, qword ptr [rbp - 200]
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB26_27
	mov	rax, qword ptr [rbp - 192]
	mov	r8, qword ptr [rbp - 184]
	mov	r9, qword ptr [rbp - 176]
	mov	rsi, qword ptr [rbp - 168]
	mov	rdx, qword ptr [rax]
	mov	rcx, qword ptr [rax + 8]
Ltmp1137:
	mov	qword ptr [rsp], rsi
	mov	esi, r14d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7832ac13ae304cccE
Ltmp1138:
	cmp	qword ptr [rbp - 160], 2
	jb	LBB26_33
	mov	r15, qword ptr [rbp - 152]
	mov	rbx, qword ptr [rbp - 144]
Ltmp1139:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp1140:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB26_33
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
	jmp	LBB26_33
LBB26_16:
	mov	al, byte ptr [rbp - 56]
	test	al, al
	jne	LBB26_18
Ltmp1150:
	mov	rdi, rbx
	mov	rsi, r15
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp1151:
LBB26_18:
	mov	rax, qword ptr [rbp - 80]
	cmp	rax, 1
	jne	LBB26_19
LBB26_33:
	add	rsp, 184
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB26_19:
	test	rax, rax
	je	LBB26_35
	mov	rdi, qword ptr [rbp - 72]
	mov	rsi, qword ptr [rbp - 64]
Ltmp1153:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1154:
	jmp	LBB26_6
LBB26_5:
Ltmp1158:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1159:
	jmp	LBB26_6
LBB26_35:
Ltmp1155:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1156:
	jmp	LBB26_6
LBB26_7:
Ltmp1120:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1121:
	jmp	LBB26_6
LBB26_25:
Ltmp1144:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1145:
	jmp	LBB26_6
LBB26_27:
Ltmp1142:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1143:
LBB26_6:
	ud2
LBB26_46:
Ltmp1157:
	jmp	LBB26_40
LBB26_38:
Ltmp1152:
	jmp	LBB26_45
LBB26_36:
Ltmp1141:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB26_34:
Ltmp1146:
	mov	r14, rax
	lea	rdi, [rbp - 160]
Ltmp1147:
	call	__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E
Ltmp1148:
	jmp	LBB26_41
LBB26_39:
Ltmp1149:
LBB26_40:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB26_10:
Ltmp1126:
Ltmp1127:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1128:
	test	rax, rax
	je	LBB26_12
	mov	rcx, rdx
	lea	rsi, [rbp - 56]
Ltmp1129:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp1130:
	jmp	LBB26_6
LBB26_44:
Ltmp1131:
	jmp	LBB26_45
LBB26_42:
Ltmp1160:
	jmp	LBB26_45
LBB26_37:
Ltmp1136:
LBB26_45:
	mov	r14, rax
	lea	rdi, [rbp - 128]
	call	__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E
LBB26_41:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end26:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table26:
Lexception26:
	.byte	255
	.byte	155
	.uleb128 Lttbase26-Lttbaseref26
Lttbaseref26:
	.byte	1
	.uleb128 Lcst_end26-Lcst_begin26
Lcst_begin26:
	.uleb128 Ltmp1118-Lfunc_begin26
	.uleb128 Ltmp1123-Ltmp1118
	.uleb128 Ltmp1160-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1124-Lfunc_begin26
	.uleb128 Ltmp1125-Ltmp1124
	.uleb128 Ltmp1126-Lfunc_begin26
	.byte	3
	.uleb128 Ltmp1134-Lfunc_begin26
	.uleb128 Ltmp1133-Ltmp1134
	.uleb128 Ltmp1136-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1137-Lfunc_begin26
	.uleb128 Ltmp1138-Ltmp1137
	.uleb128 Ltmp1146-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1139-Lfunc_begin26
	.uleb128 Ltmp1140-Ltmp1139
	.uleb128 Ltmp1141-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1150-Lfunc_begin26
	.uleb128 Ltmp1151-Ltmp1150
	.uleb128 Ltmp1152-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1153-Lfunc_begin26
	.uleb128 Ltmp1154-Ltmp1153
	.uleb128 Ltmp1157-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1158-Lfunc_begin26
	.uleb128 Ltmp1159-Ltmp1158
	.uleb128 Ltmp1160-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1155-Lfunc_begin26
	.uleb128 Ltmp1156-Ltmp1155
	.uleb128 Ltmp1157-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1120-Lfunc_begin26
	.uleb128 Ltmp1121-Ltmp1120
	.uleb128 Ltmp1160-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1144-Lfunc_begin26
	.uleb128 Ltmp1143-Ltmp1144
	.uleb128 Ltmp1146-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1143-Lfunc_begin26
	.uleb128 Ltmp1147-Ltmp1143
	.byte	0
	.byte	0
	.uleb128 Ltmp1147-Lfunc_begin26
	.uleb128 Ltmp1148-Ltmp1147
	.uleb128 Ltmp1149-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1148-Lfunc_begin26
	.uleb128 Ltmp1127-Ltmp1148
	.byte	0
	.byte	0
	.uleb128 Ltmp1127-Lfunc_begin26
	.uleb128 Ltmp1128-Ltmp1127
	.uleb128 Ltmp1160-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1129-Lfunc_begin26
	.uleb128 Ltmp1130-Ltmp1129
	.uleb128 Ltmp1131-Lfunc_begin26
	.byte	0
	.uleb128 Ltmp1130-Lfunc_begin26
	.uleb128 Lfunc_end26-Ltmp1130
	.byte	0
	.byte	0
Lcst_end26:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase26:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hfb786e3748f8012eE:
Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception27
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 704
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rdx
	mov	r12, rsi
	mov	qword ptr [rsp + 144], rdi
	mov	byte ptr [rsp + 440], 0
	mov	rax, qword ptr [rsi]
	mov	rdx, qword ptr [rsi + 8]
	mov	qword ptr [rsp + 384], rax
	mov	qword ptr [rsp + 392], rdx
	mov	rax, qword ptr [rsi + 16]
	mov	qword ptr [rsp + 400], rax
	mov	rax, qword ptr [rsi + 24]
	mov	qword ptr [rsp + 408], rax
	mov	rax, qword ptr [rsi + 32]
	mov	qword ptr [rsp + 416], rax
	mov	rax, qword ptr [rsi + 40]
	mov	qword ptr [rsp + 424], rax
	mov	rax, qword ptr [rsi + 48]
	mov	qword ptr [rsp + 432], rax
	mov	qword ptr [rsp + 256], 0
	mov	rax, qword ptr [rbx + 256]
	mov	r14, qword ptr [rax + 264]
	mov	rax, qword ptr [rax + 256]
	mov	rsi, qword ptr [rbx + 272]
	mov	rdx, r14
	sub	rdx, rax
	cmp	rdx, rsi
	mov	dword ptr [rsp + 128], ecx
	jl	LBB27_4
	add	rsi, rsi
	jb	LBB27_7
	lea	rdi, [rbx + 256]
Ltmp1161:
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
Ltmp1162:
	mov	rsi, qword ptr [rbx + 272]
LBB27_4:
	sub	rsi, 1
	jb	LBB27_5
	mov	rax, qword ptr [rbx + 264]
	and	rsi, r14
	shl	rsi, 4
	lea	r13, [rsp + 256]
	mov	qword ptr [rax + rsi], r13
	lea	r15, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h607ca98c39182f5cE]
	mov	qword ptr [rax + rsi + 8], r15
	##MEMBARRIER
	mov	rax, qword ptr [rbx + 256]
	inc	r14
	mov	qword ptr [rax + 264], r14
	mov	edi, 408
	add	rdi, qword ptr [rbx + 304]
	mov	rsi, qword ptr [rbx + 288]
Ltmp1165:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp1166:
	mov	rax, qword ptr [r12 + 96]
	mov	qword ptr [rsp + 104], rax
	mov	rcx, qword ptr [r12 + 88]
	mov	qword ptr [rsp + 96], rcx
	mov	rcx, qword ptr [r12 + 80]
	mov	qword ptr [rsp + 88], rcx
	mov	rcx, qword ptr [r12 + 72]
	mov	qword ptr [rsp + 80], rcx
	mov	rcx, qword ptr [r12 + 56]
	mov	rdx, qword ptr [r12 + 64]
	mov	qword ptr [rsp + 72], rdx
	mov	qword ptr [rsp + 64], rcx
	mov	edi, dword ptr [rsp + 128]
	mov	byte ptr [rsp + 112], dil
	mov	rsi, qword ptr [rcx]
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	mov	rdx, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 32], rdx
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 40], rdx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 48], rdx
Ltmp1167:
	mov	qword ptr [rsp], rax
	movzx	r12d, dil
	lea	rdi, [rsp + 448]
	lea	r9, [rsp + 32]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h9345e3cb89fa4930E
Ltmp1168:
	movaps	xmm0, xmmword ptr [rsp + 448]
	movaps	xmmword ptr [rsp + 128], xmm0
	movaps	xmm0, xmmword ptr [rsp + 464]
	movaps	xmmword ptr [rsp + 208], xmm0
	movaps	xmm0, xmmword ptr [rsp + 480]
	movaps	xmmword ptr [rsp + 192], xmm0
	movaps	xmm0, xmmword ptr [rsp + 496]
	movaps	xmmword ptr [rsp + 176], xmm0
	lea	r14, [rsp + 440]
	mov	al, byte ptr [rsp + 440]
	test	al, al
	je	LBB27_12
	jmp	LBB27_16
	.p2align	4, 0x90
LBB27_23:
Ltmp1177:
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp1178:
	movzx	eax, byte ptr [rsp + 440]
	test	al, al
	jne	LBB27_16
LBB27_12:
Ltmp1175:
	mov	rdi, rbx
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp1176:
	test	rdx, rdx
	je	LBB27_14
	cmp	rax, r13
	jne	LBB27_23
	cmp	rdx, r15
	jne	LBB27_23
	lea	rdi, [rsp + 448]
	lea	rsi, [rsp + 256]
	mov	edx, 192
	call	_memcpy
	mov	rsi, qword ptr [rsp + 576]
	mov	rcx, qword ptr [rsp + 584]
	mov	rax, qword ptr [rsp + 592]
	mov	rdx, qword ptr [rsp + 600]
	mov	qword ptr [rsp + 64], rdx
	mov	rdx, qword ptr [rsp + 608]
	mov	qword ptr [rsp + 72], rdx
	mov	rdx, qword ptr [rsp + 616]
	mov	qword ptr [rsp + 80], rdx
	test	rsi, rsi
	je	LBB27_25
	mov	r9, qword ptr [rsp + 624]
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 248], rdi
	mov	rbx, qword ptr [rsp + 64]
	mov	rdx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 240], rdx
	mov	qword ptr [rsp + 232], rbx
	mov	qword ptr [rsp + 168], rdi
	mov	qword ptr [rsp + 160], rdx
	mov	qword ptr [rsp + 152], rbx
	mov	rsi, qword ptr [rsi]
	sub	rsi, qword ptr [rcx]
	jb	LBB27_33
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	mov	rax, qword ptr [rsp + 168]
	mov	qword ptr [rsp + 48], rax
	mov	rax, qword ptr [rsp + 152]
	mov	rdx, qword ptr [rsp + 160]
	mov	qword ptr [rsp + 40], rdx
	mov	qword ptr [rsp + 32], rax
Ltmp1180:
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 32]
	mov	edx, r12d
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h9345e3cb89fa4930E
Ltmp1181:
	cmp	qword ptr [rsp + 448], 2
	jb	LBB27_32
	mov	r15, qword ptr [rsp + 456]
	mov	rbx, qword ptr [rsp + 464]
Ltmp1182:
	mov	rdi, r15
	call	qword ptr [rbx]
Ltmp1183:
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB27_32
	mov	rdx, qword ptr [rbx + 16]
	mov	rdi, r15
	call	___rust_dealloc
LBB27_32:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	jmp	LBB27_37
LBB27_14:
	mov	al, byte ptr [rsp + 440]
	test	al, al
	jne	LBB27_16
Ltmp1193:
	mov	rdi, rbx
	mov	rsi, r14
	call	__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E
Ltmp1194:
LBB27_16:
	mov	rax, qword ptr [rsp + 256]
	cmp	rax, 1
	jne	LBB27_17
	movaps	xmm0, xmmword ptr [rsp + 320]
	movaps	xmm1, xmmword ptr [rsp + 336]
	movaps	xmm2, xmmword ptr [rsp + 352]
	movaps	xmm3, xmmword ptr [rsp + 368]
LBB27_37:
	mov	rax, qword ptr [rsp + 144]
	movaps	xmm4, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rax], xmm4
	movaps	xmm4, xmmword ptr [rsp + 208]
	movaps	xmmword ptr [rax + 16], xmm4
	movaps	xmm4, xmmword ptr [rsp + 192]
	movaps	xmmword ptr [rax + 32], xmm4
	movaps	xmm4, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rax + 48], xmm4
	movaps	xmmword ptr [rax + 64], xmm0
	movaps	xmmword ptr [rax + 80], xmm1
	movaps	xmmword ptr [rax + 96], xmm2
	movaps	xmmword ptr [rax + 112], xmm3
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB27_17:
	test	rax, rax
	je	LBB27_35
	mov	rdi, qword ptr [rsp + 264]
	mov	rsi, qword ptr [rsp + 272]
Ltmp1196:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1197:
	jmp	LBB27_6
LBB27_5:
Ltmp1201:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1202:
	jmp	LBB27_6
LBB27_35:
Ltmp1198:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1199:
	jmp	LBB27_6
LBB27_7:
Ltmp1163:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_4]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1164:
	jmp	LBB27_6
LBB27_25:
Ltmp1187:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_6]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1188:
	jmp	LBB27_6
LBB27_33:
Ltmp1185:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1186:
	jmp	LBB27_6
LBB27_47:
Ltmp1200:
	jmp	LBB27_42
LBB27_40:
Ltmp1195:
	jmp	LBB27_46
LBB27_38:
Ltmp1184:
	mov	r14, rax
	mov	rdi, r15
	mov	rsi, rbx
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB27_34:
Ltmp1189:
	mov	r14, rax
Ltmp1190:
	lea	rdi, [rsp + 448]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
Ltmp1191:
	jmp	LBB27_43
LBB27_41:
Ltmp1192:
LBB27_42:
	mov	r14, rax
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB27_19:
Ltmp1169:
Ltmp1170:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1171:
	mov	rcx, rdx
	lea	rsi, [rsp + 440]
Ltmp1172:
	mov	rdi, rbx
	mov	rdx, rax
	call	__ZN10rayon_core4join23join_recover_from_panic17h65e0dcb6d5862f08E
Ltmp1173:
LBB27_6:
	ud2
LBB27_45:
Ltmp1174:
	jmp	LBB27_46
LBB27_44:
Ltmp1203:
	jmp	LBB27_46
LBB27_39:
Ltmp1179:
LBB27_46:
	mov	r14, rax
	lea	rdi, [rsp + 256]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
LBB27_43:
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end27:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table27:
Lexception27:
	.byte	255
	.byte	155
	.uleb128 Lttbase27-Lttbaseref27
Lttbaseref27:
	.byte	1
	.uleb128 Lcst_end27-Lcst_begin27
Lcst_begin27:
	.uleb128 Ltmp1161-Lfunc_begin27
	.uleb128 Ltmp1166-Ltmp1161
	.uleb128 Ltmp1203-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1167-Lfunc_begin27
	.uleb128 Ltmp1168-Ltmp1167
	.uleb128 Ltmp1169-Lfunc_begin27
	.byte	3
	.uleb128 Ltmp1177-Lfunc_begin27
	.uleb128 Ltmp1176-Ltmp1177
	.uleb128 Ltmp1179-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1176-Lfunc_begin27
	.uleb128 Ltmp1180-Ltmp1176
	.byte	0
	.byte	0
	.uleb128 Ltmp1180-Lfunc_begin27
	.uleb128 Ltmp1181-Ltmp1180
	.uleb128 Ltmp1189-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1182-Lfunc_begin27
	.uleb128 Ltmp1183-Ltmp1182
	.uleb128 Ltmp1184-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1193-Lfunc_begin27
	.uleb128 Ltmp1194-Ltmp1193
	.uleb128 Ltmp1195-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1196-Lfunc_begin27
	.uleb128 Ltmp1197-Ltmp1196
	.uleb128 Ltmp1200-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1201-Lfunc_begin27
	.uleb128 Ltmp1202-Ltmp1201
	.uleb128 Ltmp1203-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1198-Lfunc_begin27
	.uleb128 Ltmp1199-Ltmp1198
	.uleb128 Ltmp1200-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1163-Lfunc_begin27
	.uleb128 Ltmp1164-Ltmp1163
	.uleb128 Ltmp1203-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1187-Lfunc_begin27
	.uleb128 Ltmp1186-Ltmp1187
	.uleb128 Ltmp1189-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1186-Lfunc_begin27
	.uleb128 Ltmp1190-Ltmp1186
	.byte	0
	.byte	0
	.uleb128 Ltmp1190-Lfunc_begin27
	.uleb128 Ltmp1191-Ltmp1190
	.uleb128 Ltmp1192-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1191-Lfunc_begin27
	.uleb128 Ltmp1170-Ltmp1191
	.byte	0
	.byte	0
	.uleb128 Ltmp1170-Lfunc_begin27
	.uleb128 Ltmp1171-Ltmp1170
	.uleb128 Ltmp1203-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1172-Lfunc_begin27
	.uleb128 Ltmp1173-Ltmp1172
	.uleb128 Ltmp1174-Lfunc_begin27
	.byte	0
	.uleb128 Ltmp1173-Lfunc_begin27
	.uleb128 Lfunc_end27-Ltmp1173
	.byte	0
	.byte	0
Lcst_end27:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase27:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	push	rax
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rsi, qword ptr [rdi + 256]
	mov	rcx, qword ptr [rsi + 264]
	mov	rdx, qword ptr [rsi + 256]
	mov	rax, rcx
	sub	rax, rdx
	test	rax, rax
	jle	LBB28_1
	cmp	byte ptr [rdi + 280], 1
	jne	LBB28_8
	lea	rdx, [rcx - 1]
	mov	qword ptr [rsi + 264], rdx
	mfence
	mov	r8, qword ptr [rdi + 256]
	mov	rax, qword ptr [r8 + 256]
	mov	r9, rdx
	sub	r9, rax
	js	LBB28_13
	mov	rsi, qword ptr [rdi + 272]
	mov	rbx, rsi
	sub	rbx, 1
	jb	LBB28_16
	mov	r10, qword ptr [rdi + 264]
	and	rbx, rdx
	shl	rbx, 4
	mov	r14, qword ptr [r10 + rbx]
	mov	r15, qword ptr [r10 + rbx + 8]
	test	r9, r9
	je	LBB28_14
	cmp	rsi, 65
	jb	LBB28_15
	mov	rax, rsi
	sar	rax, 63
	shr	rax, 62
	add	rax, rsi
	sar	rax, 2
	cmp	r9, rax
	jge	LBB28_15
	jmp	LBB28_12
LBB28_1:
	xor	r15d, r15d
	jmp	LBB28_15
LBB28_8:
	mov	edx, 1
	lock		xadd	qword ptr [rsi + 256], rdx
	mov	rsi, rdx
	not	rsi
	add	rcx, rsi
	js	LBB28_17
	mov	rsi, qword ptr [rdi + 272]
	mov	rcx, rsi
	sub	rcx, 1
	jb	LBB28_16
	mov	rbx, qword ptr [rdi + 264]
	and	rcx, rdx
	shl	rcx, 4
	mov	r14, qword ptr [rbx + rcx]
	mov	r15, qword ptr [rbx + rcx + 8]
	cmp	rsi, 65
	jb	LBB28_15
	mov	rcx, rsi
	sar	rcx, 63
	shr	rcx, 62
	add	rcx, rsi
	sar	rcx, 2
	cmp	rax, rcx
	jg	LBB28_15
LBB28_12:
	shr	rsi
	add	rdi, 256
	call	__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E
	jmp	LBB28_15
LBB28_13:
	mov	qword ptr [r8 + 264], rcx
	xor	r15d, r15d
	jmp	LBB28_15
LBB28_17:
	mov	rax, qword ptr [rdi + 256]
	mov	qword ptr [rax + 256], rdx
	xor	r15d, r15d
	jmp	LBB28_15
LBB28_14:
	xor	edx, edx
	lea	rsi, [rax + 1]
	lock		cmpxchg	qword ptr [r8 + 256], rsi
	cmovne	r15, rdx
	mov	rax, qword ptr [rdi + 256]
	mov	qword ptr [rax + 264], rcx
LBB28_15:
	mov	rax, r14
	mov	rdx, r15
	add	rsp, 8
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB28_16:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
	.cfi_endproc

	.p2align	4, 0x90
__ZN10rayon_core8registry12WorkerThread15wait_until_cold17hf0fae827bbf09742E:
Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception28
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	push	rax
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	al, byte ptr [rsi]
	test	al, al
	jne	LBB29_28
	mov	r14, rsi
	mov	r15, rdi
	xor	r13d, r13d
	.p2align	4, 0x90
LBB29_2:
Ltmp1204:
	mov	rdi, r15
	call	__ZN10rayon_core8registry12WorkerThread14take_local_job17h123bfb54be8597fdE
Ltmp1205:
	mov	rbx, rdx
	test	rdx, rdx
	jne	LBB29_8
Ltmp1206:
	mov	rdi, r15
	call	__ZN10rayon_core8registry12WorkerThread5steal17hd186ba5e84ac41c8E
Ltmp1207:
	mov	rbx, rdx
	test	rdx, rdx
	jne	LBB29_8
	mov	rsi, qword ptr [r15 + 288]
	mov	rdi, qword ptr [r15 + 304]
	sub	rdi, -128
Ltmp1208:
	call	__ZN10rayon_core8registry8Registry16pop_injected_job17h92493cc3be278c4fE
Ltmp1209:
	mov	rbx, rdx
	test	rdx, rdx
	je	LBB29_12
	.p2align	4, 0x90
LBB29_8:
	mov	r12, rax
	cmp	r13, 33
	jb	LBB29_10
	mov	rsi, qword ptr [r15 + 288]
	mov	rdi, qword ptr [r15 + 304]
	mov	eax, 408
	add	rdi, rax
Ltmp1210:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp1211:
LBB29_10:
Ltmp1212:
	mov	rdi, r15
	mov	rsi, r12
	mov	rdx, rbx
	call	__ZN10rayon_core8registry12WorkerThread7execute17h2d3f3a8dd2af2716E
Ltmp1213:
	xor	r13d, r13d
	movzx	eax, byte ptr [r14]
	test	al, al
	je	LBB29_2
	jmp	LBB29_26
LBB29_12:
	mov	rbx, qword ptr [r15 + 304]
	mov	eax, 408
	add	rbx, rax
	cmp	r13, 32
	jae	LBB29_13
Ltmp1224:
	call	__ZN3std6thread9yield_now17h5be99eab200ba878E
Ltmp1225:
	inc	r13
	movzx	eax, byte ptr [r14]
	test	al, al
	je	LBB29_2
	jmp	LBB29_26
LBB29_13:
	mov	r12, qword ptr [r15 + 288]
	jne	LBB29_14
Ltmp1220:
	call	__ZN3std6thread9yield_now17h5be99eab200ba878E
Ltmp1221:
Ltmp1222:
	mov	rdi, rbx
	mov	rsi, r12
	call	__ZN10rayon_core5sleep5Sleep10get_sleepy17h2d1649e7f480748dE
Ltmp1223:
	movzx	r13d, al
	or	r13, 32
	movzx	eax, byte ptr [r14]
	test	al, al
	je	LBB29_2
	jmp	LBB29_26
LBB29_14:
	cmp	r13, 64
	jae	LBB29_15
Ltmp1216:
	call	__ZN3std6thread9yield_now17h5be99eab200ba878E
Ltmp1217:
Ltmp1218:
	mov	rdi, rbx
	mov	rsi, r12
	call	__ZN10rayon_core5sleep5Sleep12still_sleepy17hb19f6bc0b2efe2adE
Ltmp1219:
	inc	r13
	test	al, al
	mov	eax, 0
	cmove	r13, rax
	movzx	eax, byte ptr [r14]
	test	al, al
	je	LBB29_2
	jmp	LBB29_26
LBB29_15:
Ltmp1214:
	mov	rdi, rbx
	mov	rsi, r12
	call	__ZN10rayon_core5sleep5Sleep5sleep17h69a54e30b00311e5E
Ltmp1215:
	xor	r13d, r13d
	movzx	eax, byte ptr [r14]
	test	al, al
	je	LBB29_2
LBB29_26:
	cmp	r13, 33
	jb	LBB29_28
	mov	rsi, qword ptr [r15 + 288]
	mov	edi, 408
	add	rdi, qword ptr [r15 + 304]
Ltmp1227:
	call	__ZN10rayon_core5sleep5Sleep6tickle17h00d06f732555dc32E
Ltmp1228:
LBB29_28:
	add	rsp, 8
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB29_30:
Ltmp1229:
	jmp	LBB29_31
LBB29_29:
Ltmp1226:
LBB29_31:
	mov	rbx, rax
	lea	rdi, [rbp - 48]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end28:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table29:
Lexception28:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end28-Lcst_begin28
Lcst_begin28:
	.uleb128 Ltmp1204-Lfunc_begin28
	.uleb128 Ltmp1215-Ltmp1204
	.uleb128 Ltmp1226-Lfunc_begin28
	.byte	0
	.uleb128 Ltmp1227-Lfunc_begin28
	.uleb128 Ltmp1228-Ltmp1227
	.uleb128 Ltmp1229-Lfunc_begin28
	.byte	0
	.uleb128 Ltmp1228-Lfunc_begin28
	.uleb128 Lfunc_end28-Ltmp1228
	.byte	0
	.byte	0
Lcst_end28:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h0230adf386e20217E:
Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception29
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 960
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rax, rdx
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 584]
	mov	edx, 184
	mov	rsi, rax
	call	_memcpy
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB30_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 584]
	mov	edx, 184
	call	_memcpy
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h6f5ac582fe6f1885E]
	mov	qword ptr [rsp + 32], rax
Ltmp1230:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1231:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1232:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1233:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB30_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 768]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB30_4:
	test	rbx, rbx
	je	LBB30_7
Ltmp1235:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1236:
	jmp	LBB30_6
LBB30_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 584]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB30_7:
Ltmp1237:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1238:
LBB30_6:
	ud2
LBB30_10:
Ltmp1239:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB30_8:
Ltmp1234:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end29:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table30:
Lexception29:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end29-Lcst_begin29
Lcst_begin29:
	.uleb128 Lfunc_begin29-Lfunc_begin29
	.uleb128 Ltmp1230-Lfunc_begin29
	.byte	0
	.byte	0
	.uleb128 Ltmp1230-Lfunc_begin29
	.uleb128 Ltmp1233-Ltmp1230
	.uleb128 Ltmp1234-Lfunc_begin29
	.byte	0
	.uleb128 Ltmp1233-Lfunc_begin29
	.uleb128 Ltmp1235-Ltmp1233
	.byte	0
	.byte	0
	.uleb128 Ltmp1235-Lfunc_begin29
	.uleb128 Ltmp1236-Ltmp1235
	.uleb128 Ltmp1239-Lfunc_begin29
	.byte	0
	.uleb128 Ltmp1236-Lfunc_begin29
	.uleb128 Ltmp1237-Ltmp1236
	.byte	0
	.byte	0
	.uleb128 Ltmp1237-Lfunc_begin29
	.uleb128 Ltmp1238-Ltmp1237
	.uleb128 Ltmp1239-Lfunc_begin29
	.byte	0
	.uleb128 Ltmp1238-Lfunc_begin29
	.uleb128 Lfunc_end29-Ltmp1238
	.byte	0
	.byte	0
Lcst_end29:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h0f22171cf420b7edE:
Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception30
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 536]
	mov	ecx, 13
	mov	rsi, rdx
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB31_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 536]
	mov	ecx, 13
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h6bc5d022e5ada673E]
	mov	qword ptr [rsp + 32], rax
Ltmp1240:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1241:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1242:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1243:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB31_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 640]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB31_4:
	test	rbx, rbx
	je	LBB31_7
Ltmp1245:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1246:
	jmp	LBB31_6
LBB31_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 24]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB31_7:
Ltmp1247:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1248:
LBB31_6:
	ud2
LBB31_10:
Ltmp1249:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB31_8:
Ltmp1244:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end30:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table31:
Lexception30:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end30-Lcst_begin30
Lcst_begin30:
	.uleb128 Lfunc_begin30-Lfunc_begin30
	.uleb128 Ltmp1240-Lfunc_begin30
	.byte	0
	.byte	0
	.uleb128 Ltmp1240-Lfunc_begin30
	.uleb128 Ltmp1243-Ltmp1240
	.uleb128 Ltmp1244-Lfunc_begin30
	.byte	0
	.uleb128 Ltmp1243-Lfunc_begin30
	.uleb128 Ltmp1245-Ltmp1243
	.byte	0
	.byte	0
	.uleb128 Ltmp1245-Lfunc_begin30
	.uleb128 Ltmp1246-Ltmp1245
	.uleb128 Ltmp1249-Lfunc_begin30
	.byte	0
	.uleb128 Ltmp1246-Lfunc_begin30
	.uleb128 Ltmp1247-Ltmp1246
	.byte	0
	.byte	0
	.uleb128 Ltmp1247-Lfunc_begin30
	.uleb128 Ltmp1248-Ltmp1247
	.uleb128 Ltmp1249-Lfunc_begin30
	.byte	0
	.uleb128 Ltmp1248-Lfunc_begin30
	.uleb128 Lfunc_end30-Ltmp1248
	.byte	0
	.byte	0
Lcst_end30:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h2a34d240acb221c9E:
Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception31
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB32_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h24d57b7639b8f4c6E]
	mov	qword ptr [rbp - 16], rax
Ltmp1250:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1251:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1252:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1253:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB32_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB32_4:
	test	rax, rax
	je	LBB32_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1255:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1256:
	jmp	LBB32_6
LBB32_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB32_7:
Ltmp1257:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1258:
LBB32_6:
	ud2
LBB32_10:
Ltmp1259:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB32_8:
Ltmp1254:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end31:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table32:
Lexception31:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end31-Lcst_begin31
Lcst_begin31:
	.uleb128 Lfunc_begin31-Lfunc_begin31
	.uleb128 Ltmp1250-Lfunc_begin31
	.byte	0
	.byte	0
	.uleb128 Ltmp1250-Lfunc_begin31
	.uleb128 Ltmp1253-Ltmp1250
	.uleb128 Ltmp1254-Lfunc_begin31
	.byte	0
	.uleb128 Ltmp1255-Lfunc_begin31
	.uleb128 Ltmp1256-Ltmp1255
	.uleb128 Ltmp1259-Lfunc_begin31
	.byte	0
	.uleb128 Ltmp1256-Lfunc_begin31
	.uleb128 Ltmp1257-Ltmp1256
	.byte	0
	.byte	0
	.uleb128 Ltmp1257-Lfunc_begin31
	.uleb128 Ltmp1258-Ltmp1257
	.uleb128 Ltmp1259-Lfunc_begin31
	.byte	0
	.uleb128 Ltmp1258-Lfunc_begin31
	.uleb128 Lfunc_end31-Ltmp1258
	.byte	0
	.byte	0
Lcst_end31:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h3b06a2fb2fb461dfE:
Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception32
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 520]
	mov	ecx, 15
	mov	rsi, rdx
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB33_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 520]
	mov	ecx, 15
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h97d5ab8c23516d5aE]
	mov	qword ptr [rsp + 32], rax
Ltmp1260:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1261:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1262:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1263:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB33_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 640]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB33_4:
	test	rbx, rbx
	je	LBB33_7
Ltmp1265:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1266:
	jmp	LBB33_6
LBB33_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 24]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB33_7:
Ltmp1267:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1268:
LBB33_6:
	ud2
LBB33_10:
Ltmp1269:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB33_8:
Ltmp1264:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end32:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table33:
Lexception32:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end32-Lcst_begin32
Lcst_begin32:
	.uleb128 Lfunc_begin32-Lfunc_begin32
	.uleb128 Ltmp1260-Lfunc_begin32
	.byte	0
	.byte	0
	.uleb128 Ltmp1260-Lfunc_begin32
	.uleb128 Ltmp1263-Ltmp1260
	.uleb128 Ltmp1264-Lfunc_begin32
	.byte	0
	.uleb128 Ltmp1263-Lfunc_begin32
	.uleb128 Ltmp1265-Ltmp1263
	.byte	0
	.byte	0
	.uleb128 Ltmp1265-Lfunc_begin32
	.uleb128 Ltmp1266-Ltmp1265
	.uleb128 Ltmp1269-Lfunc_begin32
	.byte	0
	.uleb128 Ltmp1266-Lfunc_begin32
	.uleb128 Ltmp1267-Ltmp1266
	.byte	0
	.byte	0
	.uleb128 Ltmp1267-Lfunc_begin32
	.uleb128 Ltmp1268-Ltmp1267
	.uleb128 Ltmp1269-Lfunc_begin32
	.byte	0
	.uleb128 Ltmp1268-Lfunc_begin32
	.uleb128 Lfunc_end32-Ltmp1268
	.byte	0
	.byte	0
Lcst_end32:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h475befc1427464dcE:
Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception33
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 536]
	mov	ecx, 13
	mov	rsi, rdx
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB34_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 536]
	mov	ecx, 13
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h6d887124331a34a1E]
	mov	qword ptr [rsp + 32], rax
Ltmp1270:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1271:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1272:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1273:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB34_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 640]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB34_4:
	test	rbx, rbx
	je	LBB34_7
Ltmp1275:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1276:
	jmp	LBB34_6
LBB34_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 24]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB34_7:
Ltmp1277:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1278:
LBB34_6:
	ud2
LBB34_10:
Ltmp1279:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB34_8:
Ltmp1274:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end33:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table34:
Lexception33:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end33-Lcst_begin33
Lcst_begin33:
	.uleb128 Lfunc_begin33-Lfunc_begin33
	.uleb128 Ltmp1270-Lfunc_begin33
	.byte	0
	.byte	0
	.uleb128 Ltmp1270-Lfunc_begin33
	.uleb128 Ltmp1273-Ltmp1270
	.uleb128 Ltmp1274-Lfunc_begin33
	.byte	0
	.uleb128 Ltmp1273-Lfunc_begin33
	.uleb128 Ltmp1275-Ltmp1273
	.byte	0
	.byte	0
	.uleb128 Ltmp1275-Lfunc_begin33
	.uleb128 Ltmp1276-Ltmp1275
	.uleb128 Ltmp1279-Lfunc_begin33
	.byte	0
	.uleb128 Ltmp1276-Lfunc_begin33
	.uleb128 Ltmp1277-Ltmp1276
	.byte	0
	.byte	0
	.uleb128 Ltmp1277-Lfunc_begin33
	.uleb128 Ltmp1278-Ltmp1277
	.uleb128 Ltmp1279-Lfunc_begin33
	.byte	0
	.uleb128 Ltmp1278-Lfunc_begin33
	.uleb128 Lfunc_end33-Ltmp1278
	.byte	0
	.byte	0
Lcst_end33:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h49c4b5aaf69709caE:
Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception34
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 960
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rax, rdx
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 584]
	mov	edx, 184
	mov	rsi, rax
	call	_memcpy
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB35_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 584]
	mov	edx, 184
	call	_memcpy
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h0ab6dc5fe9e4cfa6E]
	mov	qword ptr [rsp + 32], rax
Ltmp1280:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1281:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1282:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1283:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB35_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 768]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB35_4:
	test	rbx, rbx
	je	LBB35_7
Ltmp1285:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1286:
	jmp	LBB35_6
LBB35_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 584]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB35_7:
Ltmp1287:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1288:
LBB35_6:
	ud2
LBB35_10:
Ltmp1289:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB35_8:
Ltmp1284:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end34:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table35:
Lexception34:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end34-Lcst_begin34
Lcst_begin34:
	.uleb128 Lfunc_begin34-Lfunc_begin34
	.uleb128 Ltmp1280-Lfunc_begin34
	.byte	0
	.byte	0
	.uleb128 Ltmp1280-Lfunc_begin34
	.uleb128 Ltmp1283-Ltmp1280
	.uleb128 Ltmp1284-Lfunc_begin34
	.byte	0
	.uleb128 Ltmp1283-Lfunc_begin34
	.uleb128 Ltmp1285-Ltmp1283
	.byte	0
	.byte	0
	.uleb128 Ltmp1285-Lfunc_begin34
	.uleb128 Ltmp1286-Ltmp1285
	.uleb128 Ltmp1289-Lfunc_begin34
	.byte	0
	.uleb128 Ltmp1286-Lfunc_begin34
	.uleb128 Ltmp1287-Ltmp1286
	.byte	0
	.byte	0
	.uleb128 Ltmp1287-Lfunc_begin34
	.uleb128 Ltmp1288-Ltmp1287
	.uleb128 Ltmp1289-Lfunc_begin34
	.byte	0
	.uleb128 Ltmp1288-Lfunc_begin34
	.uleb128 Lfunc_end34-Ltmp1288
	.byte	0
	.byte	0
Lcst_end34:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h512494f5c0bbf754E:
Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception35
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 960
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rax, rdx
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 584]
	mov	edx, 184
	mov	rsi, rax
	call	_memcpy
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB36_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 584]
	mov	edx, 184
	call	_memcpy
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h7feb77d8a492f71eE]
	mov	qword ptr [rsp + 32], rax
Ltmp1290:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1291:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1292:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1293:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB36_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 768]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB36_4:
	test	rbx, rbx
	je	LBB36_7
Ltmp1295:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1296:
	jmp	LBB36_6
LBB36_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 584]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB36_7:
Ltmp1297:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1298:
LBB36_6:
	ud2
LBB36_10:
Ltmp1299:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB36_8:
Ltmp1294:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end35:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table36:
Lexception35:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end35-Lcst_begin35
Lcst_begin35:
	.uleb128 Lfunc_begin35-Lfunc_begin35
	.uleb128 Ltmp1290-Lfunc_begin35
	.byte	0
	.byte	0
	.uleb128 Ltmp1290-Lfunc_begin35
	.uleb128 Ltmp1293-Ltmp1290
	.uleb128 Ltmp1294-Lfunc_begin35
	.byte	0
	.uleb128 Ltmp1293-Lfunc_begin35
	.uleb128 Ltmp1295-Ltmp1293
	.byte	0
	.byte	0
	.uleb128 Ltmp1295-Lfunc_begin35
	.uleb128 Ltmp1296-Ltmp1295
	.uleb128 Ltmp1299-Lfunc_begin35
	.byte	0
	.uleb128 Ltmp1296-Lfunc_begin35
	.uleb128 Ltmp1297-Ltmp1296
	.byte	0
	.byte	0
	.uleb128 Ltmp1297-Lfunc_begin35
	.uleb128 Ltmp1298-Ltmp1297
	.uleb128 Ltmp1299-Lfunc_begin35
	.byte	0
	.uleb128 Ltmp1298-Lfunc_begin35
	.uleb128 Lfunc_end35-Ltmp1298
	.byte	0
	.byte	0
Lcst_end35:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h5cf5aa1e50864386E:
Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception36
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 536]
	mov	ecx, 13
	mov	rsi, rdx
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB37_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 536]
	mov	ecx, 13
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3be42809eb5e4d83E]
	mov	qword ptr [rsp + 32], rax
Ltmp1300:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1301:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1302:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1303:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB37_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 640]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB37_4:
	test	rbx, rbx
	je	LBB37_7
Ltmp1305:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1306:
	jmp	LBB37_6
LBB37_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 24]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB37_7:
Ltmp1307:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1308:
LBB37_6:
	ud2
LBB37_10:
Ltmp1309:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB37_8:
Ltmp1304:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end36:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table37:
Lexception36:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end36-Lcst_begin36
Lcst_begin36:
	.uleb128 Lfunc_begin36-Lfunc_begin36
	.uleb128 Ltmp1300-Lfunc_begin36
	.byte	0
	.byte	0
	.uleb128 Ltmp1300-Lfunc_begin36
	.uleb128 Ltmp1303-Ltmp1300
	.uleb128 Ltmp1304-Lfunc_begin36
	.byte	0
	.uleb128 Ltmp1303-Lfunc_begin36
	.uleb128 Ltmp1305-Ltmp1303
	.byte	0
	.byte	0
	.uleb128 Ltmp1305-Lfunc_begin36
	.uleb128 Ltmp1306-Ltmp1305
	.uleb128 Ltmp1309-Lfunc_begin36
	.byte	0
	.uleb128 Ltmp1306-Lfunc_begin36
	.uleb128 Ltmp1307-Ltmp1306
	.byte	0
	.byte	0
	.uleb128 Ltmp1307-Lfunc_begin36
	.uleb128 Ltmp1308-Ltmp1307
	.uleb128 Ltmp1309-Lfunc_begin36
	.byte	0
	.uleb128 Ltmp1308-Lfunc_begin36
	.uleb128 Lfunc_end36-Ltmp1308
	.byte	0
	.byte	0
Lcst_end36:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h5ea10d5cf1a19d49E:
Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception37
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 520]
	mov	ecx, 15
	mov	rsi, rdx
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB38_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 520]
	mov	ecx, 15
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h48c7490fa79e5e5eE]
	mov	qword ptr [rsp + 32], rax
Ltmp1310:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1311:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1312:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1313:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB38_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 640]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB38_4:
	test	rbx, rbx
	je	LBB38_7
Ltmp1315:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1316:
	jmp	LBB38_6
LBB38_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 24]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB38_7:
Ltmp1317:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1318:
LBB38_6:
	ud2
LBB38_10:
Ltmp1319:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB38_8:
Ltmp1314:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end37:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table38:
Lexception37:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end37-Lcst_begin37
Lcst_begin37:
	.uleb128 Lfunc_begin37-Lfunc_begin37
	.uleb128 Ltmp1310-Lfunc_begin37
	.byte	0
	.byte	0
	.uleb128 Ltmp1310-Lfunc_begin37
	.uleb128 Ltmp1313-Ltmp1310
	.uleb128 Ltmp1314-Lfunc_begin37
	.byte	0
	.uleb128 Ltmp1313-Lfunc_begin37
	.uleb128 Ltmp1315-Ltmp1313
	.byte	0
	.byte	0
	.uleb128 Ltmp1315-Lfunc_begin37
	.uleb128 Ltmp1316-Ltmp1315
	.uleb128 Ltmp1319-Lfunc_begin37
	.byte	0
	.uleb128 Ltmp1316-Lfunc_begin37
	.uleb128 Ltmp1317-Ltmp1316
	.byte	0
	.byte	0
	.uleb128 Ltmp1317-Lfunc_begin37
	.uleb128 Ltmp1318-Ltmp1317
	.uleb128 Ltmp1319-Lfunc_begin37
	.byte	0
	.uleb128 Ltmp1318-Lfunc_begin37
	.uleb128 Lfunc_end37-Ltmp1318
	.byte	0
	.byte	0
Lcst_end37:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h641791bca7e0e4dcE:
Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception38
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 536]
	mov	ecx, 13
	mov	rsi, rdx
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB39_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 536]
	mov	ecx, 13
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hc23691182f8b6340E]
	mov	qword ptr [rsp + 32], rax
Ltmp1320:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1321:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1322:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1323:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB39_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 640]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB39_4:
	test	rbx, rbx
	je	LBB39_7
Ltmp1325:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1326:
	jmp	LBB39_6
LBB39_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 24]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB39_7:
Ltmp1327:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1328:
LBB39_6:
	ud2
LBB39_10:
Ltmp1329:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB39_8:
Ltmp1324:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end38:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table39:
Lexception38:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end38-Lcst_begin38
Lcst_begin38:
	.uleb128 Lfunc_begin38-Lfunc_begin38
	.uleb128 Ltmp1320-Lfunc_begin38
	.byte	0
	.byte	0
	.uleb128 Ltmp1320-Lfunc_begin38
	.uleb128 Ltmp1323-Ltmp1320
	.uleb128 Ltmp1324-Lfunc_begin38
	.byte	0
	.uleb128 Ltmp1323-Lfunc_begin38
	.uleb128 Ltmp1325-Ltmp1323
	.byte	0
	.byte	0
	.uleb128 Ltmp1325-Lfunc_begin38
	.uleb128 Ltmp1326-Ltmp1325
	.uleb128 Ltmp1329-Lfunc_begin38
	.byte	0
	.uleb128 Ltmp1326-Lfunc_begin38
	.uleb128 Ltmp1327-Ltmp1326
	.byte	0
	.byte	0
	.uleb128 Ltmp1327-Lfunc_begin38
	.uleb128 Ltmp1328-Ltmp1327
	.uleb128 Ltmp1329-Lfunc_begin38
	.byte	0
	.uleb128 Ltmp1328-Lfunc_begin38
	.uleb128 Lfunc_end38-Ltmp1328
	.byte	0
	.byte	0
Lcst_end38:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h65e8111ecd09892eE:
Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception39
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB40_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h174f827c5512d44aE]
	mov	qword ptr [rbp - 16], rax
Ltmp1330:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1331:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1332:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1333:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB40_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB40_4:
	test	rax, rax
	je	LBB40_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1335:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1336:
	jmp	LBB40_6
LBB40_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB40_7:
Ltmp1337:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1338:
LBB40_6:
	ud2
LBB40_10:
Ltmp1339:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB40_8:
Ltmp1334:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end39:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table40:
Lexception39:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end39-Lcst_begin39
Lcst_begin39:
	.uleb128 Lfunc_begin39-Lfunc_begin39
	.uleb128 Ltmp1330-Lfunc_begin39
	.byte	0
	.byte	0
	.uleb128 Ltmp1330-Lfunc_begin39
	.uleb128 Ltmp1333-Ltmp1330
	.uleb128 Ltmp1334-Lfunc_begin39
	.byte	0
	.uleb128 Ltmp1335-Lfunc_begin39
	.uleb128 Ltmp1336-Ltmp1335
	.uleb128 Ltmp1339-Lfunc_begin39
	.byte	0
	.uleb128 Ltmp1336-Lfunc_begin39
	.uleb128 Ltmp1337-Ltmp1336
	.byte	0
	.byte	0
	.uleb128 Ltmp1337-Lfunc_begin39
	.uleb128 Ltmp1338-Ltmp1337
	.uleb128 Ltmp1339-Lfunc_begin39
	.byte	0
	.uleb128 Ltmp1338-Lfunc_begin39
	.uleb128 Lfunc_end39-Ltmp1338
	.byte	0
	.byte	0
Lcst_end39:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h6bab1f06cd607410E:
Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception40
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB41_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h8c14d870ff6a2f0aE]
	mov	qword ptr [rbp - 16], rax
Ltmp1340:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1341:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1342:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1343:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB41_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB41_4:
	test	rax, rax
	je	LBB41_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1345:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1346:
	jmp	LBB41_6
LBB41_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB41_7:
Ltmp1347:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1348:
LBB41_6:
	ud2
LBB41_10:
Ltmp1349:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB41_8:
Ltmp1344:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end40:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table41:
Lexception40:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end40-Lcst_begin40
Lcst_begin40:
	.uleb128 Lfunc_begin40-Lfunc_begin40
	.uleb128 Ltmp1340-Lfunc_begin40
	.byte	0
	.byte	0
	.uleb128 Ltmp1340-Lfunc_begin40
	.uleb128 Ltmp1343-Ltmp1340
	.uleb128 Ltmp1344-Lfunc_begin40
	.byte	0
	.uleb128 Ltmp1345-Lfunc_begin40
	.uleb128 Ltmp1346-Ltmp1345
	.uleb128 Ltmp1349-Lfunc_begin40
	.byte	0
	.uleb128 Ltmp1346-Lfunc_begin40
	.uleb128 Ltmp1347-Ltmp1346
	.byte	0
	.byte	0
	.uleb128 Ltmp1347-Lfunc_begin40
	.uleb128 Ltmp1348-Ltmp1347
	.uleb128 Ltmp1349-Lfunc_begin40
	.byte	0
	.uleb128 Ltmp1348-Lfunc_begin40
	.uleb128 Lfunc_end40-Ltmp1348
	.byte	0
	.byte	0
Lcst_end40:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h9a33e0c42655e58dE:
Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception41
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB42_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h37ece9d5eda5e307E]
	mov	qword ptr [rbp - 16], rax
Ltmp1350:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1351:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1352:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1353:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB42_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB42_4:
	test	rax, rax
	je	LBB42_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1355:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1356:
	jmp	LBB42_6
LBB42_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB42_7:
Ltmp1357:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1358:
LBB42_6:
	ud2
LBB42_10:
Ltmp1359:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB42_8:
Ltmp1354:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end41:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table42:
Lexception41:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end41-Lcst_begin41
Lcst_begin41:
	.uleb128 Lfunc_begin41-Lfunc_begin41
	.uleb128 Ltmp1350-Lfunc_begin41
	.byte	0
	.byte	0
	.uleb128 Ltmp1350-Lfunc_begin41
	.uleb128 Ltmp1353-Ltmp1350
	.uleb128 Ltmp1354-Lfunc_begin41
	.byte	0
	.uleb128 Ltmp1355-Lfunc_begin41
	.uleb128 Ltmp1356-Ltmp1355
	.uleb128 Ltmp1359-Lfunc_begin41
	.byte	0
	.uleb128 Ltmp1356-Lfunc_begin41
	.uleb128 Ltmp1357-Ltmp1356
	.byte	0
	.byte	0
	.uleb128 Ltmp1357-Lfunc_begin41
	.uleb128 Ltmp1358-Ltmp1357
	.uleb128 Ltmp1359-Lfunc_begin41
	.byte	0
	.uleb128 Ltmp1358-Lfunc_begin41
	.uleb128 Lfunc_end41-Ltmp1358
	.byte	0
	.byte	0
Lcst_end41:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17h9bbde3cefb9a95beE:
Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception42
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB43_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h46716daff3ffa871E]
	mov	qword ptr [rbp - 16], rax
Ltmp1360:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1361:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1362:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1363:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB43_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB43_4:
	test	rax, rax
	je	LBB43_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1365:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1366:
	jmp	LBB43_6
LBB43_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB43_7:
Ltmp1367:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1368:
LBB43_6:
	ud2
LBB43_10:
Ltmp1369:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB43_8:
Ltmp1364:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end42:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table43:
Lexception42:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end42-Lcst_begin42
Lcst_begin42:
	.uleb128 Lfunc_begin42-Lfunc_begin42
	.uleb128 Ltmp1360-Lfunc_begin42
	.byte	0
	.byte	0
	.uleb128 Ltmp1360-Lfunc_begin42
	.uleb128 Ltmp1363-Ltmp1360
	.uleb128 Ltmp1364-Lfunc_begin42
	.byte	0
	.uleb128 Ltmp1365-Lfunc_begin42
	.uleb128 Ltmp1366-Ltmp1365
	.uleb128 Ltmp1369-Lfunc_begin42
	.byte	0
	.uleb128 Ltmp1366-Lfunc_begin42
	.uleb128 Ltmp1367-Ltmp1366
	.byte	0
	.byte	0
	.uleb128 Ltmp1367-Lfunc_begin42
	.uleb128 Ltmp1368-Ltmp1367
	.uleb128 Ltmp1369-Lfunc_begin42
	.byte	0
	.uleb128 Ltmp1368-Lfunc_begin42
	.uleb128 Lfunc_end42-Ltmp1368
	.byte	0
	.byte	0
Lcst_end42:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hb3fcf28e0712a23fE:
Lfunc_begin43:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception43
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 536]
	mov	ecx, 13
	mov	rsi, rdx
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB44_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 536]
	mov	ecx, 13
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hd5d385bbaeefbaddE]
	mov	qword ptr [rsp + 32], rax
Ltmp1370:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1371:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1372:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1373:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB44_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 640]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB44_4:
	test	rbx, rbx
	je	LBB44_7
Ltmp1375:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1376:
	jmp	LBB44_6
LBB44_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 24]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB44_7:
Ltmp1377:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1378:
LBB44_6:
	ud2
LBB44_10:
Ltmp1379:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB44_8:
Ltmp1374:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end43:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table44:
Lexception43:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end43-Lcst_begin43
Lcst_begin43:
	.uleb128 Lfunc_begin43-Lfunc_begin43
	.uleb128 Ltmp1370-Lfunc_begin43
	.byte	0
	.byte	0
	.uleb128 Ltmp1370-Lfunc_begin43
	.uleb128 Ltmp1373-Ltmp1370
	.uleb128 Ltmp1374-Lfunc_begin43
	.byte	0
	.uleb128 Ltmp1373-Lfunc_begin43
	.uleb128 Ltmp1375-Ltmp1373
	.byte	0
	.byte	0
	.uleb128 Ltmp1375-Lfunc_begin43
	.uleb128 Ltmp1376-Ltmp1375
	.uleb128 Ltmp1379-Lfunc_begin43
	.byte	0
	.uleb128 Ltmp1376-Lfunc_begin43
	.uleb128 Ltmp1377-Ltmp1376
	.byte	0
	.byte	0
	.uleb128 Ltmp1377-Lfunc_begin43
	.uleb128 Ltmp1378-Ltmp1377
	.uleb128 Ltmp1379-Lfunc_begin43
	.byte	0
	.uleb128 Ltmp1378-Lfunc_begin43
	.uleb128 Lfunc_end43-Ltmp1378
	.byte	0
	.byte	0
Lcst_end43:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hbf6f1242d5c76fb7E:
Lfunc_begin44:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception44
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 960
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rax, rdx
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 584]
	mov	edx, 184
	mov	rsi, rax
	call	_memcpy
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB45_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 584]
	mov	edx, 184
	call	_memcpy
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h25927f3b61816538E]
	mov	qword ptr [rsp + 32], rax
Ltmp1380:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1381:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1382:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1383:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB45_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 768]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB45_4:
	test	rbx, rbx
	je	LBB45_7
Ltmp1385:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1386:
	jmp	LBB45_6
LBB45_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 584]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB45_7:
Ltmp1387:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1388:
LBB45_6:
	ud2
LBB45_10:
Ltmp1389:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB45_8:
Ltmp1384:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end44:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table45:
Lexception44:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end44-Lcst_begin44
Lcst_begin44:
	.uleb128 Lfunc_begin44-Lfunc_begin44
	.uleb128 Ltmp1380-Lfunc_begin44
	.byte	0
	.byte	0
	.uleb128 Ltmp1380-Lfunc_begin44
	.uleb128 Ltmp1383-Ltmp1380
	.uleb128 Ltmp1384-Lfunc_begin44
	.byte	0
	.uleb128 Ltmp1383-Lfunc_begin44
	.uleb128 Ltmp1385-Ltmp1383
	.byte	0
	.byte	0
	.uleb128 Ltmp1385-Lfunc_begin44
	.uleb128 Ltmp1386-Ltmp1385
	.uleb128 Ltmp1389-Lfunc_begin44
	.byte	0
	.uleb128 Ltmp1386-Lfunc_begin44
	.uleb128 Ltmp1387-Ltmp1386
	.byte	0
	.byte	0
	.uleb128 Ltmp1387-Lfunc_begin44
	.uleb128 Ltmp1388-Ltmp1387
	.uleb128 Ltmp1389-Lfunc_begin44
	.byte	0
	.uleb128 Ltmp1388-Lfunc_begin44
	.uleb128 Lfunc_end44-Ltmp1388
	.byte	0
	.byte	0
Lcst_end44:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hc0554487c468dbb7E:
Lfunc_begin45:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception45
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 960
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rax, rdx
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 584]
	mov	edx, 184
	mov	rsi, rax
	call	_memcpy
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB46_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 584]
	mov	edx, 184
	call	_memcpy
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h509fdfe12c6f5a9aE]
	mov	qword ptr [rsp + 32], rax
Ltmp1390:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1391:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1392:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1393:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB46_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 768]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB46_4:
	test	rbx, rbx
	je	LBB46_7
Ltmp1395:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1396:
	jmp	LBB46_6
LBB46_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 584]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB46_7:
Ltmp1397:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1398:
LBB46_6:
	ud2
LBB46_10:
Ltmp1399:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB46_8:
Ltmp1394:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end45:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table46:
Lexception45:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end45-Lcst_begin45
Lcst_begin45:
	.uleb128 Lfunc_begin45-Lfunc_begin45
	.uleb128 Ltmp1390-Lfunc_begin45
	.byte	0
	.byte	0
	.uleb128 Ltmp1390-Lfunc_begin45
	.uleb128 Ltmp1393-Ltmp1390
	.uleb128 Ltmp1394-Lfunc_begin45
	.byte	0
	.uleb128 Ltmp1393-Lfunc_begin45
	.uleb128 Ltmp1395-Ltmp1393
	.byte	0
	.byte	0
	.uleb128 Ltmp1395-Lfunc_begin45
	.uleb128 Ltmp1396-Ltmp1395
	.uleb128 Ltmp1399-Lfunc_begin45
	.byte	0
	.uleb128 Ltmp1396-Lfunc_begin45
	.uleb128 Ltmp1397-Ltmp1396
	.byte	0
	.byte	0
	.uleb128 Ltmp1397-Lfunc_begin45
	.uleb128 Ltmp1398-Ltmp1397
	.uleb128 Ltmp1399-Lfunc_begin45
	.byte	0
	.uleb128 Ltmp1398-Lfunc_begin45
	.uleb128 Lfunc_end45-Ltmp1398
	.byte	0
	.byte	0
Lcst_end45:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hc30f680121c7a99aE:
Lfunc_begin46:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception46
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB47_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hf08f2de095c3873eE]
	mov	qword ptr [rbp - 16], rax
Ltmp1400:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1401:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1402:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1403:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB47_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB47_4:
	test	rax, rax
	je	LBB47_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1405:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1406:
	jmp	LBB47_6
LBB47_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB47_7:
Ltmp1407:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1408:
LBB47_6:
	ud2
LBB47_10:
Ltmp1409:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB47_8:
Ltmp1404:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end46:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table47:
Lexception46:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end46-Lcst_begin46
Lcst_begin46:
	.uleb128 Lfunc_begin46-Lfunc_begin46
	.uleb128 Ltmp1400-Lfunc_begin46
	.byte	0
	.byte	0
	.uleb128 Ltmp1400-Lfunc_begin46
	.uleb128 Ltmp1403-Ltmp1400
	.uleb128 Ltmp1404-Lfunc_begin46
	.byte	0
	.uleb128 Ltmp1405-Lfunc_begin46
	.uleb128 Ltmp1406-Ltmp1405
	.uleb128 Ltmp1409-Lfunc_begin46
	.byte	0
	.uleb128 Ltmp1406-Lfunc_begin46
	.uleb128 Ltmp1407-Ltmp1406
	.byte	0
	.byte	0
	.uleb128 Ltmp1407-Lfunc_begin46
	.uleb128 Ltmp1408-Ltmp1407
	.uleb128 Ltmp1409-Lfunc_begin46
	.byte	0
	.uleb128 Ltmp1408-Lfunc_begin46
	.uleb128 Lfunc_end46-Ltmp1408
	.byte	0
	.byte	0
Lcst_end46:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hcb551d32d278e8e8E:
Lfunc_begin47:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception47
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 536]
	mov	ecx, 13
	mov	rsi, rdx
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB48_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 536]
	mov	ecx, 13
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hd925ce92ade76618E]
	mov	qword ptr [rsp + 32], rax
Ltmp1410:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1411:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1412:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1413:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB48_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 640]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB48_4:
	test	rbx, rbx
	je	LBB48_7
Ltmp1415:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1416:
	jmp	LBB48_6
LBB48_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 24]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB48_7:
Ltmp1417:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1418:
LBB48_6:
	ud2
LBB48_10:
Ltmp1419:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB48_8:
Ltmp1414:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end47:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table48:
Lexception47:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end47-Lcst_begin47
Lcst_begin47:
	.uleb128 Lfunc_begin47-Lfunc_begin47
	.uleb128 Ltmp1410-Lfunc_begin47
	.byte	0
	.byte	0
	.uleb128 Ltmp1410-Lfunc_begin47
	.uleb128 Ltmp1413-Ltmp1410
	.uleb128 Ltmp1414-Lfunc_begin47
	.byte	0
	.uleb128 Ltmp1413-Lfunc_begin47
	.uleb128 Ltmp1415-Ltmp1413
	.byte	0
	.byte	0
	.uleb128 Ltmp1415-Lfunc_begin47
	.uleb128 Ltmp1416-Ltmp1415
	.uleb128 Ltmp1419-Lfunc_begin47
	.byte	0
	.uleb128 Ltmp1416-Lfunc_begin47
	.uleb128 Ltmp1417-Ltmp1416
	.byte	0
	.byte	0
	.uleb128 Ltmp1417-Lfunc_begin47
	.uleb128 Ltmp1418-Ltmp1417
	.uleb128 Ltmp1419-Lfunc_begin47
	.byte	0
	.uleb128 Ltmp1418-Lfunc_begin47
	.uleb128 Lfunc_end47-Ltmp1418
	.byte	0
	.byte	0
Lcst_end47:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hd0c2908f213c375aE:
Lfunc_begin48:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception48
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB49_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h678d839fedfca7ffE]
	mov	qword ptr [rbp - 16], rax
Ltmp1420:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1421:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1422:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1423:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB49_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB49_4:
	test	rax, rax
	je	LBB49_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1425:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1426:
	jmp	LBB49_6
LBB49_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB49_7:
Ltmp1427:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1428:
LBB49_6:
	ud2
LBB49_10:
Ltmp1429:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB49_8:
Ltmp1424:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end48:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table49:
Lexception48:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end48-Lcst_begin48
Lcst_begin48:
	.uleb128 Lfunc_begin48-Lfunc_begin48
	.uleb128 Ltmp1420-Lfunc_begin48
	.byte	0
	.byte	0
	.uleb128 Ltmp1420-Lfunc_begin48
	.uleb128 Ltmp1423-Ltmp1420
	.uleb128 Ltmp1424-Lfunc_begin48
	.byte	0
	.uleb128 Ltmp1425-Lfunc_begin48
	.uleb128 Ltmp1426-Ltmp1425
	.uleb128 Ltmp1429-Lfunc_begin48
	.byte	0
	.uleb128 Ltmp1426-Lfunc_begin48
	.uleb128 Ltmp1427-Ltmp1426
	.byte	0
	.byte	0
	.uleb128 Ltmp1427-Lfunc_begin48
	.uleb128 Ltmp1428-Ltmp1427
	.uleb128 Ltmp1429-Lfunc_begin48
	.byte	0
	.uleb128 Ltmp1428-Lfunc_begin48
	.uleb128 Lfunc_end48-Ltmp1428
	.byte	0
	.byte	0
Lcst_end48:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hd30c0a09fb622a1bE:
Lfunc_begin49:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception49
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB50_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hc535d949fabe1eecE]
	mov	qword ptr [rbp - 16], rax
Ltmp1430:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1431:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1432:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1433:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB50_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB50_4:
	test	rax, rax
	je	LBB50_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1435:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1436:
	jmp	LBB50_6
LBB50_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB50_7:
Ltmp1437:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1438:
LBB50_6:
	ud2
LBB50_10:
Ltmp1439:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB50_8:
Ltmp1434:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end49:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table50:
Lexception49:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end49-Lcst_begin49
Lcst_begin49:
	.uleb128 Lfunc_begin49-Lfunc_begin49
	.uleb128 Ltmp1430-Lfunc_begin49
	.byte	0
	.byte	0
	.uleb128 Ltmp1430-Lfunc_begin49
	.uleb128 Ltmp1433-Ltmp1430
	.uleb128 Ltmp1434-Lfunc_begin49
	.byte	0
	.uleb128 Ltmp1435-Lfunc_begin49
	.uleb128 Ltmp1436-Ltmp1435
	.uleb128 Ltmp1439-Lfunc_begin49
	.byte	0
	.uleb128 Ltmp1436-Lfunc_begin49
	.uleb128 Ltmp1437-Ltmp1436
	.byte	0
	.byte	0
	.uleb128 Ltmp1437-Lfunc_begin49
	.uleb128 Ltmp1438-Ltmp1437
	.uleb128 Ltmp1439-Lfunc_begin49
	.byte	0
	.uleb128 Ltmp1438-Lfunc_begin49
	.uleb128 Lfunc_end49-Ltmp1438
	.byte	0
	.byte	0
Lcst_end49:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hd37630529838198dE:
Lfunc_begin50:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception50
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 960
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rax, rdx
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 584]
	mov	edx, 184
	mov	rsi, rax
	call	_memcpy
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB51_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 584]
	mov	edx, 184
	call	_memcpy
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hfbc9ad0e01ed6d55E]
	mov	qword ptr [rsp + 32], rax
Ltmp1440:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1441:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1442:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1443:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB51_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 768]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB51_4:
	test	rbx, rbx
	je	LBB51_7
Ltmp1445:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1446:
	jmp	LBB51_6
LBB51_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 584]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB51_7:
Ltmp1447:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1448:
LBB51_6:
	ud2
LBB51_10:
Ltmp1449:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB51_8:
Ltmp1444:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end50:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table51:
Lexception50:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end50-Lcst_begin50
Lcst_begin50:
	.uleb128 Lfunc_begin50-Lfunc_begin50
	.uleb128 Ltmp1440-Lfunc_begin50
	.byte	0
	.byte	0
	.uleb128 Ltmp1440-Lfunc_begin50
	.uleb128 Ltmp1443-Ltmp1440
	.uleb128 Ltmp1444-Lfunc_begin50
	.byte	0
	.uleb128 Ltmp1443-Lfunc_begin50
	.uleb128 Ltmp1445-Ltmp1443
	.byte	0
	.byte	0
	.uleb128 Ltmp1445-Lfunc_begin50
	.uleb128 Ltmp1446-Ltmp1445
	.uleb128 Ltmp1449-Lfunc_begin50
	.byte	0
	.uleb128 Ltmp1446-Lfunc_begin50
	.uleb128 Ltmp1447-Ltmp1446
	.byte	0
	.byte	0
	.uleb128 Ltmp1447-Lfunc_begin50
	.uleb128 Ltmp1448-Ltmp1447
	.uleb128 Ltmp1449-Lfunc_begin50
	.byte	0
	.uleb128 Ltmp1448-Lfunc_begin50
	.uleb128 Lfunc_end50-Ltmp1448
	.byte	0
	.byte	0
Lcst_end50:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hd665e6da74d568c9E:
Lfunc_begin51:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception51
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB52_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hc400b65a151bed27E]
	mov	qword ptr [rbp - 16], rax
Ltmp1450:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1451:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1452:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1453:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB52_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB52_4:
	test	rax, rax
	je	LBB52_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1455:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1456:
	jmp	LBB52_6
LBB52_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB52_7:
Ltmp1457:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1458:
LBB52_6:
	ud2
LBB52_10:
Ltmp1459:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB52_8:
Ltmp1454:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end51:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table52:
Lexception51:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end51-Lcst_begin51
Lcst_begin51:
	.uleb128 Lfunc_begin51-Lfunc_begin51
	.uleb128 Ltmp1450-Lfunc_begin51
	.byte	0
	.byte	0
	.uleb128 Ltmp1450-Lfunc_begin51
	.uleb128 Ltmp1453-Ltmp1450
	.uleb128 Ltmp1454-Lfunc_begin51
	.byte	0
	.uleb128 Ltmp1455-Lfunc_begin51
	.uleb128 Ltmp1456-Ltmp1455
	.uleb128 Ltmp1459-Lfunc_begin51
	.byte	0
	.uleb128 Ltmp1456-Lfunc_begin51
	.uleb128 Ltmp1457-Ltmp1456
	.byte	0
	.byte	0
	.uleb128 Ltmp1457-Lfunc_begin51
	.uleb128 Ltmp1458-Ltmp1457
	.uleb128 Ltmp1459-Lfunc_begin51
	.byte	0
	.uleb128 Ltmp1458-Lfunc_begin51
	.uleb128 Lfunc_end51-Ltmp1458
	.byte	0
	.byte	0
Lcst_end51:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hd75828698a1c1c9bE:
Lfunc_begin52:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception52
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB53_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h213ce81085afd2edE]
	mov	qword ptr [rbp - 16], rax
Ltmp1460:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1461:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1462:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1463:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB53_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB53_4:
	test	rax, rax
	je	LBB53_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1465:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1466:
	jmp	LBB53_6
LBB53_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB53_7:
Ltmp1467:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1468:
LBB53_6:
	ud2
LBB53_10:
Ltmp1469:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB53_8:
Ltmp1464:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end52:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table53:
Lexception52:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end52-Lcst_begin52
Lcst_begin52:
	.uleb128 Lfunc_begin52-Lfunc_begin52
	.uleb128 Ltmp1460-Lfunc_begin52
	.byte	0
	.byte	0
	.uleb128 Ltmp1460-Lfunc_begin52
	.uleb128 Ltmp1463-Ltmp1460
	.uleb128 Ltmp1464-Lfunc_begin52
	.byte	0
	.uleb128 Ltmp1465-Lfunc_begin52
	.uleb128 Ltmp1466-Ltmp1465
	.uleb128 Ltmp1469-Lfunc_begin52
	.byte	0
	.uleb128 Ltmp1466-Lfunc_begin52
	.uleb128 Ltmp1467-Ltmp1466
	.byte	0
	.byte	0
	.uleb128 Ltmp1467-Lfunc_begin52
	.uleb128 Ltmp1468-Ltmp1467
	.uleb128 Ltmp1469-Lfunc_begin52
	.byte	0
	.uleb128 Ltmp1468-Lfunc_begin52
	.uleb128 Lfunc_end52-Ltmp1468
	.byte	0
	.byte	0
Lcst_end52:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17he1846e8a3dffbdd8E:
Lfunc_begin53:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception53
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB54_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17he496b4ca6e2ccdffE]
	mov	qword ptr [rbp - 16], rax
Ltmp1470:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1471:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1472:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1473:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB54_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB54_4:
	test	rax, rax
	je	LBB54_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1475:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1476:
	jmp	LBB54_6
LBB54_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB54_7:
Ltmp1477:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1478:
LBB54_6:
	ud2
LBB54_10:
Ltmp1479:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB54_8:
Ltmp1474:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end53:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table54:
Lexception53:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end53-Lcst_begin53
Lcst_begin53:
	.uleb128 Lfunc_begin53-Lfunc_begin53
	.uleb128 Ltmp1470-Lfunc_begin53
	.byte	0
	.byte	0
	.uleb128 Ltmp1470-Lfunc_begin53
	.uleb128 Ltmp1473-Ltmp1470
	.uleb128 Ltmp1474-Lfunc_begin53
	.byte	0
	.uleb128 Ltmp1475-Lfunc_begin53
	.uleb128 Ltmp1476-Ltmp1475
	.uleb128 Ltmp1479-Lfunc_begin53
	.byte	0
	.uleb128 Ltmp1476-Lfunc_begin53
	.uleb128 Ltmp1477-Ltmp1476
	.byte	0
	.byte	0
	.uleb128 Ltmp1477-Lfunc_begin53
	.uleb128 Ltmp1478-Ltmp1477
	.uleb128 Ltmp1479-Lfunc_begin53
	.byte	0
	.uleb128 Ltmp1478-Lfunc_begin53
	.uleb128 Lfunc_end53-Ltmp1478
	.byte	0
	.byte	0
Lcst_end53:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17he859dcff4c8c1631E:
Lfunc_begin54:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception54
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 536]
	mov	ecx, 13
	mov	rsi, rdx
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB55_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 536]
	mov	ecx, 13
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h1c18cb6f87558ad0E]
	mov	qword ptr [rsp + 32], rax
Ltmp1480:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1481:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1482:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1483:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB55_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 640]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB55_4:
	test	rbx, rbx
	je	LBB55_7
Ltmp1485:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1486:
	jmp	LBB55_6
LBB55_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 24]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB55_7:
Ltmp1487:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1488:
LBB55_6:
	ud2
LBB55_10:
Ltmp1489:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB55_8:
Ltmp1484:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end54:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table55:
Lexception54:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end54-Lcst_begin54
Lcst_begin54:
	.uleb128 Lfunc_begin54-Lfunc_begin54
	.uleb128 Ltmp1480-Lfunc_begin54
	.byte	0
	.byte	0
	.uleb128 Ltmp1480-Lfunc_begin54
	.uleb128 Ltmp1483-Ltmp1480
	.uleb128 Ltmp1484-Lfunc_begin54
	.byte	0
	.uleb128 Ltmp1483-Lfunc_begin54
	.uleb128 Ltmp1485-Ltmp1483
	.byte	0
	.byte	0
	.uleb128 Ltmp1485-Lfunc_begin54
	.uleb128 Ltmp1486-Ltmp1485
	.uleb128 Ltmp1489-Lfunc_begin54
	.byte	0
	.uleb128 Ltmp1486-Lfunc_begin54
	.uleb128 Ltmp1487-Ltmp1486
	.byte	0
	.byte	0
	.uleb128 Ltmp1487-Lfunc_begin54
	.uleb128 Ltmp1488-Ltmp1487
	.uleb128 Ltmp1489-Lfunc_begin54
	.byte	0
	.uleb128 Ltmp1488-Lfunc_begin54
	.uleb128 Lfunc_end54-Ltmp1488
	.byte	0
	.byte	0
Lcst_end54:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hf38b1627f378cf78E:
Lfunc_begin55:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception55
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 960
	.cfi_offset rbx, -48
	.cfi_offset r12, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rax, rdx
	mov	rbx, rsi
	mov	r14, rdi
	lea	rdi, [rsp + 584]
	mov	edx, 184
	mov	rsi, rax
	call	_memcpy
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB56_11
	mov	qword ptr [rsp + 384], rax
	lea	rdi, [rsp + 392]
	lea	rsi, [rsp + 584]
	mov	edx, 184
	call	_memcpy
	mov	qword ptr [rsp + 192], 0
	lea	rax, [rsp + 192]
	mov	qword ptr [rsp + 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hd9c9e8c61484fe82E]
	mov	qword ptr [rsp + 32], rax
Ltmp1490:
	lea	rsi, [rsp + 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1491:
	mov	rdi, qword ptr [rsp + 384]
Ltmp1492:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1493:
	mov	rbx, qword ptr [rsp + 192]
	mov	r12, qword ptr [rsp + 200]
	mov	r15, qword ptr [rsp + 208]
	lea	rsi, [rsp + 216]
	lea	rdi, [rsp + 24]
	mov	edx, 168
	call	_memcpy
	cmp	rbx, 1
	jne	LBB56_4
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 768]
	mov	ecx, 16
	mov	rdi, rax
	rep movsq es:[rdi], [rsi]
	lea	rbx, [rsp + 255]
	mov	edx, 128
	mov	rdi, rbx
	mov	rsi, rax
	call	_memcpy
	mov	edx, 128
	mov	rdi, r14
	mov	rsi, rbx
	call	_memcpy
	lea	rsp, [rbp - 32]
	pop	rbx
	pop	r12
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB56_4:
	test	rbx, rbx
	je	LBB56_7
Ltmp1495:
	mov	rdi, r12
	mov	rsi, r15
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1496:
	jmp	LBB56_6
LBB56_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 584]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB56_7:
Ltmp1497:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1498:
LBB56_6:
	ud2
LBB56_10:
Ltmp1499:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB56_8:
Ltmp1494:
	mov	rbx, rax
	lea	rdi, [rsp + 192]
	call	__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end55:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table56:
Lexception55:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end55-Lcst_begin55
Lcst_begin55:
	.uleb128 Lfunc_begin55-Lfunc_begin55
	.uleb128 Ltmp1490-Lfunc_begin55
	.byte	0
	.byte	0
	.uleb128 Ltmp1490-Lfunc_begin55
	.uleb128 Ltmp1493-Ltmp1490
	.uleb128 Ltmp1494-Lfunc_begin55
	.byte	0
	.uleb128 Ltmp1493-Lfunc_begin55
	.uleb128 Ltmp1495-Ltmp1493
	.byte	0
	.byte	0
	.uleb128 Ltmp1495-Lfunc_begin55
	.uleb128 Ltmp1496-Ltmp1495
	.uleb128 Ltmp1499-Lfunc_begin55
	.byte	0
	.uleb128 Ltmp1496-Lfunc_begin55
	.uleb128 Ltmp1497-Ltmp1496
	.byte	0
	.byte	0
	.uleb128 Ltmp1497-Lfunc_begin55
	.uleb128 Ltmp1498-Ltmp1497
	.uleb128 Ltmp1499-Lfunc_begin55
	.byte	0
	.uleb128 Ltmp1498-Lfunc_begin55
	.uleb128 Lfunc_end55-Ltmp1498
	.byte	0
	.byte	0
Lcst_end55:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN10rayon_core8registry8Registry14in_worker_cold17hfe7d4a84d16130baE:
Lfunc_begin56:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception56
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -24
	mov	rbx, rdi
	lea	rdi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold10LOCK_LATCH7__getit17hebd45496564c82e5E
	test	rax, rax
	je	LBB57_11
	mov	qword ptr [rbp - 144], rax
	lea	rdi, [rbp - 136]
	lea	rsi, [rbp - 232]
	mov	ecx, 11
	rep movsq es:[rdi], [rsi]
	mov	qword ptr [rbp - 48], 0
	lea	rax, [rbp - 144]
	mov	qword ptr [rbp - 24], rax
	lea	rax, [rip + __ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h84e696eca4ce9fc8E]
	mov	qword ptr [rbp - 16], rax
Ltmp1500:
	lea	rsi, [rbp - 24]
	mov	edx, 1
	mov	rdi, rbx
	call	__ZN10rayon_core8registry8Registry6inject17h5506992ab536b1f6E
Ltmp1501:
	mov	rdi, qword ptr [rbp - 144]
Ltmp1502:
	call	__ZN10rayon_core5latch9LockLatch14wait_and_reset17h04941717c3cc4bc7E
Ltmp1503:
	mov	rax, qword ptr [rbp - 48]
	cmp	rax, 1
	jne	LBB57_4
	add	rsp, 232
	pop	rbx
	pop	rbp
	ret
LBB57_4:
	test	rax, rax
	je	LBB57_7
	mov	rdi, qword ptr [rbp - 40]
	mov	rsi, qword ptr [rbp - 32]
Ltmp1505:
	call	__ZN10rayon_core6unwind16resume_unwinding17h47c2e39f90248736E
Ltmp1506:
	jmp	LBB57_6
LBB57_11:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 144]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
LBB57_7:
Ltmp1507:
	lea	rdi, [rip + l___unnamed_2]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1508:
LBB57_6:
	ud2
LBB57_10:
Ltmp1509:
	mov	rbx, rax
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB57_8:
Ltmp1504:
	mov	rbx, rax
	lea	rdi, [rbp - 144]
	call	__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end56:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table57:
Lexception56:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end56-Lcst_begin56
Lcst_begin56:
	.uleb128 Lfunc_begin56-Lfunc_begin56
	.uleb128 Ltmp1500-Lfunc_begin56
	.byte	0
	.byte	0
	.uleb128 Ltmp1500-Lfunc_begin56
	.uleb128 Ltmp1503-Ltmp1500
	.uleb128 Ltmp1504-Lfunc_begin56
	.byte	0
	.uleb128 Ltmp1505-Lfunc_begin56
	.uleb128 Ltmp1506-Ltmp1505
	.uleb128 Ltmp1509-Lfunc_begin56
	.byte	0
	.uleb128 Ltmp1506-Lfunc_begin56
	.uleb128 Ltmp1507-Ltmp1506
	.byte	0
	.byte	0
	.uleb128 Ltmp1507-Lfunc_begin56
	.uleb128 Ltmp1508-Ltmp1507
	.uleb128 Ltmp1509-Lfunc_begin56
	.byte	0
	.uleb128 Ltmp1508-Lfunc_begin56
	.uleb128 Lfunc_end56-Ltmp1508
	.byte	0
	.byte	0
Lcst_end56:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN15crossbeam_deque15Worker$LT$T$GT$6resize17h34dc55adb45f7cc1E:
Lfunc_begin57:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception57
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 72
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rax, rsi
	mov	ecx, 16
	xor	r13d, r13d
	mov	qword ptr [rbp - 104], rsi
	mul	rcx
	setno	dl
	mov	rcx, qword ptr [rdi]
	mov	r14, qword ptr [rcx + 264]
	mov	r8, qword ptr [rcx + 256]
	jo	LBB58_54
	mov	r13b, dl
	shl	r13, 3
	mov	r15, qword ptr [rdi + 8]
	mov	qword ptr [rbp - 96], rdi
	mov	r12, qword ptr [rdi + 16]
	test	rax, rax
	mov	qword ptr [rbp - 56], rax
	je	LBB58_2
	mov	rdi, rax
	mov	rsi, r13
	mov	rbx, r8
	call	___rust_alloc
	mov	r8, rbx
	mov	rbx, rax
	test	rbx, rbx
	je	LBB58_55
LBB58_5:
	cmp	r14, r8
	mov	r13, qword ptr [rbp - 104]
	je	LBB58_11
	mov	rax, r13
	sub	rax, 1
	setb	cl
	sub	r12, 1
	jb	LBB58_36
	test	cl, cl
	jne	LBB58_36
	mov	edx, r14d
	sub	edx, r8d
	mov	rcx, r8
	test	dl, 1
	je	LBB58_10
	mov	rcx, r8
	and	rcx, r12
	shl	rcx, 4
	mov	rdx, r8
	and	rdx, rax
	shl	rdx, 4
	mov	rsi, qword ptr [r15 + rcx]
	mov	rcx, qword ptr [r15 + rcx + 8]
	mov	qword ptr [rbx + rdx + 8], rcx
	mov	qword ptr [rbx + rdx], rsi
	lea	rcx, [r8 + 1]
LBB58_10:
	inc	r8
	cmp	r14, r8
	je	LBB58_11
	.p2align	4, 0x90
LBB58_35:
	mov	rdx, rcx
	and	rdx, r12
	shl	rdx, 4
	mov	rsi, rcx
	and	rsi, rax
	shl	rsi, 4
	mov	rdi, qword ptr [r15 + rdx]
	mov	rdx, qword ptr [r15 + rdx + 8]
	mov	qword ptr [rbx + rsi + 8], rdx
	mov	qword ptr [rbx + rsi], rdi
	lea	rdx, [rcx + 1]
	mov	rsi, rdx
	and	rsi, r12
	shl	rsi, 4
	and	rdx, rax
	shl	rdx, 4
	mov	rdi, qword ptr [r15 + rsi]
	mov	rsi, qword ptr [r15 + rsi + 8]
	mov	qword ptr [rbx + rdx + 8], rsi
	mov	qword ptr [rbx + rdx], rdi
	add	rcx, 2
	cmp	rcx, r14
	jne	LBB58_35
LBB58_11:
	call	__ZN15crossbeam_epoch7default6HANDLE7__getit17h5520625d3e137476E
	test	rax, rax
	je	LBB58_22
	mov	rcx, qword ptr [rax]
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rcx + 2080]
	mov	rdx, rax
	inc	rdx
	je	LBB58_13
	mov	qword ptr [rcx + 2080], rdx
	test	rax, rax
	jne	LBB58_18
	mov	rax, qword ptr [rcx + 16]
	mov	rdx, qword ptr [rax + 384]
	or	rdx, 1
	xor	eax, eax
	lock		cmpxchg	qword ptr [rcx + 8], rdx
	##MEMBARRIER
	mov	rax, qword ptr [rcx + 2096]
	lea	rdx, [rax + 1]
	mov	qword ptr [rcx + 2096], rdx
	test	al, 127
	jne	LBB58_18
	mov	rdi, qword ptr [rcx + 16]
	sub	rdi, -128
Ltmp1510:
	lea	rsi, [rbp - 88]
	call	__ZN15crossbeam_epoch8internal6Global7collect17hb997f190296b2717E
Ltmp1511:
LBB58_18:
	mov	r14, qword ptr [rbp - 88]
	jmp	LBB58_19
LBB58_2:
	mov	rbx, r13
	test	rbx, rbx
	jne	LBB58_5
LBB58_55:
	mov	rdi, qword ptr [rbp - 56]
	mov	rsi, r13
	call	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h5e6d2ad1d437598eE
LBB58_22:
	mov	rdi, qword ptr [rip + __ZN15crossbeam_epoch7default9COLLECTOR17h54f9628807b7883bE@GOTPCREL]
	call	__ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb1c66476f99f537dE
	mov	rdi, rax
	call	__ZN15crossbeam_epoch9collector9Collector8register17h725198ea0efb630aE
	mov	rcx, rax
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 88], rax
	mov	rax, qword ptr [rax + 2080]
	mov	rdx, rax
	inc	rdx
	je	LBB58_23
	mov	qword ptr [rcx + 2080], rdx
	test	rax, rax
	jne	LBB58_27
	mov	rax, qword ptr [rcx + 16]
	mov	rdx, qword ptr [rax + 384]
	or	rdx, 1
	xor	eax, eax
	lock		cmpxchg	qword ptr [rcx + 8], rdx
	##MEMBARRIER
	mov	rax, qword ptr [rcx + 2096]
	lea	rdx, [rax + 1]
	mov	qword ptr [rcx + 2096], rdx
	test	al, 127
	jne	LBB58_27
	mov	rdi, qword ptr [rcx + 16]
	sub	rdi, -128
Ltmp1515:
	lea	rsi, [rbp - 88]
	call	__ZN15crossbeam_epoch8internal6Global7collect17hb997f190296b2717E
Ltmp1516:
LBB58_27:
	mov	rdi, qword ptr [rbp - 48]
	mov	rax, qword ptr [rdi + 2088]
	sub	rax, 1
	jb	LBB58_32
	mov	r14, qword ptr [rbp - 88]
	mov	rcx, qword ptr [rdi + 2080]
	mov	qword ptr [rdi + 2088], rax
	jne	LBB58_19
	test	rcx, rcx
	je	LBB58_30
LBB58_19:
	mov	qword ptr [rbp - 48], r14
	mov	rax, qword ptr [rbp - 96]
	mov	qword ptr [rax + 8], rbx
	mov	qword ptr [rax + 16], r13
	mov	r14, qword ptr [rax]
	mov	edi, 16
	mov	esi, 8
	call	___rust_alloc
	test	rax, rax
	je	LBB58_20
	mov	r12, rax
	mov	qword ptr [rax], rbx
	mov	qword ptr [rax + 8], r13
	xchg	qword ptr [r14 + 128], r12
	mov	rdi, qword ptr [rbp - 48]
	test	rdi, rdi
	je	LBB58_38
	lea	rax, [rip + __ZN15crossbeam_epoch8deferred8Deferred3new4call17h3ae3c56b56fa8af7E]
	mov	qword ptr [rbp - 88], rax
	mov	qword ptr [rbp - 80], r12
Ltmp1517:
	lea	rsi, [rbp - 88]
	lea	rdx, [rbp - 48]
	call	__ZN15crossbeam_epoch8internal5Local5defer17hd340b8132d3d8bc7E
Ltmp1518:
	mov	rax, qword ptr [rbp - 56]
	cmp	rax, 1024
	jae	LBB58_44
	jmp	LBB58_45
LBB58_38:
	and	r12, -8
	mov	rsi, qword ptr [r12 + 8]
	test	rsi, rsi
	je	LBB58_41
	shl	rsi, 4
	je	LBB58_41
	mov	rdi, qword ptr [r12]
	mov	edx, 8
	call	___rust_dealloc
LBB58_41:
	mov	esi, 16
	mov	edx, 8
	mov	rdi, r12
	call	___rust_dealloc
	mov	rax, qword ptr [rbp - 56]
	cmp	rax, 1024
	jb	LBB58_45
LBB58_44:
Ltmp1519:
	lea	rdi, [rbp - 48]
	call	__ZN15crossbeam_epoch5guard5Guard5flush17hbaa7db01f9aad523E
Ltmp1520:
LBB58_45:
	mov	rdi, qword ptr [rbp - 48]
	test	rdi, rdi
	je	LBB58_50
	mov	rax, qword ptr [rdi + 2080]
	sub	rax, 1
	jb	LBB58_56
	mov	qword ptr [rdi + 2080], rax
	jne	LBB58_50
	mov	qword ptr [rdi + 8], 0
	cmp	qword ptr [rdi + 2088], 0
	je	LBB58_49
LBB58_50:
	add	rsp, 72
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB58_30:
	call	__ZN15crossbeam_epoch8internal5Local8finalize17h2cb774bbd5055193E
	jmp	LBB58_19
LBB58_49:
	call	__ZN15crossbeam_epoch8internal5Local8finalize17h2cb774bbd5055193E
	jmp	LBB58_50
LBB58_54:
	call	__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17hdae3728be555961bE
LBB58_36:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_1]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB58_20:
	mov	edi, 16
	mov	esi, 8
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB58_13:
Ltmp1512:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_11]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1513:
	jmp	LBB58_14
LBB58_56:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_12]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB58_23:
Ltmp1522:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_11]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1523:
LBB58_14:
	ud2
LBB58_32:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_13]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB58_31:
Ltmp1524:
	mov	rbx, rax
Ltmp1525:
	lea	rdi, [rbp - 88]
	call	__ZN4core3ptr13drop_in_place17hce8e7c1f7d15d55cE
Ltmp1526:
LBB58_34:
	lea	rdi, [rbp - 48]
	call	__ZN4core3ptr13drop_in_place17h1031e65b0946c896E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB58_33:
Ltmp1527:
	mov	rbx, rax
	jmp	LBB58_34
LBB58_21:
Ltmp1514:
	mov	rbx, rax
	lea	rdi, [rbp - 88]
	call	__ZN4core3ptr13drop_in_place17hce8e7c1f7d15d55cE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB58_51:
Ltmp1521:
	mov	rbx, rax
	lea	rdi, [rbp - 48]
	call	__ZN4core3ptr13drop_in_place17hce8e7c1f7d15d55cE
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end57:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table58:
Lexception57:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end57-Lcst_begin57
Lcst_begin57:
	.uleb128 Lfunc_begin57-Lfunc_begin57
	.uleb128 Ltmp1510-Lfunc_begin57
	.byte	0
	.byte	0
	.uleb128 Ltmp1510-Lfunc_begin57
	.uleb128 Ltmp1511-Ltmp1510
	.uleb128 Ltmp1514-Lfunc_begin57
	.byte	0
	.uleb128 Ltmp1511-Lfunc_begin57
	.uleb128 Ltmp1515-Ltmp1511
	.byte	0
	.byte	0
	.uleb128 Ltmp1515-Lfunc_begin57
	.uleb128 Ltmp1516-Ltmp1515
	.uleb128 Ltmp1524-Lfunc_begin57
	.byte	0
	.uleb128 Ltmp1517-Lfunc_begin57
	.uleb128 Ltmp1520-Ltmp1517
	.uleb128 Ltmp1521-Lfunc_begin57
	.byte	0
	.uleb128 Ltmp1520-Lfunc_begin57
	.uleb128 Ltmp1512-Ltmp1520
	.byte	0
	.byte	0
	.uleb128 Ltmp1512-Lfunc_begin57
	.uleb128 Ltmp1513-Ltmp1512
	.uleb128 Ltmp1514-Lfunc_begin57
	.byte	0
	.uleb128 Ltmp1513-Lfunc_begin57
	.uleb128 Ltmp1522-Ltmp1513
	.byte	0
	.byte	0
	.uleb128 Ltmp1522-Lfunc_begin57
	.uleb128 Ltmp1523-Ltmp1522
	.uleb128 Ltmp1524-Lfunc_begin57
	.byte	0
	.uleb128 Ltmp1523-Lfunc_begin57
	.uleb128 Ltmp1525-Ltmp1523
	.byte	0
	.byte	0
	.uleb128 Ltmp1525-Lfunc_begin57
	.uleb128 Ltmp1526-Ltmp1525
	.uleb128 Ltmp1527-Lfunc_begin57
	.byte	0
	.uleb128 Ltmp1526-Lfunc_begin57
	.uleb128 Lfunc_end57-Ltmp1526
	.byte	0
	.byte	0
Lcst_end57:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN15crossbeam_epoch8deferred8Deferred3new4call17h3ae3c56b56fa8af7E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	rbx
	push	rax
	.cfi_offset rbx, -24
	mov	rbx, qword ptr [rdi]
	and	rbx, -8
	mov	rsi, qword ptr [rbx + 8]
	test	rsi, rsi
	je	LBB59_3
	shl	rsi, 4
	je	LBB59_3
	mov	rdi, qword ptr [rbx]
	mov	edx, 8
	call	___rust_dealloc
LBB59_3:
	mov	esi, 16
	mov	edx, 8
	mov	rdi, rbx
	add	rsp, 8
	pop	rbx
	pop	rbp
	jmp	___rust_dealloc
	.cfi_endproc

	.p2align	4, 0x90
__ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h6a868cc07e2ef292E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	movabs	rax, 1229646359891580772
	pop	rbp
	ret
	.cfi_endproc

	.private_extern	__ZN3std2rt10lang_start17hcfd4e2e92fcfa8e0E
	.globl	__ZN3std2rt10lang_start17hcfd4e2e92fcfa8e0E
	.p2align	4, 0x90
__ZN3std2rt10lang_start17hcfd4e2e92fcfa8e0E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	rcx, rdx
	mov	rdx, rsi
	mov	qword ptr [rbp - 8], rdi
	lea	rsi, [rip + l___unnamed_14]
	lea	rdi, [rbp - 8]
	call	__ZN3std2rt19lang_start_internal17hebefdaa8fd585aefE
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc

	.p2align	4, 0x90
__ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h1845a91a9f9eeff5E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	call	qword ptr [rdi]
	xor	eax, eax
	pop	rbp
	ret
	.cfi_endproc

	.p2align	4, 0x90
__ZN3std9panicking11begin_panic17h853288e601a61dd9E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	qword ptr [rbp - 16], rdi
	mov	qword ptr [rbp - 8], rsi
	mov	rdi, rdx
	call	__ZN4core5panic8Location6caller17hf55c9a52d6249cfcE
	lea	rsi, [rip + l___unnamed_15]
	lea	rdi, [rbp - 16]
	xor	edx, edx
	mov	rcx, rax
	call	__ZN3std9panicking20rust_panic_with_hook17hf8b9378dd2e7986aE
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hbe63a0ac908cd1a6E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	call	qword ptr [rdi]
	xor	eax, eax
	pop	rbp
	ret
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	rsi, qword ptr [rdi + 8]
	test	rsi, rsi
	je	LBB65_3
	mov	rdi, qword ptr [rdi]
	test	rdi, rdi
	je	LBB65_3
	shl	rsi, 2
	test	rsi, rsi
	je	LBB65_3
	mov	edx, 4
	pop	rbp
	jmp	___rust_dealloc
LBB65_3:
	pop	rbp
	ret
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h04000df5dc98c10bE:
Lfunc_begin58:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception58
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	cmp	qword ptr [rdi], 2
	jb	LBB66_5
	mov	rbx, rdi
	mov	rdi, qword ptr [rdi + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1528:
	call	qword ptr [rax]
Ltmp1529:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB66_5
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	pop	rbx
	pop	r14
	pop	rbp
	jmp	___rust_dealloc
LBB66_5:
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB66_4:
Ltmp1530:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end58:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table66:
Lexception58:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end58-Lcst_begin58
Lcst_begin58:
	.uleb128 Ltmp1528-Lfunc_begin58
	.uleb128 Ltmp1529-Ltmp1528
	.uleb128 Ltmp1530-Lfunc_begin58
	.byte	0
	.uleb128 Ltmp1529-Lfunc_begin58
	.uleb128 Lfunc_end58-Ltmp1529
	.byte	0
	.byte	0
Lcst_end58:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h06ee8149c5c652ceE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	pop	rbp
	ret
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h096ca29772df7ae9E:
Lfunc_begin59:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception59
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	cmp	qword ptr [rdi + 96], 2
	jb	LBB68_5
	mov	rbx, rdi
	mov	rdi, qword ptr [rdi + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp1531:
	call	qword ptr [rax]
Ltmp1532:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB68_5
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	pop	rbx
	pop	r14
	pop	rbp
	jmp	___rust_dealloc
LBB68_5:
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB68_4:
Ltmp1533:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end59:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table68:
Lexception59:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end59-Lcst_begin59
Lcst_begin59:
	.uleb128 Ltmp1531-Lfunc_begin59
	.uleb128 Ltmp1532-Ltmp1531
	.uleb128 Ltmp1533-Lfunc_begin59
	.byte	0
	.uleb128 Ltmp1532-Lfunc_begin59
	.uleb128 Lfunc_end59-Ltmp1532
	.byte	0
	.byte	0
Lcst_end59:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h1031e65b0946c896E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	rdi, qword ptr [rdi]
	mov	rax, qword ptr [rdi + 2088]
	sub	rax, 1
	jb	LBB69_4
	mov	rcx, qword ptr [rdi + 2080]
	mov	qword ptr [rdi + 2088], rax
	jne	LBB69_5
	test	rcx, rcx
	jne	LBB69_5
	pop	rbp
	jmp	__ZN15crossbeam_epoch8internal5Local8finalize17h2cb774bbd5055193E
LBB69_5:
	pop	rbp
	ret
LBB69_4:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_13]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h15e4c257c89b0e89E:
Lfunc_begin60:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception60
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	cmp	qword ptr [rdi + 48], 2
	jb	LBB70_5
	mov	rbx, rdi
	mov	rdi, qword ptr [rdi + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp1534:
	call	qword ptr [rax]
Ltmp1535:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB70_5
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	pop	rbx
	pop	r14
	pop	rbp
	jmp	___rust_dealloc
LBB70_5:
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB70_4:
Ltmp1536:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end60:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table70:
Lexception60:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end60-Lcst_begin60
Lcst_begin60:
	.uleb128 Ltmp1534-Lfunc_begin60
	.uleb128 Ltmp1535-Ltmp1534
	.uleb128 Ltmp1536-Lfunc_begin60
	.byte	0
	.uleb128 Ltmp1535-Lfunc_begin60
	.uleb128 Lfunc_end60-Ltmp1535
	.byte	0
	.byte	0
Lcst_end60:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h160fcf7d1ad69019E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	mov	rbx, rdi
	cmp	byte ptr [rdi + 8], 0
	jne	LBB71_3
	mov	r14, qword ptr [rbx]
	call	__ZN3std9panicking9panicking17h6f800ddc6c0d9b77E
	test	al, al
	je	LBB71_3
	mov	byte ptr [r14 + 8], 1
LBB71_3:
	mov	rax, qword ptr [rbx]
	mov	rdi, qword ptr [rax]
	pop	rbx
	pop	r14
	pop	rbp
	jmp	_pthread_mutex_unlock
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h218ae0709f4c6a07E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	rax, qword ptr [rdi]
	dec	qword ptr [rax]
	mov	rax, qword ptr [rdi]
	cmp	qword ptr [rax], 0
	jne	LBB72_2
	dec	qword ptr [rax + 8]
	mov	rdi, qword ptr [rdi]
	cmp	qword ptr [rdi + 8], 0
	je	LBB72_3
LBB72_2:
	pop	rbp
	ret
LBB72_3:
	mov	esi, 4168
	mov	edx, 8
	pop	rbp
	jmp	___rust_dealloc
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h2fdd016196244476E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	rsi, qword ptr [rdi + 8]
	test	rsi, rsi
	je	LBB73_3
	mov	rdi, qword ptr [rdi]
	test	rdi, rdi
	je	LBB73_3
	add	rsi, rsi
	je	LBB73_3
	mov	edx, 2
	pop	rbp
	jmp	___rust_dealloc
LBB73_3:
	pop	rbp
	ret
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h309194917780b8ffE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	rsi, qword ptr [rdi + 8]
	test	rsi, rsi
	je	LBB74_3
	mov	rdi, qword ptr [rdi]
	test	rdi, rdi
	je	LBB74_3
	shl	rsi, 3
	test	rsi, rsi
	je	LBB74_3
	mov	edx, 8
	pop	rbp
	jmp	___rust_dealloc
LBB74_3:
	pop	rbp
	ret
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h3db3b8d7ecdc82acE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	rax, rdi
	mov	rdi, qword ptr [rdi]
	test	rdi, rdi
	je	LBB75_2
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB75_2
	mov	edx, 1
	pop	rbp
	jmp	___rust_dealloc
LBB75_2:
	pop	rbp
	ret
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17h96e68994b6990c19E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	mov	rbx, rdi
	cmp	byte ptr [rdi + 8], 0
	jne	LBB76_3
	mov	r14, qword ptr [rbx]
	call	__ZN3std9panicking9panicking17h6f800ddc6c0d9b77E
	test	al, al
	je	LBB76_3
	mov	byte ptr [r14 + 8], 1
LBB76_3:
	mov	rax, qword ptr [rbx]
	mov	rdi, qword ptr [rax]
	pop	rbx
	pop	r14
	pop	rbp
	jmp	_pthread_mutex_unlock
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	pop	rbp
	jmp	__ZN74_$LT$rayon_core..unwind..AbortIfPanic$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfc717b34361c891aE
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17hce8e7c1f7d15d55cE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	rdi, qword ptr [rdi]
	test	rdi, rdi
	je	LBB78_6
	mov	rax, qword ptr [rdi + 2080]
	sub	rax, 1
	jb	LBB78_5
	mov	qword ptr [rdi + 2080], rax
	jne	LBB78_6
	mov	qword ptr [rdi + 8], 0
	cmp	qword ptr [rdi + 2088], 0
	je	LBB78_4
LBB78_6:
	pop	rbp
	ret
LBB78_4:
	pop	rbp
	jmp	__ZN15crossbeam_epoch8internal5Local8finalize17h2cb774bbd5055193E
LBB78_5:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_12]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
	.cfi_endproc

	.p2align	4, 0x90
__ZN4core3ptr13drop_in_place17hf1c6e0d6c6000ae2E:
Lfunc_begin61:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception61
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	cmp	qword ptr [rdi], 2
	jb	LBB79_5
	mov	rbx, rdi
	mov	rdi, qword ptr [rdi + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1537:
	call	qword ptr [rax]
Ltmp1538:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB79_5
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	pop	rbx
	pop	r14
	pop	rbp
	jmp	___rust_dealloc
LBB79_5:
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB79_4:
Ltmp1539:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end61:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table79:
Lexception61:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end61-Lcst_begin61
Lcst_begin61:
	.uleb128 Ltmp1537-Lfunc_begin61
	.uleb128 Ltmp1538-Ltmp1537
	.uleb128 Ltmp1539-Lfunc_begin61
	.byte	0
	.uleb128 Ltmp1538-Lfunc_begin61
	.uleb128 Lfunc_end61-Ltmp1538
	.byte	0
	.byte	0
Lcst_end61:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE:
Lfunc_begin62:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception62
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	sub	rsp, 16
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	mov	rbx, rdi
	mov	rdi, qword ptr [rdi]
	call	_pthread_mutex_lock
	call	__ZN3std9panicking9panicking17h6f800ddc6c0d9b77E
	mov	r14d, eax
	mov	al, byte ptr [rbx + 8]
	test	al, al
	jne	LBB80_1
	mov	qword ptr [rbp - 32], rbx
	mov	byte ptr [rbp - 24], r14b
	mov	byte ptr [rbx + 9], 1
	lea	rdi, [rbx + 16]
Ltmp1543:
	call	__ZN3std4sync7condvar7Condvar10notify_all17h5fe572e6f77e52bdE
Ltmp1544:
	test	r14b, r14b
	jne	LBB80_7
	call	__ZN3std9panicking9panicking17h6f800ddc6c0d9b77E
	test	al, al
	je	LBB80_7
	mov	byte ptr [rbx + 8], 1
LBB80_7:
	mov	rdi, qword ptr [rbx]
	add	rsp, 16
	pop	rbx
	pop	r14
	pop	rbp
	jmp	_pthread_mutex_unlock
LBB80_1:
	mov	qword ptr [rbp - 32], rbx
	mov	byte ptr [rbp - 24], r14b
Ltmp1540:
	lea	rdi, [rip + l___unnamed_16]
	lea	rcx, [rip + l___unnamed_17]
	lea	r8, [rip + l___unnamed_18]
	lea	rdx, [rbp - 32]
	mov	esi, 43
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1541:
	ud2
LBB80_8:
Ltmp1542:
	mov	rbx, rax
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17h160fcf7d1ad69019E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
LBB80_10:
Ltmp1545:
	mov	rbx, rax
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17h96e68994b6990c19E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end62:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table80:
Lexception62:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end62-Lcst_begin62
Lcst_begin62:
	.uleb128 Lfunc_begin62-Lfunc_begin62
	.uleb128 Ltmp1543-Lfunc_begin62
	.byte	0
	.byte	0
	.uleb128 Ltmp1543-Lfunc_begin62
	.uleb128 Ltmp1544-Ltmp1543
	.uleb128 Ltmp1545-Lfunc_begin62
	.byte	0
	.uleb128 Ltmp1544-Lfunc_begin62
	.uleb128 Ltmp1540-Ltmp1544
	.byte	0
	.byte	0
	.uleb128 Ltmp1540-Lfunc_begin62
	.uleb128 Ltmp1541-Ltmp1540
	.uleb128 Ltmp1542-Lfunc_begin62
	.byte	0
	.uleb128 Ltmp1541-Lfunc_begin62
	.uleb128 Lfunc_end62-Ltmp1541
	.byte	0
	.byte	0
Lcst_end62:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN5alloc5alloc8box_free17h601baa71c821b98cE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	rax, rsi
	mov	rsi, qword ptr [rsi + 8]
	test	rsi, rsi
	je	LBB81_1
	mov	rdx, qword ptr [rax + 16]
	pop	rbp
	jmp	___rust_dealloc
LBB81_1:
	pop	rbp
	ret
	.cfi_endproc

	.p2align	4, 0x90
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h5e6d2ad1d437598eE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
	.cfi_endproc

	.p2align	4, 0x90
__ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17hdae3728be555961bE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h08cd0410494d8951E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 576
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r13, r9
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 120], r8
	shr	rsi
	cmp	rsi, r8
	mov	qword ptr [rsp + 104], rdi
	jae	LBB84_1
LBB84_16:
	mov	r9, qword ptr [r13]
	test	r9, r9
	je	LBB84_42
	mov	r14, qword ptr [r13 + 32]
	test	r14, r14
	je	LBB84_42
	mov	r15, qword ptr [r13 + 8]
	mov	r10, qword ptr [r13 + 16]
	mov	r12, qword ptr [r13 + 40]
	mov	r11, qword ptr [r13 + 48]
	test	r10, r10
	je	LBB84_19
	mov	rax, r10
	xor	edx, edx
	div	r9
	mov	rsi, rax
	cmp	rdx, 1
	sbb	rsi, -1
	test	r11, r11
	je	LBB84_22
LBB84_23:
	mov	rax, r11
	xor	edx, edx
	div	r14
	cmp	rdx, 1
	sbb	rax, -1
	jmp	LBB84_24
LBB84_1:
	test	dl, dl
	je	LBB84_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 112]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB84_4
LBB84_2:
	test	rcx, rcx
	je	LBB84_16
	shr	rcx
LBB84_4:
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 128], rsi
	mov	rcx, qword ptr [r13]
	mov	rax, rsi
	mul	rcx
	jo	LBB84_40
	mov	r15, rax
	mov	qword ptr [rsp + 88], rcx
	mov	rbx, qword ptr [r13 + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	mov	rcx, qword ptr [r13 + 32]
	mov	rax, rsi
	mov	qword ptr [rsp + 80], rcx
	mul	rcx
	jo	LBB84_40
	mov	r12, rax
	mov	rax, qword ptr [r13 + 8]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r13 + 24]
	mov	qword ptr [rsp + 64], rax
	mov	rax, qword ptr [r13 + 40]
	mov	qword ptr [rsp + 40], rax
	mov	r14, qword ptr [r13 + 48]
	mov	rax, qword ptr [r13 + 56]
	mov	qword ptr [rsp + 72], rax
	cmp	r12, r14
	cmova	r12, r14
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB84_41
	mov	r11, qword ptr [rbp + 16]
	mov	rcx, qword ptr [rsp + 96]
	lea	r13, [rcx + 8*r15]
	sub	rbx, r15
	mov	r10, qword ptr [rsp + 40]
	lea	rdx, [r10 + 8*r12]
	mov	qword ptr [rsp + 56], rdx
	sub	r14, r12
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB84_8
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rsi, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rsi
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 224], r11
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rsi
	mov	qword ptr [rsp + 256], rcx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 288], r10
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	mov	qword ptr [rsp + 312], r11
	lea	rsi, [rsp + 136]
	lea	rdi, [rsp + 384]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h2dcc77ab8eef10feE
LBB84_10:
	movdqa	xmm12, xmmword ptr [rsp + 384]
	movdqa	xmm13, xmmword ptr [rsp + 400]
	movdqa	xmm2, xmmword ptr [rsp + 416]
	movdqa	xmm3, xmmword ptr [rsp + 432]
	movdqa	xmm8, xmmword ptr [rsp + 496]
	movdqa	xmm9, xmmword ptr [rsp + 480]
	movdqa	xmm10, xmmword ptr [rsp + 464]
	movdqa	xmm11, xmmword ptr [rsp + 448]
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB84_11:
	paddq	xmm7, xmm3
	paddq	xmm6, xmm2
	paddq	xmm5, xmm13
	paddq	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 368], xmm1
	cmp	byte ptr [rsp + 368], 0
	movdqa	xmm1, xmm0
	jne	LBB84_11
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB84_13:
	paddq	xmm7, xmm8
	paddq	xmm6, xmm9
	paddq	xmm5, xmm10
	paddq	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 352], xmm1
	cmp	byte ptr [rsp + 352], 0
	movdqa	xmm1, xmm0
	jne	LBB84_13
	movdqa	xmmword ptr [rax], xmm4
	movdqa	xmmword ptr [rax + 16], xmm5
	movdqa	xmmword ptr [rax + 32], xmm6
	movdqa	xmmword ptr [rax + 48], xmm7
	jmp	LBB84_15
LBB84_19:
	xor	esi, esi
	test	r11, r11
	jne	LBB84_23
LBB84_22:
	xor	eax, eax
LBB84_24:
	cmp	rsi, rax
	cmova	rsi, rax
	test	rsi, rsi
	mov	qword ptr [rsp + 40], rsi
	pxor	xmm8, xmm8
	je	LBB84_25
	xor	ecx, ecx
	mov	r13, rsi
	mov	rdx, r9
	mov	rbx, r14
	mov	r8d, 0
	pxor	xmm9, xmm9
	pxor	xmm10, xmm10
	pxor	xmm11, xmm11
	xor	edi, edi
	.p2align	4, 0x90
LBB84_33:
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	rdi, r9
	cmovb	rax, r10
	sub	rdx, r9
	add	rax, rdx
	cmp	rax, 7
	jbe	LBB84_38
	sub	rbx, r14
	lea	rax, [r8 + r14]
	cmp	rax, r11
	cmova	rax, r11
	mov	rsi, r8
	add	rsi, r14
	cmovb	rax, r11
	add	rax, rbx
	cmp	rax, 7
	jbe	LBB84_38
	movdqu	xmm6, xmmword ptr [r15 + 8*rcx]
	movdqu	xmm0, xmmword ptr [r15 + 8*rcx + 16]
	movdqu	xmm13, xmmword ptr [r15 + 8*rcx + 32]
	movdqu	xmm12, xmmword ptr [r15 + 8*rcx + 48]
	movdqu	xmm4, xmmword ptr [r12 + 8*r8]
	movdqu	xmm1, xmmword ptr [r12 + 8*r8 + 16]
	movdqu	xmm7, xmmword ptr [r12 + 8*r8 + 32]
	movdqu	xmm5, xmmword ptr [r12 + 8*r8 + 48]
	lea	r8, [r8 + r14]
	movdqa	xmm3, xmm4
	psrlq	xmm3, 32
	pmuludq	xmm3, xmm6
	movdqa	xmm2, xmm6
	psrlq	xmm2, 32
	pmuludq	xmm2, xmm4
	paddq	xmm2, xmm3
	psllq	xmm2, 32
	pmuludq	xmm4, xmm6
	paddq	xmm4, xmm2
	paddq	xmm8, xmm4
	movdqa	xmm2, xmm1
	psrlq	xmm2, 32
	pmuludq	xmm2, xmm0
	movdqa	xmm3, xmm0
	psrlq	xmm3, 32
	pmuludq	xmm3, xmm1
	paddq	xmm3, xmm2
	psllq	xmm3, 32
	pmuludq	xmm1, xmm0
	paddq	xmm1, xmm3
	paddq	xmm9, xmm1
	movdqa	xmm0, xmm7
	psrlq	xmm0, 32
	pmuludq	xmm0, xmm13
	movdqa	xmm1, xmm13
	psrlq	xmm1, 32
	pmuludq	xmm1, xmm7
	paddq	xmm1, xmm0
	psllq	xmm1, 32
	pmuludq	xmm7, xmm13
	paddq	xmm7, xmm1
	paddq	xmm10, xmm7
	movdqa	xmm0, xmm5
	psrlq	xmm0, 32
	pmuludq	xmm0, xmm12
	movdqa	xmm1, xmm12
	psrlq	xmm1, 32
	pmuludq	xmm1, xmm5
	paddq	xmm1, xmm0
	psllq	xmm1, 32
	pmuludq	xmm5, xmm12
	paddq	xmm5, xmm1
	paddq	xmm11, xmm5
	mov	rcx, rdi
	dec	r13
	jne	LBB84_33
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	jne	LBB84_36
	jmp	LBB84_27
LBB84_25:
	pxor	xmm9, xmm9
	pxor	xmm10, xmm10
	pxor	xmm11, xmm11
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	je	LBB84_27
LBB84_36:
	mov	rax, r10
	xor	edx, edx
	div	r9
	cmp	rdx, 1
	sbb	rax, -1
	cmp	rcx, rax
	jae	LBB84_27
	imul	rcx, r9
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	r9, rcx
	cmovb	rax, r10
	sub	rax, rcx
	cmp	rax, 7
	jbe	LBB84_38
LBB84_27:
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB84_28:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 336], xmm1
	cmp	byte ptr [rsp + 336], 0
	movdqa	xmm1, xmm0
	jne	LBB84_28
	pxor	xmm6, xmm6
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	movdqa	xmm7, xmm6
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB84_30:
	paddq	xmm5, xmm11
	paddq	xmm4, xmm10
	paddq	xmm1, xmm9
	paddq	xmm0, xmm8
	psrldq	xmm7, 1
	palignr	xmm7, xmm7, 15
	movdqa	xmmword ptr [rsp + 320], xmm6
	cmp	byte ptr [rsp + 320], 0
	movdqa	xmm6, xmm7
	jne	LBB84_30
	movdqa	xmmword ptr [rax], xmm0
	movdqa	xmmword ptr [rax + 16], xmm1
	movdqa	xmmword ptr [rax + 32], xmm4
	movdqa	xmmword ptr [rax + 48], xmm5
LBB84_15:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB84_8:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rdx
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	rcx, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 224], rcx
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rdx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 256], rdx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	rax, qword ptr [rsp + 40]
	mov	qword ptr [rsp + 288], rax
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	sub	rsi, -128
	mov	qword ptr [rsp + 312], rcx
	lea	rdx, [rsp + 136]
	lea	rdi, [rsp + 384]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hbf6f1242d5c76fb7E
	jmp	LBB84_10
LBB84_38:
	lea	rdi, [rip + l___unnamed_19]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 34
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB84_42:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB84_40:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB84_41:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 136]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h0d59b9077151e637E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 576
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r13, r9
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 120], r8
	shr	rsi
	cmp	rsi, r8
	mov	qword ptr [rsp + 104], rdi
	jae	LBB85_1
LBB85_14:
	mov	r9, qword ptr [r13]
	test	r9, r9
	je	LBB85_40
	mov	r14, qword ptr [r13 + 32]
	test	r14, r14
	je	LBB85_40
	mov	r15, qword ptr [r13 + 8]
	mov	r10, qword ptr [r13 + 16]
	mov	r12, qword ptr [r13 + 40]
	mov	r11, qword ptr [r13 + 48]
	test	r10, r10
	je	LBB85_17
	mov	rax, r10
	xor	edx, edx
	div	r9
	mov	rsi, rax
	cmp	rdx, 1
	sbb	rsi, -1
	test	r11, r11
	je	LBB85_20
LBB85_21:
	mov	rax, r11
	xor	edx, edx
	div	r14
	cmp	rdx, 1
	sbb	rax, -1
	jmp	LBB85_22
LBB85_1:
	test	dl, dl
	je	LBB85_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 112]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB85_4
LBB85_2:
	test	rcx, rcx
	je	LBB85_14
	shr	rcx
LBB85_4:
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 128], rsi
	mov	rcx, qword ptr [r13]
	mov	rax, rsi
	mul	rcx
	jo	LBB85_38
	mov	r15, rax
	mov	qword ptr [rsp + 88], rcx
	mov	rbx, qword ptr [r13 + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	mov	rcx, qword ptr [r13 + 32]
	mov	rax, rsi
	mov	qword ptr [rsp + 80], rcx
	mul	rcx
	jo	LBB85_38
	mov	r12, rax
	mov	rax, qword ptr [r13 + 8]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r13 + 24]
	mov	qword ptr [rsp + 64], rax
	mov	rax, qword ptr [r13 + 40]
	mov	qword ptr [rsp + 40], rax
	mov	r14, qword ptr [r13 + 48]
	mov	rax, qword ptr [r13 + 56]
	mov	qword ptr [rsp + 72], rax
	cmp	r12, r14
	cmova	r12, r14
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB85_39
	mov	r11, qword ptr [rbp + 16]
	mov	rcx, qword ptr [rsp + 96]
	lea	r13, [rcx + 4*r15]
	sub	rbx, r15
	mov	r10, qword ptr [rsp + 40]
	lea	rdx, [r10 + 4*r12]
	mov	qword ptr [rsp + 56], rdx
	sub	r14, r12
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB85_8
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rsi, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rsi
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 224], r11
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rsi
	mov	qword ptr [rsp + 256], rcx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 288], r10
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	mov	qword ptr [rsp + 312], r11
	lea	rsi, [rsp + 136]
	lea	rdi, [rsp + 384]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9890762a6a4004c5E
LBB85_10:
	movdqa	xmm12, xmmword ptr [rsp + 384]
	movdqa	xmm13, xmmword ptr [rsp + 400]
	movdqa	xmm2, xmmword ptr [rsp + 416]
	movdqa	xmm3, xmmword ptr [rsp + 432]
	movdqa	xmm8, xmmword ptr [rsp + 496]
	movdqa	xmm9, xmmword ptr [rsp + 480]
	movdqa	xmm10, xmmword ptr [rsp + 464]
	movdqa	xmm11, xmmword ptr [rsp + 448]
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB85_11:
	paddd	xmm7, xmm3
	paddd	xmm6, xmm2
	paddd	xmm5, xmm13
	paddd	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 368], xmm1
	cmp	byte ptr [rsp + 368], 0
	movdqa	xmm1, xmm0
	jne	LBB85_11
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB85_13:
	paddd	xmm7, xmm8
	paddd	xmm6, xmm9
	paddd	xmm5, xmm10
	paddd	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 352], xmm1
	cmp	byte ptr [rsp + 352], 0
	movdqa	xmm1, xmm0
	jne	LBB85_13
	jmp	LBB85_29
LBB85_17:
	xor	esi, esi
	test	r11, r11
	jne	LBB85_21
LBB85_20:
	xor	eax, eax
LBB85_22:
	cmp	rsi, rax
	cmova	rsi, rax
	test	rsi, rsi
	mov	qword ptr [rsp + 40], rsi
	pxor	xmm8, xmm8
	je	LBB85_23
	xor	ecx, ecx
	mov	r13, rsi
	mov	rdx, r9
	mov	rbx, r14
	mov	r8d, 0
	pxor	xmm9, xmm9
	pxor	xmm10, xmm10
	pxor	xmm11, xmm11
	xor	edi, edi
	.p2align	4, 0x90
LBB85_31:
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	rdi, r9
	cmovb	rax, r10
	sub	rdx, r9
	add	rax, rdx
	cmp	rax, 15
	jbe	LBB85_36
	sub	rbx, r14
	lea	rax, [r8 + r14]
	cmp	rax, r11
	cmova	rax, r11
	mov	rsi, r8
	add	rsi, r14
	cmovb	rax, r11
	add	rax, rbx
	cmp	rax, 15
	jbe	LBB85_36
	movdqu	xmm0, xmmword ptr [r15 + 4*rcx]
	movdqu	xmm1, xmmword ptr [r15 + 4*rcx + 16]
	movdqu	xmm6, xmmword ptr [r15 + 4*rcx + 32]
	movdqu	xmm12, xmmword ptr [r15 + 4*rcx + 48]
	movdqu	xmm7, xmmword ptr [r12 + 4*r8]
	movdqu	xmm2, xmmword ptr [r12 + 4*r8 + 16]
	movdqu	xmm3, xmmword ptr [r12 + 4*r8 + 32]
	movdqu	xmm5, xmmword ptr [r12 + 4*r8 + 48]
	lea	r8, [r8 + r14]
	pshufd	xmm4, xmm7, 245
	pmuludq	xmm7, xmm0
	pshufd	xmm7, xmm7, 232
	pshufd	xmm0, xmm0, 245
	pmuludq	xmm0, xmm4
	pshufd	xmm0, xmm0, 232
	punpckldq	xmm7, xmm0
	paddd	xmm8, xmm7
	pshufd	xmm0, xmm2, 245
	pmuludq	xmm2, xmm1
	pshufd	xmm2, xmm2, 232
	pshufd	xmm1, xmm1, 245
	pmuludq	xmm1, xmm0
	pshufd	xmm0, xmm1, 232
	punpckldq	xmm2, xmm0
	paddd	xmm9, xmm2
	pshufd	xmm0, xmm3, 245
	pmuludq	xmm3, xmm6
	pshufd	xmm1, xmm3, 232
	pshufd	xmm2, xmm6, 245
	pmuludq	xmm2, xmm0
	pshufd	xmm0, xmm2, 232
	punpckldq	xmm1, xmm0
	paddd	xmm10, xmm1
	pshufd	xmm0, xmm5, 245
	pmuludq	xmm5, xmm12
	pshufd	xmm1, xmm5, 232
	pshufd	xmm2, xmm12, 245
	pmuludq	xmm2, xmm0
	pshufd	xmm0, xmm2, 232
	punpckldq	xmm1, xmm0
	paddd	xmm11, xmm1
	mov	rcx, rdi
	dec	r13
	jne	LBB85_31
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	jne	LBB85_34
	jmp	LBB85_25
LBB85_23:
	pxor	xmm9, xmm9
	pxor	xmm10, xmm10
	pxor	xmm11, xmm11
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	je	LBB85_25
LBB85_34:
	mov	rax, r10
	xor	edx, edx
	div	r9
	cmp	rdx, 1
	sbb	rax, -1
	cmp	rcx, rax
	jae	LBB85_25
	imul	rcx, r9
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	r9, rcx
	cmovb	rax, r10
	sub	rax, rcx
	cmp	rax, 15
	jbe	LBB85_36
LBB85_25:
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB85_26:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 336], xmm1
	cmp	byte ptr [rsp + 336], 0
	movdqa	xmm1, xmm0
	jne	LBB85_26
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB85_28:
	paddd	xmm7, xmm11
	paddd	xmm6, xmm10
	paddd	xmm5, xmm9
	paddd	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 320], xmm1
	cmp	byte ptr [rsp + 320], 0
	movdqa	xmm1, xmm0
	jne	LBB85_28
LBB85_29:
	movdqa	xmmword ptr [rax], xmm4
	movdqa	xmmword ptr [rax + 16], xmm5
	movdqa	xmmword ptr [rax + 32], xmm6
	movdqa	xmmword ptr [rax + 48], xmm7
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB85_8:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rdx
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	rcx, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 224], rcx
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rdx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 256], rdx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	rax, qword ptr [rsp + 40]
	mov	qword ptr [rsp + 288], rax
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	sub	rsi, -128
	mov	qword ptr [rsp + 312], rcx
	lea	rdx, [rsp + 136]
	lea	rdi, [rsp + 384]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hf38b1627f378cf78E
	jmp	LBB85_10
LBB85_36:
	lea	rdi, [rip + l___unnamed_23]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 35
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB85_40:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB85_38:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB85_39:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 136]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h0ffe93cfb7fb0572E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 576
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r13, r9
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 120], r8
	shr	rsi
	cmp	rsi, r8
	mov	qword ptr [rsp + 104], rdi
	jae	LBB86_1
LBB86_14:
	mov	r9, qword ptr [r13]
	test	r9, r9
	je	LBB86_40
	mov	r14, qword ptr [r13 + 32]
	test	r14, r14
	je	LBB86_40
	mov	r15, qword ptr [r13 + 8]
	mov	r10, qword ptr [r13 + 16]
	mov	r12, qword ptr [r13 + 40]
	mov	r11, qword ptr [r13 + 48]
	test	r10, r10
	je	LBB86_17
	mov	rax, r10
	xor	edx, edx
	div	r9
	mov	rsi, rax
	cmp	rdx, 1
	sbb	rsi, -1
	test	r11, r11
	je	LBB86_20
LBB86_21:
	mov	rax, r11
	xor	edx, edx
	div	r14
	cmp	rdx, 1
	sbb	rax, -1
	jmp	LBB86_22
LBB86_1:
	test	dl, dl
	je	LBB86_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 112]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB86_4
LBB86_2:
	test	rcx, rcx
	je	LBB86_14
	shr	rcx
LBB86_4:
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 128], rsi
	mov	rcx, qword ptr [r13]
	mov	rax, rsi
	mul	rcx
	jo	LBB86_38
	mov	r15, rax
	mov	qword ptr [rsp + 88], rcx
	mov	rbx, qword ptr [r13 + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	mov	rcx, qword ptr [r13 + 32]
	mov	rax, rsi
	mov	qword ptr [rsp + 80], rcx
	mul	rcx
	jo	LBB86_38
	mov	r12, rax
	mov	rax, qword ptr [r13 + 8]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r13 + 24]
	mov	qword ptr [rsp + 64], rax
	mov	rax, qword ptr [r13 + 40]
	mov	qword ptr [rsp + 40], rax
	mov	r14, qword ptr [r13 + 48]
	mov	rax, qword ptr [r13 + 56]
	mov	qword ptr [rsp + 72], rax
	cmp	r12, r14
	cmova	r12, r14
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB86_39
	mov	r11, qword ptr [rbp + 16]
	mov	rcx, qword ptr [rsp + 96]
	lea	r13, [rcx + 4*r15]
	sub	rbx, r15
	mov	r10, qword ptr [rsp + 40]
	lea	rdx, [r10 + 4*r12]
	mov	qword ptr [rsp + 56], rdx
	sub	r14, r12
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB86_8
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rsi, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rsi
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 224], r11
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rsi
	mov	qword ptr [rsp + 256], rcx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 288], r10
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	mov	qword ptr [rsp + 312], r11
	lea	rsi, [rsp + 136]
	lea	rdi, [rsp + 384]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hb2418168bff1c57dE
LBB86_10:
	movdqa	xmm12, xmmword ptr [rsp + 384]
	movdqa	xmm13, xmmword ptr [rsp + 400]
	movdqa	xmm2, xmmword ptr [rsp + 416]
	movdqa	xmm3, xmmword ptr [rsp + 432]
	movdqa	xmm8, xmmword ptr [rsp + 496]
	movdqa	xmm9, xmmword ptr [rsp + 480]
	movdqa	xmm10, xmmword ptr [rsp + 464]
	movdqa	xmm11, xmmword ptr [rsp + 448]
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB86_11:
	paddd	xmm7, xmm3
	paddd	xmm6, xmm2
	paddd	xmm5, xmm13
	paddd	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 368], xmm1
	cmp	byte ptr [rsp + 368], 0
	movdqa	xmm1, xmm0
	jne	LBB86_11
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB86_13:
	paddd	xmm7, xmm8
	paddd	xmm6, xmm9
	paddd	xmm5, xmm10
	paddd	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 352], xmm1
	cmp	byte ptr [rsp + 352], 0
	movdqa	xmm1, xmm0
	jne	LBB86_13
	jmp	LBB86_29
LBB86_17:
	xor	esi, esi
	test	r11, r11
	jne	LBB86_21
LBB86_20:
	xor	eax, eax
LBB86_22:
	cmp	rsi, rax
	cmova	rsi, rax
	test	rsi, rsi
	mov	qword ptr [rsp + 40], rsi
	pxor	xmm8, xmm8
	je	LBB86_23
	xor	ecx, ecx
	mov	r13, rsi
	mov	rdx, r9
	mov	rbx, r14
	mov	r8d, 0
	pxor	xmm9, xmm9
	pxor	xmm10, xmm10
	pxor	xmm11, xmm11
	xor	edi, edi
	.p2align	4, 0x90
LBB86_31:
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	rdi, r9
	cmovb	rax, r10
	sub	rdx, r9
	add	rax, rdx
	cmp	rax, 15
	jbe	LBB86_36
	sub	rbx, r14
	lea	rax, [r8 + r14]
	cmp	rax, r11
	cmova	rax, r11
	mov	rsi, r8
	add	rsi, r14
	cmovb	rax, r11
	add	rax, rbx
	cmp	rax, 15
	jbe	LBB86_36
	movdqu	xmm0, xmmword ptr [r15 + 4*rcx]
	movdqu	xmm1, xmmword ptr [r15 + 4*rcx + 16]
	movdqu	xmm6, xmmword ptr [r15 + 4*rcx + 32]
	movdqu	xmm12, xmmword ptr [r15 + 4*rcx + 48]
	movdqu	xmm7, xmmword ptr [r12 + 4*r8]
	movdqu	xmm2, xmmword ptr [r12 + 4*r8 + 16]
	movdqu	xmm3, xmmword ptr [r12 + 4*r8 + 32]
	movdqu	xmm5, xmmword ptr [r12 + 4*r8 + 48]
	lea	r8, [r8 + r14]
	pshufd	xmm4, xmm7, 245
	pmuludq	xmm7, xmm0
	pshufd	xmm7, xmm7, 232
	pshufd	xmm0, xmm0, 245
	pmuludq	xmm0, xmm4
	pshufd	xmm0, xmm0, 232
	punpckldq	xmm7, xmm0
	paddd	xmm8, xmm7
	pshufd	xmm0, xmm2, 245
	pmuludq	xmm2, xmm1
	pshufd	xmm2, xmm2, 232
	pshufd	xmm1, xmm1, 245
	pmuludq	xmm1, xmm0
	pshufd	xmm0, xmm1, 232
	punpckldq	xmm2, xmm0
	paddd	xmm9, xmm2
	pshufd	xmm0, xmm3, 245
	pmuludq	xmm3, xmm6
	pshufd	xmm1, xmm3, 232
	pshufd	xmm2, xmm6, 245
	pmuludq	xmm2, xmm0
	pshufd	xmm0, xmm2, 232
	punpckldq	xmm1, xmm0
	paddd	xmm10, xmm1
	pshufd	xmm0, xmm5, 245
	pmuludq	xmm5, xmm12
	pshufd	xmm1, xmm5, 232
	pshufd	xmm2, xmm12, 245
	pmuludq	xmm2, xmm0
	pshufd	xmm0, xmm2, 232
	punpckldq	xmm1, xmm0
	paddd	xmm11, xmm1
	mov	rcx, rdi
	dec	r13
	jne	LBB86_31
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	jne	LBB86_34
	jmp	LBB86_25
LBB86_23:
	pxor	xmm9, xmm9
	pxor	xmm10, xmm10
	pxor	xmm11, xmm11
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	je	LBB86_25
LBB86_34:
	mov	rax, r10
	xor	edx, edx
	div	r9
	cmp	rdx, 1
	sbb	rax, -1
	cmp	rcx, rax
	jae	LBB86_25
	imul	rcx, r9
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	r9, rcx
	cmovb	rax, r10
	sub	rax, rcx
	cmp	rax, 15
	jbe	LBB86_36
LBB86_25:
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB86_26:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 336], xmm1
	cmp	byte ptr [rsp + 336], 0
	movdqa	xmm1, xmm0
	jne	LBB86_26
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB86_28:
	paddd	xmm7, xmm11
	paddd	xmm6, xmm10
	paddd	xmm5, xmm9
	paddd	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 320], xmm1
	cmp	byte ptr [rsp + 320], 0
	movdqa	xmm1, xmm0
	jne	LBB86_28
LBB86_29:
	movdqa	xmmword ptr [rax], xmm4
	movdqa	xmmword ptr [rax + 16], xmm5
	movdqa	xmmword ptr [rax + 32], xmm6
	movdqa	xmmword ptr [rax + 48], xmm7
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB86_8:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rdx
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	rcx, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 224], rcx
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rdx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 256], rdx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	rax, qword ptr [rsp + 40]
	mov	qword ptr [rsp + 288], rax
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	sub	rsi, -128
	mov	qword ptr [rsp + 312], rcx
	lea	rdx, [rsp + 136]
	lea	rdi, [rsp + 384]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h512494f5c0bbf754E
	jmp	LBB86_10
LBB86_36:
	lea	rdi, [rip + l___unnamed_23]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 35
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB86_40:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB86_38:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB86_39:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 136]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h1013a109747a48f3E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, r9
	mov	r14, rdi
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 64], r8
	shr	rsi
	cmp	rsi, r8
	jae	LBB87_1
LBB87_14:
	mov	rax, qword ptr [rbx]
	test	rax, rax
	je	LBB87_29
	mov	rcx, qword ptr [rbx + 16]
	pxor	xmm4, xmm4
	test	rcx, rcx
	je	LBB87_16
	mov	rdx, qword ptr [rbx + 8]
	pxor	xmm8, xmm8
	pxor	xmm9, xmm9
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	.p2align	4, 0x90
LBB87_18:
	cmp	rcx, rax
	mov	rsi, rcx
	cmova	rsi, rax
	cmp	rsi, 15
	jbe	LBB87_30
	movdqu	xmm0, xmmword ptr [rdx]
	paddd	xmm8, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 16]
	paddd	xmm9, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 32]
	paddd	xmm2, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 48]
	lea	rdx, [rdx + 4*rsi]
	paddd	xmm3, xmm0
	sub	rcx, rsi
	jne	LBB87_18
	jmp	LBB87_20
LBB87_1:
	test	dl, dl
	je	LBB87_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 56]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB87_4
LBB87_2:
	test	rcx, rcx
	je	LBB87_14
	shr	rcx
LBB87_4:
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 72], rsi
	mov	r12, qword ptr [rbx]
	mov	rax, rsi
	mul	r12
	jo	LBB87_27
	mov	r15, rax
	mov	qword ptr [rsp + 184], r14
	mov	r13, qword ptr [rbx + 8]
	mov	rbx, qword ptr [rbx + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB87_28
	mov	rdi, qword ptr [rbp + 16]
	lea	r14, [r13 + 4*r15]
	sub	rbx, r15
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB87_7
	lea	rsi, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hdfa8584ced223de9E
LBB87_9:
	movdqa	xmm12, xmmword ptr [rsp + 256]
	movdqa	xmm13, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movdqa	xmm3, xmmword ptr [rsp + 304]
	movdqa	xmm8, xmmword ptr [rsp + 368]
	movdqa	xmm9, xmmword ptr [rsp + 352]
	movdqa	xmm10, xmmword ptr [rsp + 336]
	movdqa	xmm11, xmmword ptr [rsp + 320]
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 184]
	.p2align	4, 0x90
LBB87_10:
	paddd	xmm7, xmm3
	paddd	xmm6, xmm2
	paddd	xmm5, xmm13
	paddd	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 240], xmm1
	cmp	byte ptr [rsp + 240], 0
	movdqa	xmm1, xmm0
	jne	LBB87_10
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB87_12:
	paddd	xmm7, xmm8
	paddd	xmm6, xmm9
	paddd	xmm5, xmm10
	paddd	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 224], xmm1
	cmp	byte ptr [rsp + 224], 0
	movdqa	xmm1, xmm0
	jne	LBB87_12
	movdqa	xmmword ptr [rax], xmm4
	movdqa	xmmword ptr [rax + 16], xmm5
	movdqa	xmmword ptr [rax + 32], xmm6
	movdqa	xmmword ptr [rax + 48], xmm7
	jmp	LBB87_25
LBB87_16:
	pxor	xmm8, xmm8
	pxor	xmm9, xmm9
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
LBB87_20:
	movdqa	xmm0, xmm4
	.p2align	4, 0x90
LBB87_21:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 208], xmm4
	cmp	byte ptr [rsp + 208], 0
	movdqa	xmm4, xmm0
	jne	LBB87_21
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB87_23:
	paddd	xmm7, xmm3
	paddd	xmm6, xmm2
	paddd	xmm5, xmm9
	paddd	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 192], xmm1
	cmp	byte ptr [rsp + 192], 0
	movdqa	xmm1, xmm0
	jne	LBB87_23
	movdqa	xmmword ptr [r14], xmm4
	movdqa	xmmword ptr [r14 + 16], xmm5
	movdqa	xmmword ptr [r14 + 32], xmm6
	movdqa	xmmword ptr [r14 + 48], xmm7
LBB87_25:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB87_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	sub	rsi, -128
	lea	rdx, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	rdi, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h641791bca7e0e4dcE
	jmp	LBB87_9
LBB87_30:
	lea	rdi, [rip + l___unnamed_23]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 35
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB87_29:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB87_27:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB87_28:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h134d0549b874d7b0E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 576
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r13, r9
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 120], r8
	shr	rsi
	cmp	rsi, r8
	mov	qword ptr [rsp + 104], rdi
	jae	LBB88_1
LBB88_16:
	mov	r9, qword ptr [r13]
	test	r9, r9
	je	LBB88_42
	mov	r14, qword ptr [r13 + 32]
	test	r14, r14
	je	LBB88_42
	mov	r15, qword ptr [r13 + 8]
	mov	r10, qword ptr [r13 + 16]
	mov	r12, qword ptr [r13 + 40]
	mov	r11, qword ptr [r13 + 48]
	test	r10, r10
	je	LBB88_19
	mov	rax, r10
	xor	edx, edx
	div	r9
	mov	rsi, rax
	cmp	rdx, 1
	sbb	rsi, -1
	test	r11, r11
	je	LBB88_22
LBB88_23:
	mov	rax, r11
	xor	edx, edx
	div	r14
	cmp	rdx, 1
	sbb	rax, -1
	jmp	LBB88_24
LBB88_1:
	test	dl, dl
	je	LBB88_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 112]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB88_4
LBB88_2:
	test	rcx, rcx
	je	LBB88_16
	shr	rcx
LBB88_4:
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 128], rsi
	mov	rcx, qword ptr [r13]
	mov	rax, rsi
	mul	rcx
	jo	LBB88_40
	mov	r15, rax
	mov	qword ptr [rsp + 88], rcx
	mov	rbx, qword ptr [r13 + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	mov	rcx, qword ptr [r13 + 32]
	mov	rax, rsi
	mov	qword ptr [rsp + 80], rcx
	mul	rcx
	jo	LBB88_40
	mov	r12, rax
	mov	rax, qword ptr [r13 + 8]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r13 + 24]
	mov	qword ptr [rsp + 64], rax
	mov	rax, qword ptr [r13 + 40]
	mov	qword ptr [rsp + 40], rax
	mov	r14, qword ptr [r13 + 48]
	mov	rax, qword ptr [r13 + 56]
	mov	qword ptr [rsp + 72], rax
	cmp	r12, r14
	cmova	r12, r14
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB88_41
	mov	r11, qword ptr [rbp + 16]
	mov	rcx, qword ptr [rsp + 96]
	lea	r13, [rcx + 8*r15]
	sub	rbx, r15
	mov	r10, qword ptr [rsp + 40]
	lea	rdx, [r10 + 8*r12]
	mov	qword ptr [rsp + 56], rdx
	sub	r14, r12
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB88_8
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rsi, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rsi
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 224], r11
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rsi
	mov	qword ptr [rsp + 256], rcx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 288], r10
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	mov	qword ptr [rsp + 312], r11
	lea	rsi, [rsp + 136]
	lea	rdi, [rsp + 384]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h702911570b428847E
LBB88_10:
	movdqa	xmm12, xmmword ptr [rsp + 384]
	movdqa	xmm13, xmmword ptr [rsp + 400]
	movdqa	xmm2, xmmword ptr [rsp + 416]
	movdqa	xmm3, xmmword ptr [rsp + 432]
	movdqa	xmm8, xmmword ptr [rsp + 496]
	movdqa	xmm9, xmmword ptr [rsp + 480]
	movdqa	xmm10, xmmword ptr [rsp + 464]
	movdqa	xmm11, xmmword ptr [rsp + 448]
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB88_11:
	paddq	xmm7, xmm3
	paddq	xmm6, xmm2
	paddq	xmm5, xmm13
	paddq	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 368], xmm1
	cmp	byte ptr [rsp + 368], 0
	movdqa	xmm1, xmm0
	jne	LBB88_11
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB88_13:
	paddq	xmm7, xmm8
	paddq	xmm6, xmm9
	paddq	xmm5, xmm10
	paddq	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 352], xmm1
	cmp	byte ptr [rsp + 352], 0
	movdqa	xmm1, xmm0
	jne	LBB88_13
	movdqa	xmmword ptr [rax], xmm4
	movdqa	xmmword ptr [rax + 16], xmm5
	movdqa	xmmword ptr [rax + 32], xmm6
	movdqa	xmmword ptr [rax + 48], xmm7
	jmp	LBB88_15
LBB88_19:
	xor	esi, esi
	test	r11, r11
	jne	LBB88_23
LBB88_22:
	xor	eax, eax
LBB88_24:
	cmp	rsi, rax
	cmova	rsi, rax
	test	rsi, rsi
	mov	qword ptr [rsp + 40], rsi
	pxor	xmm8, xmm8
	je	LBB88_25
	xor	ecx, ecx
	mov	r13, rsi
	mov	rdx, r9
	mov	rbx, r14
	mov	r8d, 0
	pxor	xmm9, xmm9
	pxor	xmm10, xmm10
	pxor	xmm11, xmm11
	xor	edi, edi
	.p2align	4, 0x90
LBB88_33:
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	rdi, r9
	cmovb	rax, r10
	sub	rdx, r9
	add	rax, rdx
	cmp	rax, 7
	jbe	LBB88_38
	sub	rbx, r14
	lea	rax, [r8 + r14]
	cmp	rax, r11
	cmova	rax, r11
	mov	rsi, r8
	add	rsi, r14
	cmovb	rax, r11
	add	rax, rbx
	cmp	rax, 7
	jbe	LBB88_38
	movdqu	xmm6, xmmword ptr [r15 + 8*rcx]
	movdqu	xmm0, xmmword ptr [r15 + 8*rcx + 16]
	movdqu	xmm13, xmmword ptr [r15 + 8*rcx + 32]
	movdqu	xmm12, xmmword ptr [r15 + 8*rcx + 48]
	movdqu	xmm4, xmmword ptr [r12 + 8*r8]
	movdqu	xmm1, xmmword ptr [r12 + 8*r8 + 16]
	movdqu	xmm7, xmmword ptr [r12 + 8*r8 + 32]
	movdqu	xmm5, xmmword ptr [r12 + 8*r8 + 48]
	lea	r8, [r8 + r14]
	movdqa	xmm3, xmm4
	psrlq	xmm3, 32
	pmuludq	xmm3, xmm6
	movdqa	xmm2, xmm6
	psrlq	xmm2, 32
	pmuludq	xmm2, xmm4
	paddq	xmm2, xmm3
	psllq	xmm2, 32
	pmuludq	xmm4, xmm6
	paddq	xmm4, xmm2
	paddq	xmm8, xmm4
	movdqa	xmm2, xmm1
	psrlq	xmm2, 32
	pmuludq	xmm2, xmm0
	movdqa	xmm3, xmm0
	psrlq	xmm3, 32
	pmuludq	xmm3, xmm1
	paddq	xmm3, xmm2
	psllq	xmm3, 32
	pmuludq	xmm1, xmm0
	paddq	xmm1, xmm3
	paddq	xmm9, xmm1
	movdqa	xmm0, xmm7
	psrlq	xmm0, 32
	pmuludq	xmm0, xmm13
	movdqa	xmm1, xmm13
	psrlq	xmm1, 32
	pmuludq	xmm1, xmm7
	paddq	xmm1, xmm0
	psllq	xmm1, 32
	pmuludq	xmm7, xmm13
	paddq	xmm7, xmm1
	paddq	xmm10, xmm7
	movdqa	xmm0, xmm5
	psrlq	xmm0, 32
	pmuludq	xmm0, xmm12
	movdqa	xmm1, xmm12
	psrlq	xmm1, 32
	pmuludq	xmm1, xmm5
	paddq	xmm1, xmm0
	psllq	xmm1, 32
	pmuludq	xmm5, xmm12
	paddq	xmm5, xmm1
	paddq	xmm11, xmm5
	mov	rcx, rdi
	dec	r13
	jne	LBB88_33
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	jne	LBB88_36
	jmp	LBB88_27
LBB88_25:
	pxor	xmm9, xmm9
	pxor	xmm10, xmm10
	pxor	xmm11, xmm11
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	je	LBB88_27
LBB88_36:
	mov	rax, r10
	xor	edx, edx
	div	r9
	cmp	rdx, 1
	sbb	rax, -1
	cmp	rcx, rax
	jae	LBB88_27
	imul	rcx, r9
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	r9, rcx
	cmovb	rax, r10
	sub	rax, rcx
	cmp	rax, 7
	jbe	LBB88_38
LBB88_27:
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB88_28:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 336], xmm1
	cmp	byte ptr [rsp + 336], 0
	movdqa	xmm1, xmm0
	jne	LBB88_28
	pxor	xmm6, xmm6
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	movdqa	xmm7, xmm6
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB88_30:
	paddq	xmm5, xmm11
	paddq	xmm4, xmm10
	paddq	xmm1, xmm9
	paddq	xmm0, xmm8
	psrldq	xmm7, 1
	palignr	xmm7, xmm7, 15
	movdqa	xmmword ptr [rsp + 320], xmm6
	cmp	byte ptr [rsp + 320], 0
	movdqa	xmm6, xmm7
	jne	LBB88_30
	movdqa	xmmword ptr [rax], xmm0
	movdqa	xmmword ptr [rax + 16], xmm1
	movdqa	xmmword ptr [rax + 32], xmm4
	movdqa	xmmword ptr [rax + 48], xmm5
LBB88_15:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB88_8:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rdx
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	rcx, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 224], rcx
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rdx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 256], rdx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	rax, qword ptr [rsp + 40]
	mov	qword ptr [rsp + 288], rax
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	sub	rsi, -128
	mov	qword ptr [rsp + 312], rcx
	lea	rdx, [rsp + 136]
	lea	rdi, [rsp + 384]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hc0554487c468dbb7E
	jmp	LBB88_10
LBB88_38:
	lea	rdi, [rip + l___unnamed_19]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 34
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB88_42:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB88_40:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB88_41:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 136]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h2395d30d65c44400E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r12, r9
	mov	r13, r8
	mov	r15, rdi
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 80], rdx
	mov	qword ptr [rbp - 72], rcx
	shr	r15
	cmp	r15, rcx
	jae	LBB89_1
LBB89_10:
	lea	rax, [8*r12]
	test	rax, rax
	je	LBB89_23
	lea	r15, [8*r12 - 8]
	shr	r15, 3
	inc	r15
	mov	rbx, r13
	cmp	r15, 2
	jb	LBB89_21
	mov	qword ptr [rbp - 256], r12
	mov	rdx, r15
	and	rdx, -2
	lea	rcx, [rdx - 2]
	mov	rax, rcx
	shr	rax
	inc	rax
	mov	r14d, eax
	and	r14d, 3
	cmp	rcx, 6
	mov	qword ptr [rbp - 248], rdx
	jae	LBB89_14
	xor	r12d, r12d
	test	r14, r14
	jne	LBB89_17
	jmp	LBB89_19
LBB89_1:
	test	sil, sil
	je	LBB89_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 80]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	r15, qword ptr [rbp - 48]
	shr	r15
	mov	qword ptr [rbp - 80], rdx
	mov	qword ptr [rbp - 88], r15
	cmp	r15, r12
	ja	LBB89_25
LBB89_5:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB89_26
	mov	r14, qword ptr [rbp + 16]
	lea	rbx, [r13 + 8*r15]
	sub	r12, r15
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB89_7
	lea	rdi, [rbp - 216]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 216], rax
	lea	rax, [rbp - 88]
	mov	qword ptr [rbp - 208], rax
	lea	rcx, [rbp - 80]
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], rbx
	mov	qword ptr [rbp - 184], r12
	mov	qword ptr [rbp - 176], r14
	mov	qword ptr [rbp - 168], rax
	mov	qword ptr [rbp - 160], rcx
	mov	qword ptr [rbp - 152], r13
	mov	qword ptr [rbp - 144], r15
	mov	qword ptr [rbp - 136], r14
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h3290a287d572be01E
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB89_23
LBB89_2:
	test	rdx, rdx
	je	LBB89_10
	shr	rdx
	mov	qword ptr [rbp - 80], rdx
	mov	qword ptr [rbp - 88], r15
	cmp	r15, r12
	jbe	LBB89_5
LBB89_25:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB89_14:
	mov	rbx, r14
	sub	rbx, rax
	xor	r12d, r12d
	.p2align	4, 0x90
LBB89_15:
	movups	xmm1, xmmword ptr [r13 + 8*r12]
	movaps	xmmword ptr [rbp - 272], xmm1
	movups	xmm0, xmmword ptr [r13 + 8*r12 + 16]
	movaps	xmmword ptr [rbp - 112], xmm0
	movups	xmm0, xmmword ptr [r13 + 8*r12 + 32]
	movaps	xmmword ptr [rbp - 64], xmm0
	movups	xmm0, xmmword ptr [r13 + 8*r12 + 48]
	movaps	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmm1
	call	_exp
	movaps	xmmword ptr [rbp - 240], xmm0
	movaps	xmm0, xmmword ptr [rbp - 272]
	movhlps	xmm0, xmm0
	call	_exp
	movaps	xmm1, xmmword ptr [rbp - 240]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12], xmm1
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_exp
	movaps	xmmword ptr [rbp - 240], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	movhlps	xmm0, xmm0
	call	_exp
	movaps	xmm1, xmmword ptr [rbp - 240]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12 + 16], xmm1
	movaps	xmm0, xmmword ptr [rbp - 64]
	call	_exp
	movaps	xmmword ptr [rbp - 112], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	movhlps	xmm0, xmm0
	call	_exp
	movaps	xmm1, xmmword ptr [rbp - 112]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12 + 32], xmm1
	movaps	xmm0, xmmword ptr [rbp - 128]
	call	_exp
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 128]
	movhlps	xmm0, xmm0
	call	_exp
	movaps	xmm1, xmmword ptr [rbp - 64]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12 + 48], xmm1
	add	r12, 8
	add	rbx, 4
	jne	LBB89_15
	test	r14, r14
	je	LBB89_19
LBB89_17:
	lea	rbx, [r13 + 8*r12]
	neg	r14
	.p2align	4, 0x90
LBB89_18:
	movups	xmm0, xmmword ptr [rbx]
	movaps	xmmword ptr [rbp - 64], xmm0
	call	_exp
	movaps	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	movhlps	xmm0, xmm0
	call	_exp
	movaps	xmm1, xmmword ptr [rbp - 128]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [rbx], xmm1
	add	rbx, 16
	inc	r14
	jne	LBB89_18
LBB89_19:
	mov	rax, qword ptr [rbp - 248]
	cmp	r15, rax
	mov	r12, qword ptr [rbp - 256]
	je	LBB89_23
	lea	rbx, [r13 + 8*rax]
LBB89_21:
	lea	r14, [r13 + 8*r12]
	.p2align	4, 0x90
LBB89_22:
	movsd	xmm0, qword ptr [rbx]
	call	_exp
	movsd	qword ptr [rbx], xmm0
	add	rbx, 8
	cmp	r14, rbx
	jne	LBB89_22
LBB89_23:
	add	rsp, 232
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB89_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 216]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 216], rax
	lea	rax, [rbp - 88]
	mov	qword ptr [rbp - 208], rax
	lea	rcx, [rbp - 80]
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], rbx
	mov	qword ptr [rbp - 184], r12
	mov	qword ptr [rbp - 176], r14
	mov	qword ptr [rbp - 168], rax
	mov	qword ptr [rbp - 160], rcx
	mov	qword ptr [rbp - 152], r13
	mov	qword ptr [rbp - 144], r15
	mov	qword ptr [rbp - 136], r14
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hc30f680121c7a99aE
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB89_23
LBB89_26:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 216]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h2eb6b78daa809218E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 576
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r13, r9
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 120], r8
	shr	rsi
	cmp	rsi, r8
	mov	qword ptr [rsp + 104], rdi
	jae	LBB90_1
LBB90_16:
	mov	r9, qword ptr [r13]
	test	r9, r9
	je	LBB90_42
	mov	r14, qword ptr [r13 + 32]
	test	r14, r14
	je	LBB90_42
	mov	r15, qword ptr [r13 + 8]
	mov	r10, qword ptr [r13 + 16]
	mov	r12, qword ptr [r13 + 40]
	mov	r11, qword ptr [r13 + 48]
	test	r10, r10
	je	LBB90_19
	mov	rax, r10
	xor	edx, edx
	div	r9
	mov	rsi, rax
	cmp	rdx, 1
	sbb	rsi, -1
	test	r11, r11
	je	LBB90_22
LBB90_23:
	mov	rax, r11
	xor	edx, edx
	div	r14
	cmp	rdx, 1
	sbb	rax, -1
	jmp	LBB90_24
LBB90_1:
	test	dl, dl
	je	LBB90_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 112]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB90_4
LBB90_2:
	test	rcx, rcx
	je	LBB90_16
	shr	rcx
LBB90_4:
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 128], rsi
	mov	rcx, qword ptr [r13]
	mov	rax, rsi
	mul	rcx
	jo	LBB90_40
	mov	r15, rax
	mov	qword ptr [rsp + 88], rcx
	mov	rbx, qword ptr [r13 + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	mov	rcx, qword ptr [r13 + 32]
	mov	rax, rsi
	mov	qword ptr [rsp + 80], rcx
	mul	rcx
	jo	LBB90_40
	mov	r12, rax
	mov	rax, qword ptr [r13 + 8]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r13 + 24]
	mov	qword ptr [rsp + 64], rax
	mov	rax, qword ptr [r13 + 40]
	mov	qword ptr [rsp + 40], rax
	mov	r14, qword ptr [r13 + 48]
	mov	rax, qword ptr [r13 + 56]
	mov	qword ptr [rsp + 72], rax
	cmp	r12, r14
	cmova	r12, r14
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB90_41
	mov	r11, qword ptr [rbp + 16]
	mov	rcx, qword ptr [rsp + 96]
	lea	r13, [rcx + 8*r15]
	sub	rbx, r15
	mov	r10, qword ptr [rsp + 40]
	lea	rdx, [r10 + 8*r12]
	mov	qword ptr [rsp + 56], rdx
	sub	r14, r12
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB90_8
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rsi, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rsi
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 224], r11
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rsi
	mov	qword ptr [rsp + 256], rcx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 288], r10
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	mov	qword ptr [rsp + 312], r11
	lea	rsi, [rsp + 136]
	lea	rdi, [rsp + 384]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h6b8f521016c729d0E
LBB90_10:
	movdqa	xmm12, xmmword ptr [rsp + 384]
	movdqa	xmm13, xmmword ptr [rsp + 400]
	movdqa	xmm2, xmmword ptr [rsp + 416]
	movdqa	xmm3, xmmword ptr [rsp + 432]
	movdqa	xmm8, xmmword ptr [rsp + 496]
	movdqa	xmm9, xmmword ptr [rsp + 480]
	movdqa	xmm10, xmmword ptr [rsp + 464]
	movdqa	xmm11, xmmword ptr [rsp + 448]
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB90_11:
	paddq	xmm7, xmm3
	paddq	xmm6, xmm2
	paddq	xmm5, xmm13
	paddq	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 368], xmm1
	cmp	byte ptr [rsp + 368], 0
	movdqa	xmm1, xmm0
	jne	LBB90_11
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB90_13:
	paddq	xmm7, xmm8
	paddq	xmm6, xmm9
	paddq	xmm5, xmm10
	paddq	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 352], xmm1
	cmp	byte ptr [rsp + 352], 0
	movdqa	xmm1, xmm0
	jne	LBB90_13
	movdqa	xmmword ptr [rax], xmm4
	movdqa	xmmword ptr [rax + 16], xmm5
	movdqa	xmmword ptr [rax + 32], xmm6
	movdqa	xmmword ptr [rax + 48], xmm7
	jmp	LBB90_15
LBB90_19:
	xor	esi, esi
	test	r11, r11
	jne	LBB90_23
LBB90_22:
	xor	eax, eax
LBB90_24:
	cmp	rsi, rax
	cmova	rsi, rax
	test	rsi, rsi
	mov	qword ptr [rsp + 40], rsi
	pxor	xmm8, xmm8
	je	LBB90_25
	xor	ecx, ecx
	mov	r13, rsi
	mov	rdx, r9
	mov	rbx, r14
	mov	r8d, 0
	pxor	xmm9, xmm9
	pxor	xmm10, xmm10
	pxor	xmm11, xmm11
	xor	edi, edi
	.p2align	4, 0x90
LBB90_33:
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	rdi, r9
	cmovb	rax, r10
	sub	rdx, r9
	add	rax, rdx
	cmp	rax, 7
	jbe	LBB90_38
	sub	rbx, r14
	lea	rax, [r8 + r14]
	cmp	rax, r11
	cmova	rax, r11
	mov	rsi, r8
	add	rsi, r14
	cmovb	rax, r11
	add	rax, rbx
	cmp	rax, 7
	jbe	LBB90_38
	movdqu	xmm6, xmmword ptr [r15 + 8*rcx]
	movdqu	xmm0, xmmword ptr [r15 + 8*rcx + 16]
	movdqu	xmm13, xmmword ptr [r15 + 8*rcx + 32]
	movdqu	xmm12, xmmword ptr [r15 + 8*rcx + 48]
	movdqu	xmm4, xmmword ptr [r12 + 8*r8]
	movdqu	xmm1, xmmword ptr [r12 + 8*r8 + 16]
	movdqu	xmm7, xmmword ptr [r12 + 8*r8 + 32]
	movdqu	xmm5, xmmword ptr [r12 + 8*r8 + 48]
	lea	r8, [r8 + r14]
	movdqa	xmm3, xmm4
	psrlq	xmm3, 32
	pmuludq	xmm3, xmm6
	movdqa	xmm2, xmm6
	psrlq	xmm2, 32
	pmuludq	xmm2, xmm4
	paddq	xmm2, xmm3
	psllq	xmm2, 32
	pmuludq	xmm4, xmm6
	paddq	xmm4, xmm2
	paddq	xmm8, xmm4
	movdqa	xmm2, xmm1
	psrlq	xmm2, 32
	pmuludq	xmm2, xmm0
	movdqa	xmm3, xmm0
	psrlq	xmm3, 32
	pmuludq	xmm3, xmm1
	paddq	xmm3, xmm2
	psllq	xmm3, 32
	pmuludq	xmm1, xmm0
	paddq	xmm1, xmm3
	paddq	xmm9, xmm1
	movdqa	xmm0, xmm7
	psrlq	xmm0, 32
	pmuludq	xmm0, xmm13
	movdqa	xmm1, xmm13
	psrlq	xmm1, 32
	pmuludq	xmm1, xmm7
	paddq	xmm1, xmm0
	psllq	xmm1, 32
	pmuludq	xmm7, xmm13
	paddq	xmm7, xmm1
	paddq	xmm10, xmm7
	movdqa	xmm0, xmm5
	psrlq	xmm0, 32
	pmuludq	xmm0, xmm12
	movdqa	xmm1, xmm12
	psrlq	xmm1, 32
	pmuludq	xmm1, xmm5
	paddq	xmm1, xmm0
	psllq	xmm1, 32
	pmuludq	xmm5, xmm12
	paddq	xmm5, xmm1
	paddq	xmm11, xmm5
	mov	rcx, rdi
	dec	r13
	jne	LBB90_33
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	jne	LBB90_36
	jmp	LBB90_27
LBB90_25:
	pxor	xmm9, xmm9
	pxor	xmm10, xmm10
	pxor	xmm11, xmm11
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	je	LBB90_27
LBB90_36:
	mov	rax, r10
	xor	edx, edx
	div	r9
	cmp	rdx, 1
	sbb	rax, -1
	cmp	rcx, rax
	jae	LBB90_27
	imul	rcx, r9
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	r9, rcx
	cmovb	rax, r10
	sub	rax, rcx
	cmp	rax, 7
	jbe	LBB90_38
LBB90_27:
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB90_28:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 336], xmm1
	cmp	byte ptr [rsp + 336], 0
	movdqa	xmm1, xmm0
	jne	LBB90_28
	pxor	xmm6, xmm6
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	movdqa	xmm7, xmm6
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB90_30:
	paddq	xmm5, xmm11
	paddq	xmm4, xmm10
	paddq	xmm1, xmm9
	paddq	xmm0, xmm8
	psrldq	xmm7, 1
	palignr	xmm7, xmm7, 15
	movdqa	xmmword ptr [rsp + 320], xmm6
	cmp	byte ptr [rsp + 320], 0
	movdqa	xmm6, xmm7
	jne	LBB90_30
	movdqa	xmmword ptr [rax], xmm0
	movdqa	xmmword ptr [rax + 16], xmm1
	movdqa	xmmword ptr [rax + 32], xmm4
	movdqa	xmmword ptr [rax + 48], xmm5
LBB90_15:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB90_8:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rdx
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	rcx, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 224], rcx
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rdx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 256], rdx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	rax, qword ptr [rsp + 40]
	mov	qword ptr [rsp + 288], rax
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	sub	rsi, -128
	mov	qword ptr [rsp + 312], rcx
	lea	rdx, [rsp + 136]
	lea	rdi, [rsp + 384]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h49c4b5aaf69709caE
	jmp	LBB90_10
LBB90_38:
	lea	rdi, [rip + l___unnamed_19]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 34
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB90_42:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB90_40:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB90_41:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 136]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h333b34283e7d4003E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r12, r9
	mov	r13, r8
	mov	r15, rdi
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 80], rdx
	mov	qword ptr [rbp - 72], rcx
	shr	r15
	cmp	r15, rcx
	jae	LBB91_1
LBB91_10:
	lea	rax, [8*r12]
	test	rax, rax
	je	LBB91_23
	lea	r15, [8*r12 - 8]
	shr	r15, 3
	inc	r15
	mov	rbx, r13
	cmp	r15, 2
	jb	LBB91_21
	mov	qword ptr [rbp - 256], r12
	mov	rdx, r15
	and	rdx, -2
	lea	rcx, [rdx - 2]
	mov	rax, rcx
	shr	rax
	inc	rax
	mov	r14d, eax
	and	r14d, 3
	cmp	rcx, 6
	mov	qword ptr [rbp - 248], rdx
	jae	LBB91_14
	xor	r12d, r12d
	test	r14, r14
	jne	LBB91_17
	jmp	LBB91_19
LBB91_1:
	test	sil, sil
	je	LBB91_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 80]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	r15, qword ptr [rbp - 48]
	shr	r15
	mov	qword ptr [rbp - 80], rdx
	mov	qword ptr [rbp - 88], r15
	cmp	r15, r12
	ja	LBB91_25
LBB91_5:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB91_26
	mov	r14, qword ptr [rbp + 16]
	lea	rbx, [r13 + 8*r15]
	sub	r12, r15
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB91_7
	lea	rdi, [rbp - 216]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 216], rax
	lea	rax, [rbp - 88]
	mov	qword ptr [rbp - 208], rax
	lea	rcx, [rbp - 80]
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], rbx
	mov	qword ptr [rbp - 184], r12
	mov	qword ptr [rbp - 176], r14
	mov	qword ptr [rbp - 168], rax
	mov	qword ptr [rbp - 160], rcx
	mov	qword ptr [rbp - 152], r13
	mov	qword ptr [rbp - 144], r15
	mov	qword ptr [rbp - 136], r14
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hd3310eccc434e7d5E
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB91_23
LBB91_2:
	test	rdx, rdx
	je	LBB91_10
	shr	rdx
	mov	qword ptr [rbp - 80], rdx
	mov	qword ptr [rbp - 88], r15
	cmp	r15, r12
	jbe	LBB91_5
LBB91_25:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB91_14:
	mov	rbx, r14
	sub	rbx, rax
	xor	r12d, r12d
	.p2align	4, 0x90
LBB91_15:
	movups	xmm1, xmmword ptr [r13 + 8*r12]
	movaps	xmmword ptr [rbp - 272], xmm1
	movups	xmm0, xmmword ptr [r13 + 8*r12 + 16]
	movaps	xmmword ptr [rbp - 112], xmm0
	movups	xmm0, xmmword ptr [r13 + 8*r12 + 32]
	movaps	xmmword ptr [rbp - 64], xmm0
	movups	xmm0, xmmword ptr [r13 + 8*r12 + 48]
	movaps	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmm1
	call	_sin
	movaps	xmmword ptr [rbp - 240], xmm0
	movaps	xmm0, xmmword ptr [rbp - 272]
	movhlps	xmm0, xmm0
	call	_sin
	movaps	xmm1, xmmword ptr [rbp - 240]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12], xmm1
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_sin
	movaps	xmmword ptr [rbp - 240], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	movhlps	xmm0, xmm0
	call	_sin
	movaps	xmm1, xmmword ptr [rbp - 240]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12 + 16], xmm1
	movaps	xmm0, xmmword ptr [rbp - 64]
	call	_sin
	movaps	xmmword ptr [rbp - 112], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	movhlps	xmm0, xmm0
	call	_sin
	movaps	xmm1, xmmword ptr [rbp - 112]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12 + 32], xmm1
	movaps	xmm0, xmmword ptr [rbp - 128]
	call	_sin
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 128]
	movhlps	xmm0, xmm0
	call	_sin
	movaps	xmm1, xmmword ptr [rbp - 64]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12 + 48], xmm1
	add	r12, 8
	add	rbx, 4
	jne	LBB91_15
	test	r14, r14
	je	LBB91_19
LBB91_17:
	lea	rbx, [r13 + 8*r12]
	neg	r14
	.p2align	4, 0x90
LBB91_18:
	movups	xmm0, xmmword ptr [rbx]
	movaps	xmmword ptr [rbp - 64], xmm0
	call	_sin
	movaps	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	movhlps	xmm0, xmm0
	call	_sin
	movaps	xmm1, xmmword ptr [rbp - 128]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [rbx], xmm1
	add	rbx, 16
	inc	r14
	jne	LBB91_18
LBB91_19:
	mov	rax, qword ptr [rbp - 248]
	cmp	r15, rax
	mov	r12, qword ptr [rbp - 256]
	je	LBB91_23
	lea	rbx, [r13 + 8*rax]
LBB91_21:
	lea	r14, [r13 + 8*r12]
	.p2align	4, 0x90
LBB91_22:
	movsd	xmm0, qword ptr [rbx]
	call	_sin
	movsd	qword ptr [rbx], xmm0
	add	rbx, 8
	cmp	r14, rbx
	jne	LBB91_22
LBB91_23:
	add	rsp, 232
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB91_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 216]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 216], rax
	lea	rax, [rbp - 88]
	mov	qword ptr [rbp - 208], rax
	lea	rcx, [rbp - 80]
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], rbx
	mov	qword ptr [rbp - 184], r12
	mov	qword ptr [rbp - 176], r14
	mov	qword ptr [rbp - 168], rax
	mov	qword ptr [rbp - 160], rcx
	mov	qword ptr [rbp - 152], r13
	mov	qword ptr [rbp - 144], r15
	mov	qword ptr [rbp - 136], r14
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hd75828698a1c1c9bE
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB91_23
LBB91_26:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 216]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h3da02ce22d6600afE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 248
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r14, r9
	mov	r15, r8
	mov	rbx, rdi
	mov	qword ptr [rbp - 120], rdi
	mov	qword ptr [rbp - 160], rdx
	mov	qword ptr [rbp - 152], rcx
	shr	rbx
	cmp	rbx, rcx
	jae	LBB92_1
LBB92_10:
	lea	rax, [4*r14]
	test	rax, rax
	je	LBB92_23
	lea	rdx, [4*r14 - 4]
	shr	rdx, 2
	inc	rdx
	mov	rbx, r15
	cmp	rdx, 4
	jb	LBB92_21
	mov	rsi, rdx
	and	rsi, -4
	lea	rcx, [rsi - 4]
	mov	rax, rcx
	shr	rax, 2
	inc	rax
	mov	r13d, eax
	and	r13d, 3
	cmp	rcx, 12
	mov	qword ptr [rbp - 272], rdx
	mov	qword ptr [rbp - 264], rsi
	jae	LBB92_14
	xor	r12d, r12d
	test	r13, r13
	jne	LBB92_17
	jmp	LBB92_19
LBB92_1:
	test	sil, sil
	je	LBB92_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 160]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	rbx, qword ptr [rbp - 120]
	shr	rbx
	mov	qword ptr [rbp - 160], rdx
	mov	qword ptr [rbp - 168], rbx
	cmp	rbx, r14
	ja	LBB92_25
LBB92_5:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB92_26
	mov	r12, qword ptr [rbp + 16]
	lea	r13, [r15 + 4*rbx]
	sub	r14, rbx
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB92_7
	lea	rdi, [rbp - 256]
	lea	rax, [rbp - 120]
	mov	qword ptr [rbp - 256], rax
	lea	rax, [rbp - 168]
	mov	qword ptr [rbp - 248], rax
	lea	rcx, [rbp - 160]
	mov	qword ptr [rbp - 240], rcx
	mov	qword ptr [rbp - 232], r13
	mov	qword ptr [rbp - 224], r14
	mov	qword ptr [rbp - 216], r12
	mov	qword ptr [rbp - 208], rax
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], r15
	mov	qword ptr [rbp - 184], rbx
	mov	qword ptr [rbp - 176], r12
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h1ea365bec2d0444aE
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB92_23
LBB92_2:
	test	rdx, rdx
	je	LBB92_10
	shr	rdx
	mov	qword ptr [rbp - 160], rdx
	mov	qword ptr [rbp - 168], rbx
	cmp	rbx, r14
	jbe	LBB92_5
LBB92_25:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB92_14:
	mov	rbx, r13
	sub	rbx, rax
	xor	r12d, r12d
	.p2align	4, 0x90
LBB92_15:
	movups	xmm1, xmmword ptr [r15 + 4*r12]
	movaps	xmmword ptr [rbp - 96], xmm1
	movups	xmm0, xmmword ptr [r15 + 4*r12 + 16]
	movaps	xmmword ptr [rbp - 64], xmm0
	movups	xmm0, xmmword ptr [r15 + 4*r12 + 32]
	movaps	xmmword ptr [rbp - 80], xmm0
	movups	xmm0, xmmword ptr [r15 + 4*r12 + 48]
	movaps	xmmword ptr [rbp - 112], xmm0
	movaps	xmm0, xmm1
	shufps	xmm0, xmm1, 231
	call	_expf
	movaps	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	movhlps	xmm0, xmm0
	call	_expf
	unpcklps	xmm0, xmmword ptr [rbp - 144]
	movaps	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	call	_expf
	movaps	xmmword ptr [rbp - 288], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 96]
	call	_expf
	movaps	xmm1, xmmword ptr [rbp - 288]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 144]
	movups	xmmword ptr [r15 + 4*r12], xmm1
	movaps	xmm0, xmmword ptr [rbp - 64]
	shufps	xmm0, xmm0, 231
	call	_expf
	movaps	xmmword ptr [rbp - 96], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	movhlps	xmm0, xmm0
	call	_expf
	unpcklps	xmm0, xmmword ptr [rbp - 96]
	movaps	xmmword ptr [rbp - 96], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	call	_expf
	movaps	xmmword ptr [rbp - 144], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 64]
	call	_expf
	movaps	xmm1, xmmword ptr [rbp - 144]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 96]
	movups	xmmword ptr [r15 + 4*r12 + 16], xmm1
	movaps	xmm0, xmmword ptr [rbp - 80]
	shufps	xmm0, xmm0, 231
	call	_expf
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 80]
	movhlps	xmm0, xmm0
	call	_expf
	unpcklps	xmm0, xmmword ptr [rbp - 64]
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 80]
	call	_expf
	movaps	xmmword ptr [rbp - 96], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 80]
	call	_expf
	movaps	xmm1, xmmword ptr [rbp - 96]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 64]
	movups	xmmword ptr [r15 + 4*r12 + 32], xmm1
	movaps	xmm0, xmmword ptr [rbp - 112]
	shufps	xmm0, xmm0, 231
	call	_expf
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	movhlps	xmm0, xmm0
	call	_expf
	unpcklps	xmm0, xmmword ptr [rbp - 80]
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_expf
	movaps	xmmword ptr [rbp - 64], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 112]
	call	_expf
	movaps	xmm1, xmmword ptr [rbp - 64]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 80]
	movups	xmmword ptr [r15 + 4*r12 + 48], xmm1
	add	r12, 16
	add	rbx, 4
	jne	LBB92_15
	test	r13, r13
	je	LBB92_19
LBB92_17:
	lea	rbx, [r15 + 4*r12]
	neg	r13
	.p2align	4, 0x90
LBB92_18:
	movups	xmm0, xmmword ptr [rbx]
	movaps	xmmword ptr [rbp - 112], xmm0
	shufps	xmm0, xmm0, 231
	call	_expf
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	movhlps	xmm0, xmm0
	call	_expf
	unpcklps	xmm0, xmmword ptr [rbp - 80]
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_expf
	movaps	xmmword ptr [rbp - 64], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 112]
	call	_expf
	movaps	xmm1, xmmword ptr [rbp - 64]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 80]
	movups	xmmword ptr [rbx], xmm1
	add	rbx, 16
	inc	r13
	jne	LBB92_18
LBB92_19:
	mov	rax, qword ptr [rbp - 264]
	cmp	qword ptr [rbp - 272], rax
	je	LBB92_23
	lea	rbx, [r15 + 4*rax]
LBB92_21:
	lea	r14, [r15 + 4*r14]
	.p2align	4, 0x90
LBB92_22:
	movss	xmm0, dword ptr [rbx]
	call	_expf
	movss	dword ptr [rbx], xmm0
	add	rbx, 4
	cmp	r14, rbx
	jne	LBB92_22
LBB92_23:
	add	rsp, 248
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB92_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 256]
	lea	rax, [rbp - 120]
	mov	qword ptr [rbp - 256], rax
	lea	rax, [rbp - 168]
	mov	qword ptr [rbp - 248], rax
	lea	rcx, [rbp - 160]
	mov	qword ptr [rbp - 240], rcx
	mov	qword ptr [rbp - 232], r13
	mov	qword ptr [rbp - 224], r14
	mov	qword ptr [rbp - 216], r12
	mov	qword ptr [rbp - 208], rax
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], r15
	mov	qword ptr [rbp - 184], rbx
	mov	qword ptr [rbp - 176], r12
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h65e8111ecd09892eE
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB92_23
LBB92_26:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7090b48d49163759E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, r9
	mov	r14, rdi
	mov	qword ptr [rsp + 32], rsi
	mov	qword ptr [rsp + 40], rcx
	mov	qword ptr [rsp + 48], r8
	shr	rsi
	cmp	rsi, r8
	jae	LBB93_1
LBB93_14:
	mov	rax, qword ptr [rbx]
	test	rax, rax
	je	LBB93_29
	mov	rcx, qword ptr [rbx + 16]
	pxor	xmm4, xmm4
	test	rcx, rcx
	je	LBB93_16
	mov	rdx, qword ptr [rbx + 8]
	xorps	xmm8, xmm8
	xorps	xmm9, xmm9
	xorps	xmm2, xmm2
	xorps	xmm3, xmm3
	.p2align	4, 0x90
LBB93_18:
	cmp	rcx, rax
	mov	rsi, rcx
	cmova	rsi, rax
	cmp	rsi, 15
	jbe	LBB93_30
	movups	xmm0, xmmword ptr [rdx]
	movups	xmm1, xmmword ptr [rdx + 16]
	movups	xmm5, xmmword ptr [rdx + 32]
	movups	xmm6, xmmword ptr [rdx + 48]
	lea	rdx, [rdx + 4*rsi]
	mulps	xmm6, xmm6
	addps	xmm3, xmm6
	mulps	xmm0, xmm0
	addps	xmm8, xmm0
	mulps	xmm1, xmm1
	addps	xmm9, xmm1
	mulps	xmm5, xmm5
	addps	xmm2, xmm5
	sub	rcx, rsi
	jne	LBB93_18
	jmp	LBB93_20
LBB93_1:
	test	dl, dl
	je	LBB93_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 40]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 32]
	shr	rsi
	jmp	LBB93_4
LBB93_2:
	test	rcx, rcx
	je	LBB93_14
	shr	rcx
LBB93_4:
	mov	qword ptr [rsp + 40], rcx
	mov	qword ptr [rsp + 56], rsi
	mov	r12, qword ptr [rbx]
	mov	rax, rsi
	mul	r12
	jo	LBB93_27
	mov	r15, rax
	mov	qword ptr [rsp + 184], r14
	mov	r13, qword ptr [rbx + 8]
	mov	rbx, qword ptr [rbx + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB93_28
	mov	r8, qword ptr [rbp + 24]
	mov	rdi, qword ptr [rbp + 16]
	lea	r14, [r13 + 4*r15]
	sub	rbx, r15
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB93_7
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 32]
	mov	qword ptr [rsp + 64], rax
	lea	rax, [rsp + 56]
	mov	qword ptr [rsp + 72], rax
	lea	rcx, [rsp + 40]
	mov	qword ptr [rsp + 80], rcx
	mov	qword ptr [rsp + 88], r12
	mov	qword ptr [rsp + 96], r14
	mov	qword ptr [rsp + 104], rbx
	mov	qword ptr [rsp + 112], rdi
	mov	qword ptr [rsp + 120], r8
	mov	qword ptr [rsp + 128], rax
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 144], r12
	mov	qword ptr [rsp + 152], r13
	mov	qword ptr [rsp + 160], r15
	mov	qword ptr [rsp + 168], rdi
	mov	qword ptr [rsp + 176], r8
	lea	rdi, [rsp + 256]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h88842e955f57968cE
LBB93_9:
	movaps	xmm12, xmmword ptr [rsp + 256]
	movaps	xmm13, xmmword ptr [rsp + 272]
	movaps	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmm8, xmmword ptr [rsp + 368]
	movaps	xmm9, xmmword ptr [rsp + 352]
	movaps	xmm10, xmmword ptr [rsp + 336]
	movaps	xmm11, xmmword ptr [rsp + 320]
	pxor	xmm1, xmm1
	xorps	xmm4, xmm4
	xorps	xmm5, xmm5
	xorps	xmm6, xmm6
	xorps	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 184]
	.p2align	4, 0x90
LBB93_10:
	addps	xmm7, xmm3
	addps	xmm6, xmm2
	addps	xmm5, xmm13
	addps	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 240], xmm1
	cmp	byte ptr [rsp + 240], 0
	movdqa	xmm1, xmm0
	jne	LBB93_10
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB93_12:
	addps	xmm7, xmm8
	addps	xmm6, xmm9
	addps	xmm5, xmm10
	addps	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 224], xmm1
	cmp	byte ptr [rsp + 224], 0
	movdqa	xmm1, xmm0
	jne	LBB93_12
	movaps	xmmword ptr [rax], xmm4
	movaps	xmmword ptr [rax + 16], xmm5
	movaps	xmmword ptr [rax + 32], xmm6
	movaps	xmmword ptr [rax + 48], xmm7
	jmp	LBB93_25
LBB93_16:
	xorps	xmm8, xmm8
	xorps	xmm9, xmm9
	xorps	xmm2, xmm2
	xorps	xmm3, xmm3
LBB93_20:
	movdqa	xmm0, xmm4
	.p2align	4, 0x90
LBB93_21:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 208], xmm4
	cmp	byte ptr [rsp + 208], 0
	movdqa	xmm4, xmm0
	jne	LBB93_21
	xorps	xmm1, xmm1
	pxor	xmm4, xmm4
	xorps	xmm5, xmm5
	xorps	xmm6, xmm6
	xorps	xmm7, xmm7
	movaps	xmm0, xmm1
	.p2align	4, 0x90
LBB93_23:
	addps	xmm7, xmm3
	addps	xmm6, xmm2
	addps	xmm5, xmm9
	addps	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movaps	xmmword ptr [rsp + 192], xmm1
	cmp	byte ptr [rsp + 192], 0
	movdqa	xmm1, xmm0
	jne	LBB93_23
	movaps	xmmword ptr [r14], xmm4
	movaps	xmmword ptr [r14 + 16], xmm5
	movaps	xmmword ptr [r14 + 32], xmm6
	movaps	xmmword ptr [r14 + 48], xmm7
LBB93_25:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB93_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	sub	rsi, -128
	lea	rdx, [rsp + 64]
	lea	rax, [rsp + 32]
	mov	qword ptr [rsp + 64], rax
	lea	rax, [rsp + 56]
	mov	qword ptr [rsp + 72], rax
	lea	rcx, [rsp + 40]
	mov	qword ptr [rsp + 80], rcx
	mov	qword ptr [rsp + 88], r12
	mov	qword ptr [rsp + 96], r14
	mov	qword ptr [rsp + 104], rbx
	mov	rbx, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 112], rbx
	mov	rdi, qword ptr [rbp + 24]
	mov	qword ptr [rsp + 120], rdi
	mov	qword ptr [rsp + 128], rax
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 144], r12
	mov	qword ptr [rsp + 152], r13
	mov	qword ptr [rsp + 160], r15
	mov	qword ptr [rsp + 168], rbx
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h5ea10d5cf1a19d49E
	jmp	LBB93_9
LBB93_30:
	lea	rdi, [rip + l___unnamed_23]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 35
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB93_29:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB93_27:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB93_28:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7832ac13ae304cccE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 120
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r14, r9
	mov	r12, r8
	mov	r15, rdi
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 56], rcx
	shr	r15
	cmp	r15, rcx
	jae	LBB94_4
LBB94_1:
	shl	r14, 3
	test	r14, r14
	je	LBB94_10
	xor	ebx, ebx
	.p2align	4, 0x90
LBB94_3:
	movsd	xmm0, qword ptr [r12 + rbx]
	call	_tan
	movsd	qword ptr [r12 + rbx], xmm0
	add	rbx, 8
	cmp	r14, rbx
	jne	LBB94_3
	jmp	LBB94_10
LBB94_4:
	test	sil, sil
	je	LBB94_11
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 64]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	r15, qword ptr [rbp - 48]
	shr	r15
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], r15
	cmp	r15, r14
	ja	LBB94_13
LBB94_6:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB94_15
	mov	rbx, qword ptr [rbp + 16]
	lea	r13, [r12 + 8*r15]
	sub	r14, r15
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB94_14
	lea	rdi, [rbp - 160]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 160], rax
	lea	rax, [rbp - 72]
	mov	qword ptr [rbp - 152], rax
	lea	rcx, [rbp - 64]
	mov	qword ptr [rbp - 144], rcx
	mov	qword ptr [rbp - 136], r13
	mov	qword ptr [rbp - 128], r14
	mov	qword ptr [rbp - 120], rbx
	mov	qword ptr [rbp - 112], rax
	mov	qword ptr [rbp - 104], rcx
	mov	qword ptr [rbp - 96], r12
	mov	qword ptr [rbp - 88], r15
	mov	qword ptr [rbp - 80], rbx
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17he9e6a61e30b054aeE
LBB94_9:
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
LBB94_10:
	add	rsp, 120
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB94_11:
	test	rdx, rdx
	je	LBB94_1
	shr	rdx
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], r15
	cmp	r15, r14
	jbe	LBB94_6
LBB94_13:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB94_14:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 160]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 160], rax
	lea	rax, [rbp - 72]
	mov	qword ptr [rbp - 152], rax
	lea	rcx, [rbp - 64]
	mov	qword ptr [rbp - 144], rcx
	mov	qword ptr [rbp - 136], r13
	mov	qword ptr [rbp - 128], r14
	mov	qword ptr [rbp - 120], rbx
	mov	qword ptr [rbp - 112], rax
	mov	qword ptr [rbp - 104], rcx
	mov	qword ptr [rbp - 96], r12
	mov	qword ptr [rbp - 88], r15
	mov	qword ptr [rbp - 80], rbx
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hd0c2908f213c375aE
	jmp	LBB94_9
LBB94_15:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7e7cdc163fa85702E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, r9
	mov	r14, rdi
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 64], r8
	shr	rsi
	cmp	rsi, r8
	jae	LBB95_1
LBB95_14:
	mov	rax, qword ptr [rbx]
	test	rax, rax
	je	LBB95_29
	mov	rcx, qword ptr [rbx + 16]
	pxor	xmm4, xmm4
	test	rcx, rcx
	je	LBB95_16
	mov	rdx, qword ptr [rbx + 8]
	pxor	xmm8, xmm8
	pxor	xmm9, xmm9
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	.p2align	4, 0x90
LBB95_18:
	cmp	rcx, rax
	mov	rsi, rcx
	cmova	rsi, rax
	cmp	rsi, 15
	jbe	LBB95_30
	movdqu	xmm0, xmmword ptr [rdx]
	paddd	xmm8, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 16]
	paddd	xmm9, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 32]
	paddd	xmm2, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 48]
	lea	rdx, [rdx + 4*rsi]
	paddd	xmm3, xmm0
	sub	rcx, rsi
	jne	LBB95_18
	jmp	LBB95_20
LBB95_1:
	test	dl, dl
	je	LBB95_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 56]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB95_4
LBB95_2:
	test	rcx, rcx
	je	LBB95_14
	shr	rcx
LBB95_4:
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 72], rsi
	mov	r12, qword ptr [rbx]
	mov	rax, rsi
	mul	r12
	jo	LBB95_27
	mov	r15, rax
	mov	qword ptr [rsp + 184], r14
	mov	r13, qword ptr [rbx + 8]
	mov	rbx, qword ptr [rbx + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB95_28
	mov	rdi, qword ptr [rbp + 16]
	lea	r14, [r13 + 4*r15]
	sub	rbx, r15
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB95_7
	lea	rsi, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17he54d9e491b91f7a1E
LBB95_9:
	movdqa	xmm12, xmmword ptr [rsp + 256]
	movdqa	xmm13, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movdqa	xmm3, xmmword ptr [rsp + 304]
	movdqa	xmm8, xmmword ptr [rsp + 368]
	movdqa	xmm9, xmmword ptr [rsp + 352]
	movdqa	xmm10, xmmword ptr [rsp + 336]
	movdqa	xmm11, xmmword ptr [rsp + 320]
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 184]
	.p2align	4, 0x90
LBB95_10:
	paddd	xmm7, xmm3
	paddd	xmm6, xmm2
	paddd	xmm5, xmm13
	paddd	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 240], xmm1
	cmp	byte ptr [rsp + 240], 0
	movdqa	xmm1, xmm0
	jne	LBB95_10
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB95_12:
	paddd	xmm7, xmm8
	paddd	xmm6, xmm9
	paddd	xmm5, xmm10
	paddd	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 224], xmm1
	cmp	byte ptr [rsp + 224], 0
	movdqa	xmm1, xmm0
	jne	LBB95_12
	movdqa	xmmword ptr [rax], xmm4
	movdqa	xmmword ptr [rax + 16], xmm5
	movdqa	xmmword ptr [rax + 32], xmm6
	movdqa	xmmword ptr [rax + 48], xmm7
	jmp	LBB95_25
LBB95_16:
	pxor	xmm8, xmm8
	pxor	xmm9, xmm9
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
LBB95_20:
	movdqa	xmm0, xmm4
	.p2align	4, 0x90
LBB95_21:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 208], xmm4
	cmp	byte ptr [rsp + 208], 0
	movdqa	xmm4, xmm0
	jne	LBB95_21
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB95_23:
	paddd	xmm7, xmm3
	paddd	xmm6, xmm2
	paddd	xmm5, xmm9
	paddd	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 192], xmm1
	cmp	byte ptr [rsp + 192], 0
	movdqa	xmm1, xmm0
	jne	LBB95_23
	movdqa	xmmword ptr [r14], xmm4
	movdqa	xmmword ptr [r14 + 16], xmm5
	movdqa	xmmword ptr [r14 + 32], xmm6
	movdqa	xmmword ptr [r14 + 48], xmm7
LBB95_25:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB95_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	sub	rsi, -128
	lea	rdx, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	rdi, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hb3fcf28e0712a23fE
	jmp	LBB95_9
LBB95_30:
	lea	rdi, [rip + l___unnamed_23]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 35
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB95_29:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB95_27:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB95_28:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h88562aaf0f422f1dE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, r9
	mov	r14, rdi
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 64], r8
	shr	rsi
	cmp	rsi, r8
	jae	LBB96_1
LBB96_14:
	mov	rax, qword ptr [rbx]
	test	rax, rax
	je	LBB96_29
	mov	rcx, qword ptr [rbx + 16]
	pxor	xmm4, xmm4
	test	rcx, rcx
	je	LBB96_16
	mov	rdx, qword ptr [rbx + 8]
	pxor	xmm8, xmm8
	pxor	xmm9, xmm9
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	.p2align	4, 0x90
LBB96_18:
	cmp	rcx, rax
	mov	rsi, rcx
	cmova	rsi, rax
	cmp	rsi, 7
	jbe	LBB96_30
	movdqu	xmm0, xmmword ptr [rdx]
	paddq	xmm8, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 16]
	paddq	xmm9, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 32]
	paddq	xmm2, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 48]
	lea	rdx, [rdx + 8*rsi]
	paddq	xmm3, xmm0
	sub	rcx, rsi
	jne	LBB96_18
	jmp	LBB96_20
LBB96_1:
	test	dl, dl
	je	LBB96_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 56]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB96_4
LBB96_2:
	test	rcx, rcx
	je	LBB96_14
	shr	rcx
LBB96_4:
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 72], rsi
	mov	r12, qword ptr [rbx]
	mov	rax, rsi
	mul	r12
	jo	LBB96_27
	mov	r15, rax
	mov	qword ptr [rsp + 184], r14
	mov	r13, qword ptr [rbx + 8]
	mov	rbx, qword ptr [rbx + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB96_28
	mov	rdi, qword ptr [rbp + 16]
	lea	r14, [r13 + 8*r15]
	sub	rbx, r15
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB96_7
	lea	rsi, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h481b8c02e05c9cc4E
LBB96_9:
	movdqa	xmm12, xmmword ptr [rsp + 256]
	movdqa	xmm13, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movdqa	xmm3, xmmword ptr [rsp + 304]
	movdqa	xmm8, xmmword ptr [rsp + 368]
	movdqa	xmm9, xmmword ptr [rsp + 352]
	movdqa	xmm10, xmmword ptr [rsp + 336]
	movdqa	xmm11, xmmword ptr [rsp + 320]
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 184]
	.p2align	4, 0x90
LBB96_10:
	paddq	xmm7, xmm3
	paddq	xmm6, xmm2
	paddq	xmm5, xmm13
	paddq	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 240], xmm1
	cmp	byte ptr [rsp + 240], 0
	movdqa	xmm1, xmm0
	jne	LBB96_10
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB96_12:
	paddq	xmm7, xmm8
	paddq	xmm6, xmm9
	paddq	xmm5, xmm10
	paddq	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 224], xmm1
	cmp	byte ptr [rsp + 224], 0
	movdqa	xmm1, xmm0
	jne	LBB96_12
	movdqa	xmmword ptr [rax], xmm4
	movdqa	xmmword ptr [rax + 16], xmm5
	movdqa	xmmword ptr [rax + 32], xmm6
	movdqa	xmmword ptr [rax + 48], xmm7
	jmp	LBB96_25
LBB96_16:
	pxor	xmm8, xmm8
	pxor	xmm9, xmm9
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
LBB96_20:
	movdqa	xmm0, xmm4
	.p2align	4, 0x90
LBB96_21:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 208], xmm4
	cmp	byte ptr [rsp + 208], 0
	movdqa	xmm4, xmm0
	jne	LBB96_21
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB96_23:
	paddq	xmm7, xmm3
	paddq	xmm6, xmm2
	paddq	xmm5, xmm9
	paddq	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 192], xmm1
	cmp	byte ptr [rsp + 192], 0
	movdqa	xmm1, xmm0
	jne	LBB96_23
	movdqa	xmmword ptr [r14], xmm4
	movdqa	xmmword ptr [r14 + 16], xmm5
	movdqa	xmmword ptr [r14 + 32], xmm6
	movdqa	xmmword ptr [r14 + 48], xmm7
LBB96_25:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB96_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	sub	rsi, -128
	lea	rdx, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	rdi, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h5cf5aa1e50864386E
	jmp	LBB96_9
LBB96_30:
	lea	rdi, [rip + l___unnamed_19]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 34
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB96_29:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB96_27:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB96_28:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h88adf7442447d004E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 576
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r13, r9
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 120], r8
	shr	rsi
	cmp	rsi, r8
	mov	qword ptr [rsp + 104], rdi
	jae	LBB97_1
LBB97_14:
	mov	r9, qword ptr [r13]
	test	r9, r9
	je	LBB97_40
	mov	r14, qword ptr [r13 + 32]
	test	r14, r14
	je	LBB97_40
	mov	r15, qword ptr [r13 + 8]
	mov	r10, qword ptr [r13 + 16]
	mov	r12, qword ptr [r13 + 40]
	mov	r11, qword ptr [r13 + 48]
	test	r10, r10
	je	LBB97_17
	mov	rax, r10
	xor	edx, edx
	div	r9
	mov	rcx, rax
	cmp	rdx, 1
	sbb	rcx, -1
	test	r11, r11
	je	LBB97_20
LBB97_21:
	mov	rax, r11
	xor	edx, edx
	div	r14
	cmp	rdx, 1
	sbb	rax, -1
	jmp	LBB97_22
LBB97_1:
	test	dl, dl
	je	LBB97_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 112]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB97_4
LBB97_2:
	test	rcx, rcx
	je	LBB97_14
	shr	rcx
LBB97_4:
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 128], rsi
	mov	rcx, qword ptr [r13]
	mov	rax, rsi
	mul	rcx
	jo	LBB97_38
	mov	r15, rax
	mov	qword ptr [rsp + 88], rcx
	mov	rbx, qword ptr [r13 + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	mov	rcx, qword ptr [r13 + 32]
	mov	rax, rsi
	mov	qword ptr [rsp + 80], rcx
	mul	rcx
	jo	LBB97_38
	mov	r12, rax
	mov	rax, qword ptr [r13 + 8]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r13 + 24]
	mov	qword ptr [rsp + 64], rax
	mov	rax, qword ptr [r13 + 40]
	mov	qword ptr [rsp + 40], rax
	mov	r14, qword ptr [r13 + 48]
	mov	rax, qword ptr [r13 + 56]
	mov	qword ptr [rsp + 72], rax
	cmp	r12, r14
	cmova	r12, r14
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB97_39
	mov	r11, qword ptr [rbp + 16]
	mov	rcx, qword ptr [rsp + 96]
	lea	r13, [rcx + 8*r15]
	sub	rbx, r15
	mov	r10, qword ptr [rsp + 40]
	lea	rdx, [r10 + 8*r12]
	mov	qword ptr [rsp + 56], rdx
	sub	r14, r12
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB97_8
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rsi, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rsi
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 224], r11
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rsi
	mov	qword ptr [rsp + 256], rcx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 288], r10
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	mov	qword ptr [rsp + 312], r11
	lea	rsi, [rsp + 136]
	lea	rdi, [rsp + 384]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9321494734bafdcbE
LBB97_10:
	movapd	xmm12, xmmword ptr [rsp + 384]
	movapd	xmm13, xmmword ptr [rsp + 400]
	movapd	xmm2, xmmword ptr [rsp + 416]
	movapd	xmm3, xmmword ptr [rsp + 432]
	movapd	xmm8, xmmword ptr [rsp + 496]
	movapd	xmm9, xmmword ptr [rsp + 480]
	movapd	xmm10, xmmword ptr [rsp + 464]
	movapd	xmm11, xmmword ptr [rsp + 448]
	pxor	xmm1, xmm1
	xorpd	xmm4, xmm4
	xorpd	xmm5, xmm5
	xorpd	xmm6, xmm6
	xorpd	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB97_11:
	addpd	xmm7, xmm3
	addpd	xmm6, xmm2
	addpd	xmm5, xmm13
	addpd	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 368], xmm1
	cmp	byte ptr [rsp + 368], 0
	movdqa	xmm1, xmm0
	jne	LBB97_11
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB97_13:
	addpd	xmm7, xmm8
	addpd	xmm6, xmm9
	addpd	xmm5, xmm10
	addpd	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 352], xmm1
	cmp	byte ptr [rsp + 352], 0
	movdqa	xmm1, xmm0
	jne	LBB97_13
	jmp	LBB97_29
LBB97_17:
	xor	ecx, ecx
	test	r11, r11
	jne	LBB97_21
LBB97_20:
	xor	eax, eax
LBB97_22:
	cmp	rcx, rax
	cmova	rcx, rax
	test	rcx, rcx
	mov	qword ptr [rsp + 40], rcx
	xorpd	xmm8, xmm8
	je	LBB97_23
	xor	edi, edi
	mov	r13, rcx
	mov	rdx, r9
	mov	rbx, r14
	mov	r8d, 0
	xorpd	xmm9, xmm9
	xorpd	xmm2, xmm2
	xorpd	xmm3, xmm3
	xor	ecx, ecx
	.p2align	4, 0x90
LBB97_31:
	lea	rax, [rdi + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	rcx, r9
	cmovb	rax, r10
	sub	rdx, r9
	add	rax, rdx
	cmp	rax, 7
	jbe	LBB97_36
	sub	rbx, r14
	lea	rax, [r8 + r14]
	cmp	rax, r11
	cmova	rax, r11
	mov	rsi, r8
	add	rsi, r14
	cmovb	rax, r11
	add	rax, rbx
	cmp	rax, 7
	jbe	LBB97_36
	movupd	xmm0, xmmword ptr [r15 + 8*rdi]
	movupd	xmm1, xmmword ptr [r15 + 8*rdi + 16]
	movupd	xmm4, xmmword ptr [r15 + 8*rdi + 32]
	movupd	xmm5, xmmword ptr [r15 + 8*rdi + 48]
	movupd	xmm6, xmmword ptr [r12 + 8*r8]
	mulpd	xmm6, xmm0
	addpd	xmm8, xmm6
	movupd	xmm0, xmmword ptr [r12 + 8*r8 + 16]
	mulpd	xmm0, xmm1
	addpd	xmm9, xmm0
	movupd	xmm0, xmmword ptr [r12 + 8*r8 + 32]
	mulpd	xmm0, xmm4
	addpd	xmm2, xmm0
	movupd	xmm0, xmmword ptr [r12 + 8*r8 + 48]
	lea	r8, [r8 + r14]
	mulpd	xmm0, xmm5
	addpd	xmm3, xmm0
	mov	rdi, rcx
	dec	r13
	jne	LBB97_31
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	jne	LBB97_34
	jmp	LBB97_25
LBB97_23:
	xorpd	xmm9, xmm9
	xorpd	xmm2, xmm2
	xorpd	xmm3, xmm3
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	je	LBB97_25
LBB97_34:
	mov	rax, r10
	xor	edx, edx
	div	r9
	cmp	rdx, 1
	sbb	rax, -1
	cmp	rcx, rax
	jae	LBB97_25
	imul	rcx, r9
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	r9, rcx
	cmovb	rax, r10
	sub	rax, rcx
	cmp	rax, 7
	jbe	LBB97_36
LBB97_25:
	xorpd	xmm1, xmm1
	movapd	xmm0, xmm1
	.p2align	4, 0x90
LBB97_26:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movapd	xmmword ptr [rsp + 336], xmm1
	cmp	byte ptr [rsp + 336], 0
	movdqa	xmm1, xmm0
	jne	LBB97_26
	xorpd	xmm1, xmm1
	xorpd	xmm4, xmm4
	xorpd	xmm5, xmm5
	xorpd	xmm6, xmm6
	xorpd	xmm7, xmm7
	movapd	xmm0, xmm1
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB97_28:
	addpd	xmm7, xmm3
	addpd	xmm6, xmm2
	addpd	xmm5, xmm9
	addpd	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movapd	xmmword ptr [rsp + 320], xmm1
	cmp	byte ptr [rsp + 320], 0
	movdqa	xmm1, xmm0
	jne	LBB97_28
LBB97_29:
	movapd	xmmword ptr [rax], xmm4
	movapd	xmmword ptr [rax + 16], xmm5
	movapd	xmmword ptr [rax + 32], xmm6
	movapd	xmmword ptr [rax + 48], xmm7
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB97_8:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rdx
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	rcx, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 224], rcx
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rdx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 256], rdx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	rax, qword ptr [rsp + 40]
	mov	qword ptr [rsp + 288], rax
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	sub	rsi, -128
	mov	qword ptr [rsp + 312], rcx
	lea	rdx, [rsp + 136]
	lea	rdi, [rsp + 384]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h0230adf386e20217E
	jmp	LBB97_10
LBB97_36:
	lea	rdi, [rip + l___unnamed_19]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 34
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB97_40:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB97_38:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB97_39:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 136]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8bebf2fbcff93f77E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, r9
	mov	r14, rdi
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 64], r8
	shr	rsi
	cmp	rsi, r8
	jae	LBB98_1
LBB98_14:
	mov	rax, qword ptr [rbx]
	test	rax, rax
	je	LBB98_29
	mov	rcx, qword ptr [rbx + 16]
	pxor	xmm4, xmm4
	test	rcx, rcx
	je	LBB98_16
	mov	rdx, qword ptr [rbx + 8]
	xorpd	xmm8, xmm8
	xorpd	xmm9, xmm9
	xorpd	xmm2, xmm2
	xorpd	xmm3, xmm3
	.p2align	4, 0x90
LBB98_18:
	cmp	rcx, rax
	mov	rsi, rcx
	cmova	rsi, rax
	cmp	rsi, 7
	jbe	LBB98_30
	movupd	xmm0, xmmword ptr [rdx]
	addpd	xmm8, xmm0
	movupd	xmm0, xmmword ptr [rdx + 16]
	addpd	xmm9, xmm0
	movupd	xmm0, xmmword ptr [rdx + 32]
	addpd	xmm2, xmm0
	movupd	xmm0, xmmword ptr [rdx + 48]
	lea	rdx, [rdx + 8*rsi]
	addpd	xmm3, xmm0
	sub	rcx, rsi
	jne	LBB98_18
	jmp	LBB98_20
LBB98_1:
	test	dl, dl
	je	LBB98_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 56]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB98_4
LBB98_2:
	test	rcx, rcx
	je	LBB98_14
	shr	rcx
LBB98_4:
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 72], rsi
	mov	r12, qword ptr [rbx]
	mov	rax, rsi
	mul	r12
	jo	LBB98_27
	mov	r15, rax
	mov	qword ptr [rsp + 184], r14
	mov	r13, qword ptr [rbx + 8]
	mov	rbx, qword ptr [rbx + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB98_28
	mov	rdi, qword ptr [rbp + 16]
	lea	r14, [r13 + 8*r15]
	sub	rbx, r15
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB98_7
	lea	rsi, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h216555e91046cbb2E
LBB98_9:
	movapd	xmm12, xmmword ptr [rsp + 256]
	movapd	xmm13, xmmword ptr [rsp + 272]
	movapd	xmm2, xmmword ptr [rsp + 288]
	movapd	xmm3, xmmword ptr [rsp + 304]
	movapd	xmm8, xmmword ptr [rsp + 368]
	movapd	xmm9, xmmword ptr [rsp + 352]
	movapd	xmm10, xmmword ptr [rsp + 336]
	movapd	xmm11, xmmword ptr [rsp + 320]
	pxor	xmm1, xmm1
	xorpd	xmm4, xmm4
	xorpd	xmm5, xmm5
	xorpd	xmm6, xmm6
	xorpd	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 184]
	.p2align	4, 0x90
LBB98_10:
	addpd	xmm7, xmm3
	addpd	xmm6, xmm2
	addpd	xmm5, xmm13
	addpd	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 240], xmm1
	cmp	byte ptr [rsp + 240], 0
	movdqa	xmm1, xmm0
	jne	LBB98_10
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB98_12:
	addpd	xmm7, xmm8
	addpd	xmm6, xmm9
	addpd	xmm5, xmm10
	addpd	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 224], xmm1
	cmp	byte ptr [rsp + 224], 0
	movdqa	xmm1, xmm0
	jne	LBB98_12
	movapd	xmmword ptr [rax], xmm4
	movapd	xmmword ptr [rax + 16], xmm5
	movapd	xmmword ptr [rax + 32], xmm6
	movapd	xmmword ptr [rax + 48], xmm7
	jmp	LBB98_25
LBB98_16:
	xorpd	xmm8, xmm8
	xorpd	xmm9, xmm9
	xorpd	xmm2, xmm2
	xorpd	xmm3, xmm3
LBB98_20:
	movdqa	xmm0, xmm4
	.p2align	4, 0x90
LBB98_21:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 208], xmm4
	cmp	byte ptr [rsp + 208], 0
	movdqa	xmm4, xmm0
	jne	LBB98_21
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	xorpd	xmm5, xmm5
	xorpd	xmm6, xmm6
	xorpd	xmm7, xmm7
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB98_23:
	addpd	xmm7, xmm3
	addpd	xmm6, xmm2
	addpd	xmm5, xmm9
	addpd	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 192], xmm1
	cmp	byte ptr [rsp + 192], 0
	movdqa	xmm1, xmm0
	jne	LBB98_23
	movapd	xmmword ptr [r14], xmm4
	movapd	xmmword ptr [r14 + 16], xmm5
	movapd	xmmword ptr [r14 + 32], xmm6
	movapd	xmmword ptr [r14 + 48], xmm7
LBB98_25:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB98_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	sub	rsi, -128
	lea	rdx, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	rdi, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hcb551d32d278e8e8E
	jmp	LBB98_9
LBB98_30:
	lea	rdi, [rip + l___unnamed_19]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 34
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB98_29:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB98_27:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB98_28:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h9345e3cb89fa4930E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, r9
	mov	r14, rdi
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 64], r8
	shr	rsi
	cmp	rsi, r8
	jae	LBB99_1
LBB99_14:
	mov	rax, qword ptr [rbx]
	test	rax, rax
	je	LBB99_29
	mov	rcx, qword ptr [rbx + 16]
	pxor	xmm4, xmm4
	test	rcx, rcx
	je	LBB99_16
	mov	rdx, qword ptr [rbx + 8]
	xorps	xmm8, xmm8
	xorps	xmm9, xmm9
	xorps	xmm2, xmm2
	xorps	xmm3, xmm3
	.p2align	4, 0x90
LBB99_18:
	cmp	rcx, rax
	mov	rsi, rcx
	cmova	rsi, rax
	cmp	rsi, 15
	jbe	LBB99_30
	movups	xmm0, xmmword ptr [rdx]
	addps	xmm8, xmm0
	movups	xmm0, xmmword ptr [rdx + 16]
	addps	xmm9, xmm0
	movups	xmm0, xmmword ptr [rdx + 32]
	addps	xmm2, xmm0
	movups	xmm0, xmmword ptr [rdx + 48]
	lea	rdx, [rdx + 4*rsi]
	addps	xmm3, xmm0
	sub	rcx, rsi
	jne	LBB99_18
	jmp	LBB99_20
LBB99_1:
	test	dl, dl
	je	LBB99_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 56]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB99_4
LBB99_2:
	test	rcx, rcx
	je	LBB99_14
	shr	rcx
LBB99_4:
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 72], rsi
	mov	r12, qword ptr [rbx]
	mov	rax, rsi
	mul	r12
	jo	LBB99_27
	mov	r15, rax
	mov	qword ptr [rsp + 184], r14
	mov	r13, qword ptr [rbx + 8]
	mov	rbx, qword ptr [rbx + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB99_28
	mov	rdi, qword ptr [rbp + 16]
	lea	r14, [r13 + 4*r15]
	sub	rbx, r15
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB99_7
	lea	rsi, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hfb786e3748f8012eE
LBB99_9:
	movaps	xmm12, xmmword ptr [rsp + 256]
	movaps	xmm13, xmmword ptr [rsp + 272]
	movaps	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmm8, xmmword ptr [rsp + 368]
	movaps	xmm9, xmmword ptr [rsp + 352]
	movaps	xmm10, xmmword ptr [rsp + 336]
	movaps	xmm11, xmmword ptr [rsp + 320]
	pxor	xmm1, xmm1
	xorps	xmm4, xmm4
	xorps	xmm5, xmm5
	xorps	xmm6, xmm6
	xorps	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 184]
	.p2align	4, 0x90
LBB99_10:
	addps	xmm7, xmm3
	addps	xmm6, xmm2
	addps	xmm5, xmm13
	addps	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 240], xmm1
	cmp	byte ptr [rsp + 240], 0
	movdqa	xmm1, xmm0
	jne	LBB99_10
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB99_12:
	addps	xmm7, xmm8
	addps	xmm6, xmm9
	addps	xmm5, xmm10
	addps	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 224], xmm1
	cmp	byte ptr [rsp + 224], 0
	movdqa	xmm1, xmm0
	jne	LBB99_12
	movaps	xmmword ptr [rax], xmm4
	movaps	xmmword ptr [rax + 16], xmm5
	movaps	xmmword ptr [rax + 32], xmm6
	movaps	xmmword ptr [rax + 48], xmm7
	jmp	LBB99_25
LBB99_16:
	xorps	xmm8, xmm8
	xorps	xmm9, xmm9
	xorps	xmm2, xmm2
	xorps	xmm3, xmm3
LBB99_20:
	movdqa	xmm0, xmm4
	.p2align	4, 0x90
LBB99_21:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 208], xmm4
	cmp	byte ptr [rsp + 208], 0
	movdqa	xmm4, xmm0
	jne	LBB99_21
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	xorps	xmm5, xmm5
	xorps	xmm6, xmm6
	xorps	xmm7, xmm7
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB99_23:
	addps	xmm7, xmm3
	addps	xmm6, xmm2
	addps	xmm5, xmm9
	addps	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 192], xmm1
	cmp	byte ptr [rsp + 192], 0
	movdqa	xmm1, xmm0
	jne	LBB99_23
	movaps	xmmword ptr [r14], xmm4
	movaps	xmmword ptr [r14 + 16], xmm5
	movaps	xmmword ptr [r14 + 32], xmm6
	movaps	xmmword ptr [r14 + 48], xmm7
LBB99_25:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB99_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	sub	rsi, -128
	lea	rdx, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	rdi, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17he859dcff4c8c1631E
	jmp	LBB99_9
LBB99_30:
	lea	rdi, [rip + l___unnamed_23]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 35
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB99_29:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB99_27:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB99_28:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h9d5f279b65cc3217E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 216
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r14, r9
	mov	r15, r8
	mov	rbx, rdi
	mov	qword ptr [rbp - 104], rdi
	mov	qword ptr [rbp - 120], rdx
	mov	qword ptr [rbp - 112], rcx
	shr	rbx
	cmp	rbx, rcx
	jae	LBB100_12
LBB100_1:
	lea	rax, [8*r14]
	test	rax, rax
	je	LBB100_18
	lea	r13, [8*r14 - 8]
	shr	r13, 3
	inc	r13
	mov	rbx, r15
	cmp	r13, 2
	jb	LBB100_10
	mov	rax, r13
	and	rax, -2
	mov	qword ptr [rbp - 232], rax
	lea	rcx, [rax - 2]
	mov	rax, rcx
	shr	rax
	inc	rax
	mov	r12d, eax
	and	r12d, 1
	test	rcx, rcx
	mov	qword ptr [rbp - 224], r12
	je	LBB100_22
	sub	r12, rax
	xor	ebx, ebx
	.p2align	4, 0x90
LBB100_5:
	movups	xmm1, xmmword ptr [r15 + 8*rbx]
	movaps	xmmword ptr [rbp - 96], xmm1
	movups	xmm0, xmmword ptr [r15 + 8*rbx + 16]
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmm1
	call	_cos
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	movhlps	xmm0, xmm0
	movaps	xmmword ptr [rbp - 256], xmm0
	call	_cos
	movaps	xmm1, xmmword ptr [rbp - 64]
	movlhps	xmm1, xmm0
	movaps	xmmword ptr [rbp - 64], xmm1
	movaps	xmm0, xmmword ptr [rbp - 96]
	call	_sin
	movaps	xmmword ptr [rbp - 96], xmm0
	movapd	xmm0, xmmword ptr [rbp - 256]
	call	_sin
	movapd	xmm1, xmmword ptr [rbp - 96]
	unpcklpd	xmm1, xmm0
	movapd	xmm0, xmmword ptr [rbp - 64]
	divpd	xmm0, xmm1
	movupd	xmmword ptr [r15 + 8*rbx], xmm0
	movaps	xmm0, xmmword ptr [rbp - 80]
	call	_cos
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 80]
	movhlps	xmm0, xmm0
	movaps	xmmword ptr [rbp - 96], xmm0
	call	_cos
	movaps	xmm1, xmmword ptr [rbp - 64]
	movlhps	xmm1, xmm0
	movaps	xmmword ptr [rbp - 64], xmm1
	movaps	xmm0, xmmword ptr [rbp - 80]
	call	_sin
	movaps	xmmword ptr [rbp - 80], xmm0
	movapd	xmm0, xmmword ptr [rbp - 96]
	call	_sin
	movapd	xmm1, xmmword ptr [rbp - 80]
	unpcklpd	xmm1, xmm0
	movapd	xmm0, xmmword ptr [rbp - 64]
	divpd	xmm0, xmm1
	movupd	xmmword ptr [r15 + 8*rbx + 16], xmm0
	add	rbx, 4
	add	r12, 2
	jne	LBB100_5
	cmp	qword ptr [rbp - 224], 0
	je	LBB100_8
LBB100_7:
	movups	xmm0, xmmword ptr [r15 + 8*rbx]
	movaps	xmmword ptr [rbp - 64], xmm0
	call	_cos
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	movhlps	xmm0, xmm0
	movaps	xmmword ptr [rbp - 96], xmm0
	call	_cos
	movaps	xmm1, xmmword ptr [rbp - 80]
	movlhps	xmm1, xmm0
	movaps	xmmword ptr [rbp - 80], xmm1
	movaps	xmm0, xmmword ptr [rbp - 64]
	call	_sin
	movaps	xmmword ptr [rbp - 64], xmm0
	movapd	xmm0, xmmword ptr [rbp - 96]
	call	_sin
	movapd	xmm1, xmmword ptr [rbp - 64]
	unpcklpd	xmm1, xmm0
	movapd	xmm0, xmmword ptr [rbp - 80]
	divpd	xmm0, xmm1
	movupd	xmmword ptr [r15 + 8*rbx], xmm0
LBB100_8:
	mov	rax, qword ptr [rbp - 232]
	cmp	r13, rax
	je	LBB100_18
	lea	rbx, [r15 + 8*rax]
LBB100_10:
	lea	r14, [r15 + 8*r14]
	.p2align	4, 0x90
LBB100_11:
	movsd	xmm0, qword ptr [rbx]
	movsd	qword ptr [rbp - 64], xmm0
	call	_cos
	movsd	qword ptr [rbp - 80], xmm0
	movsd	xmm0, qword ptr [rbp - 64]
	call	_sin
	movsd	xmm1, qword ptr [rbp - 80]
	divsd	xmm1, xmm0
	movsd	qword ptr [rbx], xmm1
	add	rbx, 8
	cmp	r14, rbx
	jne	LBB100_11
	jmp	LBB100_18
LBB100_12:
	test	sil, sil
	je	LBB100_19
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 120]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	rbx, qword ptr [rbp - 104]
	shr	rbx
	mov	qword ptr [rbp - 120], rdx
	mov	qword ptr [rbp - 128], rbx
	cmp	rbx, r14
	ja	LBB100_21
LBB100_14:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB100_24
	mov	r12, qword ptr [rbp + 16]
	lea	r13, [r15 + 8*rbx]
	sub	r14, rbx
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB100_23
	lea	rdi, [rbp - 216]
	lea	rax, [rbp - 104]
	mov	qword ptr [rbp - 216], rax
	lea	rax, [rbp - 128]
	mov	qword ptr [rbp - 208], rax
	lea	rcx, [rbp - 120]
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], r13
	mov	qword ptr [rbp - 184], r14
	mov	qword ptr [rbp - 176], r12
	mov	qword ptr [rbp - 168], rax
	mov	qword ptr [rbp - 160], rcx
	mov	qword ptr [rbp - 152], r15
	mov	qword ptr [rbp - 144], rbx
	mov	qword ptr [rbp - 136], r12
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9495025b2b50f61eE
LBB100_17:
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
LBB100_18:
	add	rsp, 216
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB100_19:
	test	rdx, rdx
	je	LBB100_1
	shr	rdx
	mov	qword ptr [rbp - 120], rdx
	mov	qword ptr [rbp - 128], rbx
	cmp	rbx, r14
	jbe	LBB100_14
LBB100_21:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB100_22:
	xor	ebx, ebx
	cmp	qword ptr [rbp - 224], 0
	jne	LBB100_7
	jmp	LBB100_8
LBB100_23:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 216]
	lea	rax, [rbp - 104]
	mov	qword ptr [rbp - 216], rax
	lea	rax, [rbp - 128]
	mov	qword ptr [rbp - 208], rax
	lea	rcx, [rbp - 120]
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], r13
	mov	qword ptr [rbp - 184], r14
	mov	qword ptr [rbp - 176], r12
	mov	qword ptr [rbp - 168], rax
	mov	qword ptr [rbp - 160], rcx
	mov	qword ptr [rbp - 152], r15
	mov	qword ptr [rbp - 144], rbx
	mov	qword ptr [rbp - 136], r12
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hd665e6da74d568c9E
	jmp	LBB100_17
LBB100_24:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 216]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17ha2f99a0eebe114e4E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 576
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r13, r9
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 120], r8
	shr	rsi
	cmp	rsi, r8
	mov	qword ptr [rsp + 104], rdi
	jae	LBB101_1
LBB101_14:
	mov	r9, qword ptr [r13]
	test	r9, r9
	je	LBB101_40
	mov	r14, qword ptr [r13 + 32]
	test	r14, r14
	je	LBB101_40
	mov	r15, qword ptr [r13 + 8]
	mov	r10, qword ptr [r13 + 16]
	mov	r12, qword ptr [r13 + 40]
	mov	r11, qword ptr [r13 + 48]
	test	r10, r10
	je	LBB101_17
	mov	rax, r10
	xor	edx, edx
	div	r9
	mov	rcx, rax
	cmp	rdx, 1
	sbb	rcx, -1
	test	r11, r11
	je	LBB101_20
LBB101_21:
	mov	rax, r11
	xor	edx, edx
	div	r14
	cmp	rdx, 1
	sbb	rax, -1
	jmp	LBB101_22
LBB101_1:
	test	dl, dl
	je	LBB101_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 112]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB101_4
LBB101_2:
	test	rcx, rcx
	je	LBB101_14
	shr	rcx
LBB101_4:
	mov	qword ptr [rsp + 112], rcx
	mov	qword ptr [rsp + 128], rsi
	mov	rcx, qword ptr [r13]
	mov	rax, rsi
	mul	rcx
	jo	LBB101_38
	mov	r15, rax
	mov	qword ptr [rsp + 88], rcx
	mov	rbx, qword ptr [r13 + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	mov	rcx, qword ptr [r13 + 32]
	mov	rax, rsi
	mov	qword ptr [rsp + 80], rcx
	mul	rcx
	jo	LBB101_38
	mov	r12, rax
	mov	rax, qword ptr [r13 + 8]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [r13 + 24]
	mov	qword ptr [rsp + 64], rax
	mov	rax, qword ptr [r13 + 40]
	mov	qword ptr [rsp + 40], rax
	mov	r14, qword ptr [r13 + 48]
	mov	rax, qword ptr [r13 + 56]
	mov	qword ptr [rsp + 72], rax
	cmp	r12, r14
	cmova	r12, r14
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB101_39
	mov	r11, qword ptr [rbp + 16]
	mov	rcx, qword ptr [rsp + 96]
	lea	r13, [rcx + 4*r15]
	sub	rbx, r15
	mov	r10, qword ptr [rsp + 40]
	lea	rdx, [r10 + 4*r12]
	mov	qword ptr [rsp + 56], rdx
	sub	r14, r12
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB101_8
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rsi, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rsi
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	qword ptr [rsp + 224], r11
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rsi
	mov	qword ptr [rsp + 256], rcx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 288], r10
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	mov	qword ptr [rsp + 312], r11
	lea	rsi, [rsp + 136]
	lea	rdi, [rsp + 384]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h4f66ac2b113b268bE
LBB101_10:
	movaps	xmm12, xmmword ptr [rsp + 384]
	movaps	xmm13, xmmword ptr [rsp + 400]
	movaps	xmm2, xmmword ptr [rsp + 416]
	movaps	xmm3, xmmword ptr [rsp + 432]
	movaps	xmm8, xmmword ptr [rsp + 496]
	movaps	xmm9, xmmword ptr [rsp + 480]
	movaps	xmm10, xmmword ptr [rsp + 464]
	movaps	xmm11, xmmword ptr [rsp + 448]
	pxor	xmm1, xmm1
	xorps	xmm4, xmm4
	xorps	xmm5, xmm5
	xorps	xmm6, xmm6
	xorps	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB101_11:
	addps	xmm7, xmm3
	addps	xmm6, xmm2
	addps	xmm5, xmm13
	addps	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 368], xmm1
	cmp	byte ptr [rsp + 368], 0
	movdqa	xmm1, xmm0
	jne	LBB101_11
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB101_13:
	addps	xmm7, xmm8
	addps	xmm6, xmm9
	addps	xmm5, xmm10
	addps	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 352], xmm1
	cmp	byte ptr [rsp + 352], 0
	movdqa	xmm1, xmm0
	jne	LBB101_13
	jmp	LBB101_29
LBB101_17:
	xor	ecx, ecx
	test	r11, r11
	jne	LBB101_21
LBB101_20:
	xor	eax, eax
LBB101_22:
	cmp	rcx, rax
	cmova	rcx, rax
	test	rcx, rcx
	mov	qword ptr [rsp + 40], rcx
	xorps	xmm8, xmm8
	je	LBB101_23
	xor	edi, edi
	mov	r13, rcx
	mov	rdx, r9
	mov	rbx, r14
	mov	r8d, 0
	xorps	xmm9, xmm9
	xorps	xmm2, xmm2
	xorps	xmm3, xmm3
	xor	ecx, ecx
	.p2align	4, 0x90
LBB101_31:
	lea	rax, [rdi + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	rcx, r9
	cmovb	rax, r10
	sub	rdx, r9
	add	rax, rdx
	cmp	rax, 15
	jbe	LBB101_36
	sub	rbx, r14
	lea	rax, [r8 + r14]
	cmp	rax, r11
	cmova	rax, r11
	mov	rsi, r8
	add	rsi, r14
	cmovb	rax, r11
	add	rax, rbx
	cmp	rax, 15
	jbe	LBB101_36
	movups	xmm0, xmmword ptr [r15 + 4*rdi]
	movups	xmm1, xmmword ptr [r15 + 4*rdi + 16]
	movups	xmm4, xmmword ptr [r15 + 4*rdi + 32]
	movups	xmm5, xmmword ptr [r15 + 4*rdi + 48]
	movups	xmm6, xmmword ptr [r12 + 4*r8]
	mulps	xmm6, xmm0
	addps	xmm8, xmm6
	movups	xmm0, xmmword ptr [r12 + 4*r8 + 16]
	mulps	xmm0, xmm1
	addps	xmm9, xmm0
	movups	xmm0, xmmword ptr [r12 + 4*r8 + 32]
	mulps	xmm0, xmm4
	addps	xmm2, xmm0
	movups	xmm0, xmmword ptr [r12 + 4*r8 + 48]
	lea	r8, [r8 + r14]
	mulps	xmm0, xmm5
	addps	xmm3, xmm0
	mov	rdi, rcx
	dec	r13
	jne	LBB101_31
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	jne	LBB101_34
	jmp	LBB101_25
LBB101_23:
	xorps	xmm9, xmm9
	xorps	xmm2, xmm2
	xorps	xmm3, xmm3
	test	r10, r10
	mov	rcx, qword ptr [rsp + 40]
	je	LBB101_25
LBB101_34:
	mov	rax, r10
	xor	edx, edx
	div	r9
	cmp	rdx, 1
	sbb	rax, -1
	cmp	rcx, rax
	jae	LBB101_25
	imul	rcx, r9
	lea	rax, [rcx + r9]
	cmp	rax, r10
	cmova	rax, r10
	add	r9, rcx
	cmovb	rax, r10
	sub	rax, rcx
	cmp	rax, 15
	jbe	LBB101_36
LBB101_25:
	xorps	xmm1, xmm1
	movaps	xmm0, xmm1
	.p2align	4, 0x90
LBB101_26:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movaps	xmmword ptr [rsp + 336], xmm1
	cmp	byte ptr [rsp + 336], 0
	movdqa	xmm1, xmm0
	jne	LBB101_26
	xorps	xmm1, xmm1
	xorps	xmm4, xmm4
	xorps	xmm5, xmm5
	xorps	xmm6, xmm6
	xorps	xmm7, xmm7
	movaps	xmm0, xmm1
	mov	rax, qword ptr [rsp + 104]
	.p2align	4, 0x90
LBB101_28:
	addps	xmm7, xmm3
	addps	xmm6, xmm2
	addps	xmm5, xmm9
	addps	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movaps	xmmword ptr [rsp + 320], xmm1
	cmp	byte ptr [rsp + 320], 0
	movdqa	xmm1, xmm0
	jne	LBB101_28
LBB101_29:
	movaps	xmmword ptr [rax], xmm4
	movaps	xmmword ptr [rax + 16], xmm5
	movaps	xmmword ptr [rax + 32], xmm6
	movaps	xmmword ptr [rax + 48], xmm7
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB101_8:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 136], rax
	lea	r8, [rsp + 128]
	mov	qword ptr [rsp + 144], r8
	lea	r9, [rsp + 112]
	mov	qword ptr [rsp + 152], r9
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 160], rdx
	mov	qword ptr [rsp + 168], r13
	mov	qword ptr [rsp + 176], rbx
	mov	rax, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 184], rax
	mov	rdi, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 192], rdi
	mov	rbx, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 200], rbx
	mov	qword ptr [rsp + 208], r14
	mov	rbx, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 216], rbx
	mov	rcx, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 224], rcx
	mov	qword ptr [rsp + 232], r8
	mov	qword ptr [rsp + 240], r9
	mov	qword ptr [rsp + 248], rdx
	mov	rdx, qword ptr [rsp + 96]
	mov	qword ptr [rsp + 256], rdx
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rax
	mov	qword ptr [rsp + 280], rdi
	mov	rax, qword ptr [rsp + 40]
	mov	qword ptr [rsp + 288], rax
	mov	qword ptr [rsp + 296], r12
	mov	qword ptr [rsp + 304], rbx
	sub	rsi, -128
	mov	qword ptr [rsp + 312], rcx
	lea	rdx, [rsp + 136]
	lea	rdi, [rsp + 384]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hd37630529838198dE
	jmp	LBB101_10
LBB101_36:
	lea	rdi, [rip + l___unnamed_23]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 35
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB101_40:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB101_38:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB101_39:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 136]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hc0f93965f531a381E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, r9
	mov	r14, rdi
	mov	qword ptr [rsp + 32], rsi
	mov	qword ptr [rsp + 40], rcx
	mov	qword ptr [rsp + 48], r8
	shr	rsi
	cmp	rsi, r8
	jae	LBB102_1
LBB102_14:
	mov	rax, qword ptr [rbx]
	test	rax, rax
	je	LBB102_29
	mov	rcx, qword ptr [rbx + 16]
	pxor	xmm4, xmm4
	test	rcx, rcx
	je	LBB102_16
	mov	rdx, qword ptr [rbx + 8]
	xorpd	xmm8, xmm8
	xorpd	xmm9, xmm9
	xorpd	xmm2, xmm2
	xorpd	xmm3, xmm3
	.p2align	4, 0x90
LBB102_18:
	cmp	rcx, rax
	mov	rsi, rcx
	cmova	rsi, rax
	cmp	rsi, 7
	jbe	LBB102_30
	movupd	xmm0, xmmword ptr [rdx]
	movupd	xmm1, xmmword ptr [rdx + 16]
	movupd	xmm5, xmmword ptr [rdx + 32]
	movupd	xmm6, xmmword ptr [rdx + 48]
	lea	rdx, [rdx + 8*rsi]
	mulpd	xmm6, xmm6
	addpd	xmm3, xmm6
	mulpd	xmm0, xmm0
	addpd	xmm8, xmm0
	mulpd	xmm1, xmm1
	addpd	xmm9, xmm1
	mulpd	xmm5, xmm5
	addpd	xmm2, xmm5
	sub	rcx, rsi
	jne	LBB102_18
	jmp	LBB102_20
LBB102_1:
	test	dl, dl
	je	LBB102_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 40]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 32]
	shr	rsi
	jmp	LBB102_4
LBB102_2:
	test	rcx, rcx
	je	LBB102_14
	shr	rcx
LBB102_4:
	mov	qword ptr [rsp + 40], rcx
	mov	qword ptr [rsp + 56], rsi
	mov	r12, qword ptr [rbx]
	mov	rax, rsi
	mul	r12
	jo	LBB102_27
	mov	r15, rax
	mov	qword ptr [rsp + 184], r14
	mov	r13, qword ptr [rbx + 8]
	mov	rbx, qword ptr [rbx + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB102_28
	mov	r8, qword ptr [rbp + 24]
	mov	rdi, qword ptr [rbp + 16]
	lea	r14, [r13 + 8*r15]
	sub	rbx, r15
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB102_7
	lea	rsi, [rsp + 64]
	lea	rax, [rsp + 32]
	mov	qword ptr [rsp + 64], rax
	lea	rax, [rsp + 56]
	mov	qword ptr [rsp + 72], rax
	lea	rcx, [rsp + 40]
	mov	qword ptr [rsp + 80], rcx
	mov	qword ptr [rsp + 88], r12
	mov	qword ptr [rsp + 96], r14
	mov	qword ptr [rsp + 104], rbx
	mov	qword ptr [rsp + 112], rdi
	mov	qword ptr [rsp + 120], r8
	mov	qword ptr [rsp + 128], rax
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 144], r12
	mov	qword ptr [rsp + 152], r13
	mov	qword ptr [rsp + 160], r15
	mov	qword ptr [rsp + 168], rdi
	mov	qword ptr [rsp + 176], r8
	lea	rdi, [rsp + 256]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h1585a60d47833e4bE
LBB102_9:
	movapd	xmm12, xmmword ptr [rsp + 256]
	movapd	xmm13, xmmword ptr [rsp + 272]
	movapd	xmm2, xmmword ptr [rsp + 288]
	movapd	xmm3, xmmword ptr [rsp + 304]
	movapd	xmm8, xmmword ptr [rsp + 368]
	movapd	xmm9, xmmword ptr [rsp + 352]
	movapd	xmm10, xmmword ptr [rsp + 336]
	movapd	xmm11, xmmword ptr [rsp + 320]
	pxor	xmm1, xmm1
	xorpd	xmm4, xmm4
	xorpd	xmm5, xmm5
	xorpd	xmm6, xmm6
	xorpd	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 184]
	.p2align	4, 0x90
LBB102_10:
	addpd	xmm7, xmm3
	addpd	xmm6, xmm2
	addpd	xmm5, xmm13
	addpd	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 240], xmm1
	cmp	byte ptr [rsp + 240], 0
	movdqa	xmm1, xmm0
	jne	LBB102_10
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB102_12:
	addpd	xmm7, xmm8
	addpd	xmm6, xmm9
	addpd	xmm5, xmm10
	addpd	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 224], xmm1
	cmp	byte ptr [rsp + 224], 0
	movdqa	xmm1, xmm0
	jne	LBB102_12
	movapd	xmmword ptr [rax], xmm4
	movapd	xmmword ptr [rax + 16], xmm5
	movapd	xmmword ptr [rax + 32], xmm6
	movapd	xmmword ptr [rax + 48], xmm7
	jmp	LBB102_25
LBB102_16:
	xorpd	xmm8, xmm8
	xorpd	xmm9, xmm9
	xorpd	xmm2, xmm2
	xorpd	xmm3, xmm3
LBB102_20:
	movdqa	xmm0, xmm4
	.p2align	4, 0x90
LBB102_21:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 208], xmm4
	cmp	byte ptr [rsp + 208], 0
	movdqa	xmm4, xmm0
	jne	LBB102_21
	xorpd	xmm1, xmm1
	pxor	xmm4, xmm4
	xorpd	xmm5, xmm5
	xorpd	xmm6, xmm6
	xorpd	xmm7, xmm7
	movapd	xmm0, xmm1
	.p2align	4, 0x90
LBB102_23:
	addpd	xmm7, xmm3
	addpd	xmm6, xmm2
	addpd	xmm5, xmm9
	addpd	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movapd	xmmword ptr [rsp + 192], xmm1
	cmp	byte ptr [rsp + 192], 0
	movdqa	xmm1, xmm0
	jne	LBB102_23
	movapd	xmmword ptr [r14], xmm4
	movapd	xmmword ptr [r14 + 16], xmm5
	movapd	xmmword ptr [r14 + 32], xmm6
	movapd	xmmword ptr [r14 + 48], xmm7
LBB102_25:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB102_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	sub	rsi, -128
	lea	rdx, [rsp + 64]
	lea	rax, [rsp + 32]
	mov	qword ptr [rsp + 64], rax
	lea	rax, [rsp + 56]
	mov	qword ptr [rsp + 72], rax
	lea	rcx, [rsp + 40]
	mov	qword ptr [rsp + 80], rcx
	mov	qword ptr [rsp + 88], r12
	mov	qword ptr [rsp + 96], r14
	mov	qword ptr [rsp + 104], rbx
	mov	rbx, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 112], rbx
	mov	rdi, qword ptr [rbp + 24]
	mov	qword ptr [rsp + 120], rdi
	mov	qword ptr [rsp + 128], rax
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 144], r12
	mov	qword ptr [rsp + 152], r13
	mov	qword ptr [rsp + 160], r15
	mov	qword ptr [rsp + 168], rbx
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h3b06a2fb2fb461dfE
	jmp	LBB102_9
LBB102_30:
	lea	rdi, [rip + l___unnamed_19]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 34
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB102_29:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB102_27:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB102_28:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hce15a800f10f4e33E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, r9
	mov	r14, rdi
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 64], r8
	shr	rsi
	cmp	rsi, r8
	jae	LBB103_1
LBB103_14:
	mov	rax, qword ptr [rbx]
	test	rax, rax
	je	LBB103_29
	mov	rcx, qword ptr [rbx + 16]
	pxor	xmm4, xmm4
	test	rcx, rcx
	je	LBB103_16
	mov	rdx, qword ptr [rbx + 8]
	pxor	xmm8, xmm8
	pxor	xmm9, xmm9
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	.p2align	4, 0x90
LBB103_18:
	cmp	rcx, rax
	mov	rsi, rcx
	cmova	rsi, rax
	cmp	rsi, 7
	jbe	LBB103_30
	movdqu	xmm0, xmmword ptr [rdx]
	paddq	xmm8, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 16]
	paddq	xmm9, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 32]
	paddq	xmm2, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 48]
	lea	rdx, [rdx + 8*rsi]
	paddq	xmm3, xmm0
	sub	rcx, rsi
	jne	LBB103_18
	jmp	LBB103_20
LBB103_1:
	test	dl, dl
	je	LBB103_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 56]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB103_4
LBB103_2:
	test	rcx, rcx
	je	LBB103_14
	shr	rcx
LBB103_4:
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 72], rsi
	mov	r12, qword ptr [rbx]
	mov	rax, rsi
	mul	r12
	jo	LBB103_27
	mov	r15, rax
	mov	qword ptr [rsp + 184], r14
	mov	r13, qword ptr [rbx + 8]
	mov	rbx, qword ptr [rbx + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB103_28
	mov	rdi, qword ptr [rbp + 16]
	lea	r14, [r13 + 8*r15]
	sub	rbx, r15
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB103_7
	lea	rsi, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hd467aaba5ed10466E
LBB103_9:
	movdqa	xmm12, xmmword ptr [rsp + 256]
	movdqa	xmm13, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movdqa	xmm3, xmmword ptr [rsp + 304]
	movdqa	xmm8, xmmword ptr [rsp + 368]
	movdqa	xmm9, xmmword ptr [rsp + 352]
	movdqa	xmm10, xmmword ptr [rsp + 336]
	movdqa	xmm11, xmmword ptr [rsp + 320]
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 184]
	.p2align	4, 0x90
LBB103_10:
	paddq	xmm7, xmm3
	paddq	xmm6, xmm2
	paddq	xmm5, xmm13
	paddq	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 240], xmm1
	cmp	byte ptr [rsp + 240], 0
	movdqa	xmm1, xmm0
	jne	LBB103_10
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB103_12:
	paddq	xmm7, xmm8
	paddq	xmm6, xmm9
	paddq	xmm5, xmm10
	paddq	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 224], xmm1
	cmp	byte ptr [rsp + 224], 0
	movdqa	xmm1, xmm0
	jne	LBB103_12
	movdqa	xmmword ptr [rax], xmm4
	movdqa	xmmword ptr [rax + 16], xmm5
	movdqa	xmmword ptr [rax + 32], xmm6
	movdqa	xmmword ptr [rax + 48], xmm7
	jmp	LBB103_25
LBB103_16:
	pxor	xmm8, xmm8
	pxor	xmm9, xmm9
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
LBB103_20:
	movdqa	xmm0, xmm4
	.p2align	4, 0x90
LBB103_21:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 208], xmm4
	cmp	byte ptr [rsp + 208], 0
	movdqa	xmm4, xmm0
	jne	LBB103_21
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB103_23:
	paddq	xmm7, xmm3
	paddq	xmm6, xmm2
	paddq	xmm5, xmm9
	paddq	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 192], xmm1
	cmp	byte ptr [rsp + 192], 0
	movdqa	xmm1, xmm0
	jne	LBB103_23
	movdqa	xmmword ptr [r14], xmm4
	movdqa	xmmword ptr [r14 + 16], xmm5
	movdqa	xmmword ptr [r14 + 32], xmm6
	movdqa	xmmword ptr [r14 + 48], xmm7
LBB103_25:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB103_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	sub	rsi, -128
	lea	rdx, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	rdi, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h0f22171cf420b7edE
	jmp	LBB103_9
LBB103_30:
	lea	rdi, [rip + l___unnamed_19]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 34
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB103_29:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB103_27:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB103_28:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hd00cebf084920e92E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 248
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r14, r9
	mov	r15, r8
	mov	rbx, rdi
	mov	qword ptr [rbp - 120], rdi
	mov	qword ptr [rbp - 160], rdx
	mov	qword ptr [rbp - 152], rcx
	shr	rbx
	cmp	rbx, rcx
	jae	LBB104_1
LBB104_10:
	lea	rax, [4*r14]
	test	rax, rax
	je	LBB104_23
	lea	rdx, [4*r14 - 4]
	shr	rdx, 2
	inc	rdx
	mov	rbx, r15
	cmp	rdx, 4
	jb	LBB104_21
	mov	rsi, rdx
	and	rsi, -4
	lea	rcx, [rsi - 4]
	mov	rax, rcx
	shr	rax, 2
	inc	rax
	mov	r13d, eax
	and	r13d, 3
	cmp	rcx, 12
	mov	qword ptr [rbp - 272], rdx
	mov	qword ptr [rbp - 264], rsi
	jae	LBB104_14
	xor	r12d, r12d
	test	r13, r13
	jne	LBB104_17
	jmp	LBB104_19
LBB104_1:
	test	sil, sil
	je	LBB104_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 160]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	rbx, qword ptr [rbp - 120]
	shr	rbx
	mov	qword ptr [rbp - 160], rdx
	mov	qword ptr [rbp - 168], rbx
	cmp	rbx, r14
	ja	LBB104_25
LBB104_5:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB104_26
	mov	r12, qword ptr [rbp + 16]
	lea	r13, [r15 + 4*rbx]
	sub	r14, rbx
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB104_7
	lea	rdi, [rbp - 256]
	lea	rax, [rbp - 120]
	mov	qword ptr [rbp - 256], rax
	lea	rax, [rbp - 168]
	mov	qword ptr [rbp - 248], rax
	lea	rcx, [rbp - 160]
	mov	qword ptr [rbp - 240], rcx
	mov	qword ptr [rbp - 232], r13
	mov	qword ptr [rbp - 224], r14
	mov	qword ptr [rbp - 216], r12
	mov	qword ptr [rbp - 208], rax
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], r15
	mov	qword ptr [rbp - 184], rbx
	mov	qword ptr [rbp - 176], r12
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h0e4d76409498170dE
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB104_23
LBB104_2:
	test	rdx, rdx
	je	LBB104_10
	shr	rdx
	mov	qword ptr [rbp - 160], rdx
	mov	qword ptr [rbp - 168], rbx
	cmp	rbx, r14
	jbe	LBB104_5
LBB104_25:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB104_14:
	mov	rbx, r13
	sub	rbx, rax
	xor	r12d, r12d
	.p2align	4, 0x90
LBB104_15:
	movups	xmm1, xmmword ptr [r15 + 4*r12]
	movaps	xmmword ptr [rbp - 96], xmm1
	movups	xmm0, xmmword ptr [r15 + 4*r12 + 16]
	movaps	xmmword ptr [rbp - 64], xmm0
	movups	xmm0, xmmword ptr [r15 + 4*r12 + 32]
	movaps	xmmword ptr [rbp - 80], xmm0
	movups	xmm0, xmmword ptr [r15 + 4*r12 + 48]
	movaps	xmmword ptr [rbp - 112], xmm0
	movaps	xmm0, xmm1
	shufps	xmm0, xmm1, 231
	call	_sinf
	movaps	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	movhlps	xmm0, xmm0
	call	_sinf
	unpcklps	xmm0, xmmword ptr [rbp - 144]
	movaps	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	call	_sinf
	movaps	xmmword ptr [rbp - 288], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 96]
	call	_sinf
	movaps	xmm1, xmmword ptr [rbp - 288]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 144]
	movups	xmmword ptr [r15 + 4*r12], xmm1
	movaps	xmm0, xmmword ptr [rbp - 64]
	shufps	xmm0, xmm0, 231
	call	_sinf
	movaps	xmmword ptr [rbp - 96], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	movhlps	xmm0, xmm0
	call	_sinf
	unpcklps	xmm0, xmmword ptr [rbp - 96]
	movaps	xmmword ptr [rbp - 96], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	call	_sinf
	movaps	xmmword ptr [rbp - 144], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 64]
	call	_sinf
	movaps	xmm1, xmmword ptr [rbp - 144]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 96]
	movups	xmmword ptr [r15 + 4*r12 + 16], xmm1
	movaps	xmm0, xmmword ptr [rbp - 80]
	shufps	xmm0, xmm0, 231
	call	_sinf
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 80]
	movhlps	xmm0, xmm0
	call	_sinf
	unpcklps	xmm0, xmmword ptr [rbp - 64]
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 80]
	call	_sinf
	movaps	xmmword ptr [rbp - 96], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 80]
	call	_sinf
	movaps	xmm1, xmmword ptr [rbp - 96]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 64]
	movups	xmmword ptr [r15 + 4*r12 + 32], xmm1
	movaps	xmm0, xmmword ptr [rbp - 112]
	shufps	xmm0, xmm0, 231
	call	_sinf
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	movhlps	xmm0, xmm0
	call	_sinf
	unpcklps	xmm0, xmmword ptr [rbp - 80]
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_sinf
	movaps	xmmword ptr [rbp - 64], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 112]
	call	_sinf
	movaps	xmm1, xmmword ptr [rbp - 64]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 80]
	movups	xmmword ptr [r15 + 4*r12 + 48], xmm1
	add	r12, 16
	add	rbx, 4
	jne	LBB104_15
	test	r13, r13
	je	LBB104_19
LBB104_17:
	lea	rbx, [r15 + 4*r12]
	neg	r13
	.p2align	4, 0x90
LBB104_18:
	movups	xmm0, xmmword ptr [rbx]
	movaps	xmmword ptr [rbp - 112], xmm0
	shufps	xmm0, xmm0, 231
	call	_sinf
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	movhlps	xmm0, xmm0
	call	_sinf
	unpcklps	xmm0, xmmword ptr [rbp - 80]
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_sinf
	movaps	xmmword ptr [rbp - 64], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 112]
	call	_sinf
	movaps	xmm1, xmmword ptr [rbp - 64]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 80]
	movups	xmmword ptr [rbx], xmm1
	add	rbx, 16
	inc	r13
	jne	LBB104_18
LBB104_19:
	mov	rax, qword ptr [rbp - 264]
	cmp	qword ptr [rbp - 272], rax
	je	LBB104_23
	lea	rbx, [r15 + 4*rax]
LBB104_21:
	lea	r14, [r15 + 4*r14]
	.p2align	4, 0x90
LBB104_22:
	movss	xmm0, dword ptr [rbx]
	call	_sinf
	movss	dword ptr [rbx], xmm0
	add	rbx, 4
	cmp	r14, rbx
	jne	LBB104_22
LBB104_23:
	add	rsp, 248
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB104_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 256]
	lea	rax, [rbp - 120]
	mov	qword ptr [rbp - 256], rax
	lea	rax, [rbp - 168]
	mov	qword ptr [rbp - 248], rax
	lea	rcx, [rbp - 160]
	mov	qword ptr [rbp - 240], rcx
	mov	qword ptr [rbp - 232], r13
	mov	qword ptr [rbp - 224], r14
	mov	qword ptr [rbp - 216], r12
	mov	qword ptr [rbp - 208], rax
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], r15
	mov	qword ptr [rbp - 184], rbx
	mov	qword ptr [rbp - 176], r12
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17he1846e8a3dffbdd8E
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB104_23
LBB104_26:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hddeecd8dd3b2af70E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 264
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r14, r9
	mov	r15, r8
	mov	rbx, rdi
	mov	qword ptr [rbp - 120], rdi
	mov	qword ptr [rbp - 176], rdx
	mov	qword ptr [rbp - 168], rcx
	shr	rbx
	cmp	rbx, rcx
	jae	LBB105_12
LBB105_1:
	lea	rax, [4*r14]
	test	rax, rax
	je	LBB105_18
	lea	r13, [4*r14 - 4]
	shr	r13, 2
	inc	r13
	mov	rbx, r15
	cmp	r13, 4
	jb	LBB105_10
	mov	rax, r13
	and	rax, -4
	mov	qword ptr [rbp - 288], rax
	lea	rcx, [rax - 4]
	mov	rax, rcx
	shr	rax, 2
	inc	rax
	mov	r12d, eax
	and	r12d, 1
	test	rcx, rcx
	mov	qword ptr [rbp - 280], r12
	je	LBB105_22
	sub	r12, rax
	xor	ebx, ebx
	.p2align	4, 0x90
LBB105_5:
	movups	xmm1, xmmword ptr [r15 + 4*rbx]
	movaps	xmmword ptr [rbp - 64], xmm1
	movups	xmm0, xmmword ptr [r15 + 4*rbx + 16]
	movaps	xmmword ptr [rbp - 96], xmm0
	movaps	xmm0, xmm1
	shufps	xmm0, xmm1, 231
	movaps	xmmword ptr [rbp - 112], xmm0
	call	_cosf
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	movhlps	xmm0, xmm0
	movaps	xmmword ptr [rbp - 160], xmm0
	call	_cosf
	unpcklps	xmm0, xmmword ptr [rbp - 80]
	movaps	xmmword ptr [rbp - 304], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	call	_cosf
	movaps	xmmword ptr [rbp - 80], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 64]
	movaps	xmmword ptr [rbp - 144], xmm0
	call	_cosf
	movaps	xmm1, xmmword ptr [rbp - 80]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 304]
	movaps	xmmword ptr [rbp - 80], xmm1
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_sinf
	movaps	xmmword ptr [rbp - 112], xmm0
	movaps	xmm0, xmmword ptr [rbp - 160]
	call	_sinf
	unpcklps	xmm0, xmmword ptr [rbp - 112]
	movaps	xmmword ptr [rbp - 112], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	call	_sinf
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 144]
	call	_sinf
	movaps	xmm1, xmmword ptr [rbp - 64]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 112]
	movaps	xmm0, xmmword ptr [rbp - 80]
	divps	xmm0, xmm1
	movups	xmmword ptr [r15 + 4*rbx], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	shufps	xmm0, xmm0, 231
	movaps	xmmword ptr [rbp - 80], xmm0
	call	_cosf
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	movhlps	xmm0, xmm0
	movaps	xmmword ptr [rbp - 112], xmm0
	call	_cosf
	unpcklps	xmm0, xmmword ptr [rbp - 64]
	movaps	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	call	_cosf
	movaps	xmmword ptr [rbp - 64], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 96]
	movaps	xmmword ptr [rbp - 160], xmm0
	call	_cosf
	movaps	xmm1, xmmword ptr [rbp - 64]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 144]
	movaps	xmmword ptr [rbp - 64], xmm1
	movaps	xmm0, xmmword ptr [rbp - 80]
	call	_sinf
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_sinf
	unpcklps	xmm0, xmmword ptr [rbp - 80]
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	call	_sinf
	movaps	xmmword ptr [rbp - 96], xmm0
	movaps	xmm0, xmmword ptr [rbp - 160]
	call	_sinf
	movaps	xmm1, xmmword ptr [rbp - 96]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 80]
	movaps	xmm0, xmmword ptr [rbp - 64]
	divps	xmm0, xmm1
	movups	xmmword ptr [r15 + 4*rbx + 16], xmm0
	add	rbx, 8
	add	r12, 2
	jne	LBB105_5
	cmp	qword ptr [rbp - 280], 0
	je	LBB105_8
LBB105_7:
	movups	xmm0, xmmword ptr [r15 + 4*rbx]
	movaps	xmmword ptr [rbp - 96], xmm0
	shufps	xmm0, xmm0, 231
	movaps	xmmword ptr [rbp - 80], xmm0
	call	_cosf
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	movhlps	xmm0, xmm0
	movaps	xmmword ptr [rbp - 112], xmm0
	call	_cosf
	unpcklps	xmm0, xmmword ptr [rbp - 64]
	movaps	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	call	_cosf
	movaps	xmmword ptr [rbp - 64], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 96]
	movaps	xmmword ptr [rbp - 160], xmm0
	call	_cosf
	movaps	xmm1, xmmword ptr [rbp - 64]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 144]
	movaps	xmmword ptr [rbp - 64], xmm1
	movaps	xmm0, xmmword ptr [rbp - 80]
	call	_sinf
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_sinf
	unpcklps	xmm0, xmmword ptr [rbp - 80]
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	call	_sinf
	movaps	xmmword ptr [rbp - 96], xmm0
	movaps	xmm0, xmmword ptr [rbp - 160]
	call	_sinf
	movaps	xmm1, xmmword ptr [rbp - 96]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 80]
	movaps	xmm0, xmmword ptr [rbp - 64]
	divps	xmm0, xmm1
	movups	xmmword ptr [r15 + 4*rbx], xmm0
LBB105_8:
	mov	rax, qword ptr [rbp - 288]
	cmp	r13, rax
	je	LBB105_18
	lea	rbx, [r15 + 4*rax]
LBB105_10:
	lea	r14, [r15 + 4*r14]
	.p2align	4, 0x90
LBB105_11:
	movss	xmm0, dword ptr [rbx]
	movss	dword ptr [rbp - 64], xmm0
	call	_cosf
	movss	dword ptr [rbp - 96], xmm0
	movss	xmm0, dword ptr [rbp - 64]
	call	_sinf
	movss	xmm1, dword ptr [rbp - 96]
	divss	xmm1, xmm0
	movss	dword ptr [rbx], xmm1
	add	rbx, 4
	cmp	r14, rbx
	jne	LBB105_11
	jmp	LBB105_18
LBB105_12:
	test	sil, sil
	je	LBB105_19
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 176]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	rbx, qword ptr [rbp - 120]
	shr	rbx
	mov	qword ptr [rbp - 176], rdx
	mov	qword ptr [rbp - 184], rbx
	cmp	rbx, r14
	ja	LBB105_21
LBB105_14:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB105_24
	mov	r12, qword ptr [rbp + 16]
	lea	r13, [r15 + 4*rbx]
	sub	r14, rbx
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB105_23
	lea	rdi, [rbp - 272]
	lea	rax, [rbp - 120]
	mov	qword ptr [rbp - 272], rax
	lea	rax, [rbp - 184]
	mov	qword ptr [rbp - 264], rax
	lea	rcx, [rbp - 176]
	mov	qword ptr [rbp - 256], rcx
	mov	qword ptr [rbp - 248], r13
	mov	qword ptr [rbp - 240], r14
	mov	qword ptr [rbp - 232], r12
	mov	qword ptr [rbp - 224], rax
	mov	qword ptr [rbp - 216], rcx
	mov	qword ptr [rbp - 208], r15
	mov	qword ptr [rbp - 200], rbx
	mov	qword ptr [rbp - 192], r12
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9ca205191000996dE
LBB105_17:
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
LBB105_18:
	add	rsp, 264
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB105_19:
	test	rdx, rdx
	je	LBB105_1
	shr	rdx
	mov	qword ptr [rbp - 176], rdx
	mov	qword ptr [rbp - 184], rbx
	cmp	rbx, r14
	jbe	LBB105_14
LBB105_21:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB105_22:
	xor	ebx, ebx
	cmp	qword ptr [rbp - 280], 0
	jne	LBB105_7
	jmp	LBB105_8
LBB105_23:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 272]
	lea	rax, [rbp - 120]
	mov	qword ptr [rbp - 272], rax
	lea	rax, [rbp - 184]
	mov	qword ptr [rbp - 264], rax
	lea	rcx, [rbp - 176]
	mov	qword ptr [rbp - 256], rcx
	mov	qword ptr [rbp - 248], r13
	mov	qword ptr [rbp - 240], r14
	mov	qword ptr [rbp - 232], r12
	mov	qword ptr [rbp - 224], rax
	mov	qword ptr [rbp - 216], rcx
	mov	qword ptr [rbp - 208], r15
	mov	qword ptr [rbp - 200], rbx
	mov	qword ptr [rbp - 192], r12
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hfe7d4a84d16130baE
	jmp	LBB105_17
LBB105_24:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 272]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17he2e0ed02bd580b5bE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 120
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r15, r9
	mov	r14, r8
	mov	rbx, rdi
	mov	r12, qword ptr [rbp + 16]
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 56], rcx
	shr	rbx
	cmp	rbx, rcx
	jae	LBB106_1
LBB106_10:
	lea	rax, [8*r15]
	test	rax, rax
	je	LBB106_18
	mov	rax, qword ptr [r12]
	lea	rdx, [8*r15 - 8]
	mov	esi, edx
	shr	esi, 3
	inc	esi
	and	rsi, 3
	je	LBB106_12
	neg	rsi
	mov	rcx, r14
	.p2align	4, 0x90
LBB106_14:
	movsd	xmm0, qword ptr [rcx]
	mov	rdi, qword ptr [rax]
	mulsd	xmm0, qword ptr [rdi]
	movsd	qword ptr [rcx], xmm0
	add	rcx, 8
	inc	rsi
	jne	LBB106_14
	cmp	rdx, 24
	jae	LBB106_16
	jmp	LBB106_18
LBB106_1:
	test	sil, sil
	je	LBB106_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 64]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	rbx, qword ptr [rbp - 48]
	shr	rbx
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rbx
	cmp	rbx, r15
	ja	LBB106_20
LBB106_5:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB106_21
	lea	r13, [r14 + 8*rbx]
	sub	r15, rbx
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB106_7
	lea	rdi, [rbp - 160]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 160], rax
	lea	rax, [rbp - 72]
	mov	qword ptr [rbp - 152], rax
	lea	rcx, [rbp - 64]
	mov	qword ptr [rbp - 144], rcx
	mov	qword ptr [rbp - 136], r13
	mov	qword ptr [rbp - 128], r15
	mov	qword ptr [rbp - 120], r12
	mov	qword ptr [rbp - 112], rax
	mov	qword ptr [rbp - 104], rcx
	mov	qword ptr [rbp - 96], r14
	mov	qword ptr [rbp - 88], rbx
	mov	qword ptr [rbp - 80], r12
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h47120a75e9270438E
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB106_18
LBB106_2:
	test	rdx, rdx
	je	LBB106_10
	shr	rdx
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rbx
	cmp	rbx, r15
	jbe	LBB106_5
LBB106_20:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB106_12:
	mov	rcx, r14
	cmp	rdx, 24
	jb	LBB106_18
LBB106_16:
	lea	rdx, [r14 + 8*r15]
	.p2align	4, 0x90
LBB106_17:
	mov	rsi, qword ptr [rax]
	movsd	xmm0, qword ptr [rcx]
	movsd	xmm1, qword ptr [rcx + 8]
	mulsd	xmm0, qword ptr [rsi]
	movsd	qword ptr [rcx], xmm0
	mov	rsi, qword ptr [rax]
	mulsd	xmm1, qword ptr [rsi]
	movsd	qword ptr [rcx + 8], xmm1
	movsd	xmm0, qword ptr [rcx + 16]
	mov	rsi, qword ptr [rax]
	mulsd	xmm0, qword ptr [rsi]
	movsd	qword ptr [rcx + 16], xmm0
	movsd	xmm0, qword ptr [rcx + 24]
	mov	rsi, qword ptr [rax]
	mulsd	xmm0, qword ptr [rsi]
	movsd	qword ptr [rcx + 24], xmm0
	add	rcx, 32
	cmp	rcx, rdx
	jne	LBB106_17
LBB106_18:
	add	rsp, 120
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB106_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 160]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 160], rax
	lea	rax, [rbp - 72]
	mov	qword ptr [rbp - 152], rax
	lea	rcx, [rbp - 64]
	mov	qword ptr [rbp - 144], rcx
	mov	qword ptr [rbp - 136], r13
	mov	qword ptr [rbp - 128], r15
	mov	qword ptr [rbp - 120], r12
	mov	qword ptr [rbp - 112], rax
	mov	qword ptr [rbp - 104], rcx
	mov	qword ptr [rbp - 96], r14
	mov	qword ptr [rbp - 88], rbx
	mov	qword ptr [rbp - 80], r12
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h9bbde3cefb9a95beE
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB106_18
LBB106_21:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17he71c6e485153800aE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 120
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r15, r9
	mov	r14, r8
	mov	rbx, rdi
	mov	r12, qword ptr [rbp + 16]
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 56], rcx
	shr	rbx
	cmp	rbx, rcx
	jae	LBB107_1
LBB107_10:
	lea	rax, [4*r15]
	test	rax, rax
	je	LBB107_18
	mov	rax, qword ptr [r12]
	lea	rdx, [4*r15 - 4]
	mov	esi, edx
	shr	esi, 2
	inc	esi
	and	rsi, 3
	je	LBB107_12
	neg	rsi
	mov	rcx, r14
	.p2align	4, 0x90
LBB107_14:
	movss	xmm0, dword ptr [rcx]
	mov	rdi, qword ptr [rax]
	mulss	xmm0, dword ptr [rdi]
	movss	dword ptr [rcx], xmm0
	add	rcx, 4
	inc	rsi
	jne	LBB107_14
	cmp	rdx, 12
	jae	LBB107_16
	jmp	LBB107_18
LBB107_1:
	test	sil, sil
	je	LBB107_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 64]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	rbx, qword ptr [rbp - 48]
	shr	rbx
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rbx
	cmp	rbx, r15
	ja	LBB107_20
LBB107_5:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB107_21
	lea	r13, [r14 + 4*rbx]
	sub	r15, rbx
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB107_7
	lea	rdi, [rbp - 160]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 160], rax
	lea	rax, [rbp - 72]
	mov	qword ptr [rbp - 152], rax
	lea	rcx, [rbp - 64]
	mov	qword ptr [rbp - 144], rcx
	mov	qword ptr [rbp - 136], r13
	mov	qword ptr [rbp - 128], r15
	mov	qword ptr [rbp - 120], r12
	mov	qword ptr [rbp - 112], rax
	mov	qword ptr [rbp - 104], rcx
	mov	qword ptr [rbp - 96], r14
	mov	qword ptr [rbp - 88], rbx
	mov	qword ptr [rbp - 80], r12
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h35cb1e0ec72c1b47E
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB107_18
LBB107_2:
	test	rdx, rdx
	je	LBB107_10
	shr	rdx
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rbx
	cmp	rbx, r15
	jbe	LBB107_5
LBB107_20:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB107_12:
	mov	rcx, r14
	cmp	rdx, 12
	jb	LBB107_18
LBB107_16:
	lea	rdx, [r14 + 4*r15]
	.p2align	4, 0x90
LBB107_17:
	mov	rsi, qword ptr [rax]
	movss	xmm0, dword ptr [rcx]
	movss	xmm1, dword ptr [rcx + 4]
	mulss	xmm0, dword ptr [rsi]
	movss	dword ptr [rcx], xmm0
	mov	rsi, qword ptr [rax]
	mulss	xmm1, dword ptr [rsi]
	movss	dword ptr [rcx + 4], xmm1
	movss	xmm0, dword ptr [rcx + 8]
	mov	rsi, qword ptr [rax]
	mulss	xmm0, dword ptr [rsi]
	movss	dword ptr [rcx + 8], xmm0
	movss	xmm0, dword ptr [rcx + 12]
	mov	rsi, qword ptr [rax]
	mulss	xmm0, dword ptr [rsi]
	movss	dword ptr [rcx + 12], xmm0
	add	rcx, 16
	cmp	rcx, rdx
	jne	LBB107_17
LBB107_18:
	add	rsp, 120
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB107_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 160]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 160], rax
	lea	rax, [rbp - 72]
	mov	qword ptr [rbp - 152], rax
	lea	rcx, [rbp - 64]
	mov	qword ptr [rbp - 144], rcx
	mov	qword ptr [rbp - 136], r13
	mov	qword ptr [rbp - 128], r15
	mov	qword ptr [rbp - 120], r12
	mov	qword ptr [rbp - 112], rax
	mov	qword ptr [rbp - 104], rcx
	mov	qword ptr [rbp - 96], r14
	mov	qword ptr [rbp - 88], rbx
	mov	qword ptr [rbp - 80], r12
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h9a33e0c42655e58dE
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB107_18
LBB107_21:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hed49352b02a73d05E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 120
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r14, r9
	mov	r12, r8
	mov	r15, rdi
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 56], rcx
	shr	r15
	cmp	r15, rcx
	jae	LBB108_4
LBB108_1:
	shl	r14, 2
	test	r14, r14
	je	LBB108_10
	xor	ebx, ebx
	.p2align	4, 0x90
LBB108_3:
	movss	xmm0, dword ptr [r12 + rbx]
	call	_tanf
	movss	dword ptr [r12 + rbx], xmm0
	add	rbx, 4
	cmp	r14, rbx
	jne	LBB108_3
	jmp	LBB108_10
LBB108_4:
	test	sil, sil
	je	LBB108_11
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 64]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	r15, qword ptr [rbp - 48]
	shr	r15
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], r15
	cmp	r15, r14
	ja	LBB108_13
LBB108_6:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB108_15
	mov	rbx, qword ptr [rbp + 16]
	lea	r13, [r12 + 4*r15]
	sub	r14, r15
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB108_14
	lea	rdi, [rbp - 160]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 160], rax
	lea	rax, [rbp - 72]
	mov	qword ptr [rbp - 152], rax
	lea	rcx, [rbp - 64]
	mov	qword ptr [rbp - 144], rcx
	mov	qword ptr [rbp - 136], r13
	mov	qword ptr [rbp - 128], r14
	mov	qword ptr [rbp - 120], rbx
	mov	qword ptr [rbp - 112], rax
	mov	qword ptr [rbp - 104], rcx
	mov	qword ptr [rbp - 96], r12
	mov	qword ptr [rbp - 88], r15
	mov	qword ptr [rbp - 80], rbx
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h041385a07b035670E
LBB108_9:
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
LBB108_10:
	add	rsp, 120
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB108_11:
	test	rdx, rdx
	je	LBB108_1
	shr	rdx
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], r15
	cmp	r15, r14
	jbe	LBB108_6
LBB108_13:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB108_14:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 160]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 160], rax
	lea	rax, [rbp - 72]
	mov	qword ptr [rbp - 152], rax
	lea	rcx, [rbp - 64]
	mov	qword ptr [rbp - 144], rcx
	mov	qword ptr [rbp - 136], r13
	mov	qword ptr [rbp - 128], r14
	mov	qword ptr [rbp - 120], rbx
	mov	qword ptr [rbp - 112], rax
	mov	qword ptr [rbp - 104], rcx
	mov	qword ptr [rbp - 96], r12
	mov	qword ptr [rbp - 88], r15
	mov	qword ptr [rbp - 80], rbx
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17hd30c0a09fb622a1bE
	jmp	LBB108_9
LBB108_15:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf17d0abb9471ca78E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 248
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r14, r9
	mov	r15, r8
	mov	rbx, rdi
	mov	qword ptr [rbp - 120], rdi
	mov	qword ptr [rbp - 160], rdx
	mov	qword ptr [rbp - 152], rcx
	shr	rbx
	cmp	rbx, rcx
	jae	LBB109_1
LBB109_10:
	lea	rax, [4*r14]
	test	rax, rax
	je	LBB109_23
	lea	rdx, [4*r14 - 4]
	shr	rdx, 2
	inc	rdx
	mov	rbx, r15
	cmp	rdx, 4
	jb	LBB109_21
	mov	rsi, rdx
	and	rsi, -4
	lea	rcx, [rsi - 4]
	mov	rax, rcx
	shr	rax, 2
	inc	rax
	mov	r13d, eax
	and	r13d, 3
	cmp	rcx, 12
	mov	qword ptr [rbp - 272], rdx
	mov	qword ptr [rbp - 264], rsi
	jae	LBB109_14
	xor	r12d, r12d
	test	r13, r13
	jne	LBB109_17
	jmp	LBB109_19
LBB109_1:
	test	sil, sil
	je	LBB109_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 160]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	rbx, qword ptr [rbp - 120]
	shr	rbx
	mov	qword ptr [rbp - 160], rdx
	mov	qword ptr [rbp - 168], rbx
	cmp	rbx, r14
	ja	LBB109_25
LBB109_5:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB109_26
	mov	r12, qword ptr [rbp + 16]
	lea	r13, [r15 + 4*rbx]
	sub	r14, rbx
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB109_7
	lea	rdi, [rbp - 256]
	lea	rax, [rbp - 120]
	mov	qword ptr [rbp - 256], rax
	lea	rax, [rbp - 168]
	mov	qword ptr [rbp - 248], rax
	lea	rcx, [rbp - 160]
	mov	qword ptr [rbp - 240], rcx
	mov	qword ptr [rbp - 232], r13
	mov	qword ptr [rbp - 224], r14
	mov	qword ptr [rbp - 216], r12
	mov	qword ptr [rbp - 208], rax
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], r15
	mov	qword ptr [rbp - 184], rbx
	mov	qword ptr [rbp - 176], r12
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h3978e15f5771cce6E
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB109_23
LBB109_2:
	test	rdx, rdx
	je	LBB109_10
	shr	rdx
	mov	qword ptr [rbp - 160], rdx
	mov	qword ptr [rbp - 168], rbx
	cmp	rbx, r14
	jbe	LBB109_5
LBB109_25:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB109_14:
	mov	rbx, r13
	sub	rbx, rax
	xor	r12d, r12d
	.p2align	4, 0x90
LBB109_15:
	movups	xmm1, xmmword ptr [r15 + 4*r12]
	movaps	xmmword ptr [rbp - 96], xmm1
	movups	xmm0, xmmword ptr [r15 + 4*r12 + 16]
	movaps	xmmword ptr [rbp - 64], xmm0
	movups	xmm0, xmmword ptr [r15 + 4*r12 + 32]
	movaps	xmmword ptr [rbp - 80], xmm0
	movups	xmm0, xmmword ptr [r15 + 4*r12 + 48]
	movaps	xmmword ptr [rbp - 112], xmm0
	movaps	xmm0, xmm1
	shufps	xmm0, xmm1, 231
	call	_cosf
	movaps	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	movhlps	xmm0, xmm0
	call	_cosf
	unpcklps	xmm0, xmmword ptr [rbp - 144]
	movaps	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 96]
	call	_cosf
	movaps	xmmword ptr [rbp - 288], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 96]
	call	_cosf
	movaps	xmm1, xmmword ptr [rbp - 288]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 144]
	movups	xmmword ptr [r15 + 4*r12], xmm1
	movaps	xmm0, xmmword ptr [rbp - 64]
	shufps	xmm0, xmm0, 231
	call	_cosf
	movaps	xmmword ptr [rbp - 96], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	movhlps	xmm0, xmm0
	call	_cosf
	unpcklps	xmm0, xmmword ptr [rbp - 96]
	movaps	xmmword ptr [rbp - 96], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	call	_cosf
	movaps	xmmword ptr [rbp - 144], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 64]
	call	_cosf
	movaps	xmm1, xmmword ptr [rbp - 144]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 96]
	movups	xmmword ptr [r15 + 4*r12 + 16], xmm1
	movaps	xmm0, xmmword ptr [rbp - 80]
	shufps	xmm0, xmm0, 231
	call	_cosf
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 80]
	movhlps	xmm0, xmm0
	call	_cosf
	unpcklps	xmm0, xmmword ptr [rbp - 64]
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 80]
	call	_cosf
	movaps	xmmword ptr [rbp - 96], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 80]
	call	_cosf
	movaps	xmm1, xmmword ptr [rbp - 96]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 64]
	movups	xmmword ptr [r15 + 4*r12 + 32], xmm1
	movaps	xmm0, xmmword ptr [rbp - 112]
	shufps	xmm0, xmm0, 231
	call	_cosf
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	movhlps	xmm0, xmm0
	call	_cosf
	unpcklps	xmm0, xmmword ptr [rbp - 80]
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_cosf
	movaps	xmmword ptr [rbp - 64], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 112]
	call	_cosf
	movaps	xmm1, xmmword ptr [rbp - 64]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 80]
	movups	xmmword ptr [r15 + 4*r12 + 48], xmm1
	add	r12, 16
	add	rbx, 4
	jne	LBB109_15
	test	r13, r13
	je	LBB109_19
LBB109_17:
	lea	rbx, [r15 + 4*r12]
	neg	r13
	.p2align	4, 0x90
LBB109_18:
	movups	xmm0, xmmword ptr [rbx]
	movaps	xmmword ptr [rbp - 112], xmm0
	shufps	xmm0, xmm0, 231
	call	_cosf
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	movhlps	xmm0, xmm0
	call	_cosf
	unpcklps	xmm0, xmmword ptr [rbp - 80]
	movaps	xmmword ptr [rbp - 80], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_cosf
	movaps	xmmword ptr [rbp - 64], xmm0
	movshdup	xmm0, xmmword ptr [rbp - 112]
	call	_cosf
	movaps	xmm1, xmmword ptr [rbp - 64]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rbp - 80]
	movups	xmmword ptr [rbx], xmm1
	add	rbx, 16
	inc	r13
	jne	LBB109_18
LBB109_19:
	mov	rax, qword ptr [rbp - 264]
	cmp	qword ptr [rbp - 272], rax
	je	LBB109_23
	lea	rbx, [r15 + 4*rax]
LBB109_21:
	lea	r14, [r15 + 4*r14]
	.p2align	4, 0x90
LBB109_22:
	movss	xmm0, dword ptr [rbx]
	call	_cosf
	movss	dword ptr [rbx], xmm0
	add	rbx, 4
	cmp	r14, rbx
	jne	LBB109_22
LBB109_23:
	add	rsp, 248
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB109_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 256]
	lea	rax, [rbp - 120]
	mov	qword ptr [rbp - 256], rax
	lea	rax, [rbp - 168]
	mov	qword ptr [rbp - 248], rax
	lea	rcx, [rbp - 160]
	mov	qword ptr [rbp - 240], rcx
	mov	qword ptr [rbp - 232], r13
	mov	qword ptr [rbp - 224], r14
	mov	qword ptr [rbp - 216], r12
	mov	qword ptr [rbp - 208], rax
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], r15
	mov	qword ptr [rbp - 184], rbx
	mov	qword ptr [rbp - 176], r12
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h6bab1f06cd607410E
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB109_23
LBB109_26:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf409ee847d2de198E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	r12, r9
	mov	r13, r8
	mov	r15, rdi
	mov	qword ptr [rbp - 48], rdi
	mov	qword ptr [rbp - 80], rdx
	mov	qword ptr [rbp - 72], rcx
	shr	r15
	cmp	r15, rcx
	jae	LBB110_1
LBB110_10:
	lea	rax, [8*r12]
	test	rax, rax
	je	LBB110_23
	lea	r15, [8*r12 - 8]
	shr	r15, 3
	inc	r15
	mov	rbx, r13
	cmp	r15, 2
	jb	LBB110_21
	mov	qword ptr [rbp - 256], r12
	mov	rdx, r15
	and	rdx, -2
	lea	rcx, [rdx - 2]
	mov	rax, rcx
	shr	rax
	inc	rax
	mov	r14d, eax
	and	r14d, 3
	cmp	rcx, 6
	mov	qword ptr [rbp - 248], rdx
	jae	LBB110_14
	xor	r12d, r12d
	test	r14, r14
	jne	LBB110_17
	jmp	LBB110_19
LBB110_1:
	test	sil, sil
	je	LBB110_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rdx, qword ptr [rbp - 80]
	shr	rdx
	cmp	rax, rdx
	cmova	rdx, rax
	mov	r15, qword ptr [rbp - 48]
	shr	r15
	mov	qword ptr [rbp - 80], rdx
	mov	qword ptr [rbp - 88], r15
	cmp	r15, r12
	ja	LBB110_25
LBB110_5:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB110_26
	mov	r14, qword ptr [rbp + 16]
	lea	rbx, [r13 + 8*r15]
	sub	r12, r15
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB110_7
	lea	rdi, [rbp - 216]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 216], rax
	lea	rax, [rbp - 88]
	mov	qword ptr [rbp - 208], rax
	lea	rcx, [rbp - 80]
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], rbx
	mov	qword ptr [rbp - 184], r12
	mov	qword ptr [rbp - 176], r14
	mov	qword ptr [rbp - 168], rax
	mov	qword ptr [rbp - 160], rcx
	mov	qword ptr [rbp - 152], r13
	mov	qword ptr [rbp - 144], r15
	mov	qword ptr [rbp - 136], r14
	xor	edx, edx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h3e6e22037d084d63E
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB110_23
LBB110_2:
	test	rdx, rdx
	je	LBB110_10
	shr	rdx
	mov	qword ptr [rbp - 80], rdx
	mov	qword ptr [rbp - 88], r15
	cmp	r15, r12
	jbe	LBB110_5
LBB110_25:
	lea	rdi, [rip + l___unnamed_24]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB110_14:
	mov	rbx, r14
	sub	rbx, rax
	xor	r12d, r12d
	.p2align	4, 0x90
LBB110_15:
	movups	xmm1, xmmword ptr [r13 + 8*r12]
	movaps	xmmword ptr [rbp - 272], xmm1
	movups	xmm0, xmmword ptr [r13 + 8*r12 + 16]
	movaps	xmmword ptr [rbp - 112], xmm0
	movups	xmm0, xmmword ptr [r13 + 8*r12 + 32]
	movaps	xmmword ptr [rbp - 64], xmm0
	movups	xmm0, xmmword ptr [r13 + 8*r12 + 48]
	movaps	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmm1
	call	_cos
	movaps	xmmword ptr [rbp - 240], xmm0
	movaps	xmm0, xmmword ptr [rbp - 272]
	movhlps	xmm0, xmm0
	call	_cos
	movaps	xmm1, xmmword ptr [rbp - 240]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12], xmm1
	movaps	xmm0, xmmword ptr [rbp - 112]
	call	_cos
	movaps	xmmword ptr [rbp - 240], xmm0
	movaps	xmm0, xmmword ptr [rbp - 112]
	movhlps	xmm0, xmm0
	call	_cos
	movaps	xmm1, xmmword ptr [rbp - 240]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12 + 16], xmm1
	movaps	xmm0, xmmword ptr [rbp - 64]
	call	_cos
	movaps	xmmword ptr [rbp - 112], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	movhlps	xmm0, xmm0
	call	_cos
	movaps	xmm1, xmmword ptr [rbp - 112]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12 + 32], xmm1
	movaps	xmm0, xmmword ptr [rbp - 128]
	call	_cos
	movaps	xmmword ptr [rbp - 64], xmm0
	movaps	xmm0, xmmword ptr [rbp - 128]
	movhlps	xmm0, xmm0
	call	_cos
	movaps	xmm1, xmmword ptr [rbp - 64]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [r13 + 8*r12 + 48], xmm1
	add	r12, 8
	add	rbx, 4
	jne	LBB110_15
	test	r14, r14
	je	LBB110_19
LBB110_17:
	lea	rbx, [r13 + 8*r12]
	neg	r14
	.p2align	4, 0x90
LBB110_18:
	movups	xmm0, xmmword ptr [rbx]
	movaps	xmmword ptr [rbp - 64], xmm0
	call	_cos
	movaps	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 64]
	movhlps	xmm0, xmm0
	call	_cos
	movaps	xmm1, xmmword ptr [rbp - 128]
	movlhps	xmm1, xmm0
	movups	xmmword ptr [rbx], xmm1
	add	rbx, 16
	inc	r14
	jne	LBB110_18
LBB110_19:
	mov	rax, qword ptr [rbp - 248]
	cmp	r15, rax
	mov	r12, qword ptr [rbp - 256]
	je	LBB110_23
	lea	rbx, [r13 + 8*rax]
LBB110_21:
	lea	r14, [r13 + 8*r12]
	.p2align	4, 0x90
LBB110_22:
	movsd	xmm0, qword ptr [rbx]
	call	_cos
	movsd	qword ptr [rbx], xmm0
	add	rbx, 8
	cmp	r14, rbx
	jne	LBB110_22
LBB110_23:
	add	rsp, 232
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB110_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rdi, qword ptr [rax]
	sub	rdi, -128
	lea	rsi, [rbp - 216]
	lea	rax, [rbp - 48]
	mov	qword ptr [rbp - 216], rax
	lea	rax, [rbp - 88]
	mov	qword ptr [rbp - 208], rax
	lea	rcx, [rbp - 80]
	mov	qword ptr [rbp - 200], rcx
	mov	qword ptr [rbp - 192], rbx
	mov	qword ptr [rbp - 184], r12
	mov	qword ptr [rbp - 176], r14
	mov	qword ptr [rbp - 168], rax
	mov	qword ptr [rbp - 160], rcx
	mov	qword ptr [rbp - 152], r13
	mov	qword ptr [rbp - 144], r15
	mov	qword ptr [rbp - 136], r14
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h2a34d240acb221c9E
	call	__ZN97_$LT$rayon..iter..noop..NoopReducer$u20$as$u20$rayon..iter..plumbing..Reducer$LT$$LP$$RP$$GT$$GT$6reduce17hf5f303b3670e2e97E
	jmp	LBB110_23
LBB110_26:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 216]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf8f8293b3b524e6eE:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	mov	rbx, r9
	mov	r14, rdi
	mov	qword ptr [rsp + 48], rsi
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 64], r8
	shr	rsi
	cmp	rsi, r8
	jae	LBB111_1
LBB111_14:
	mov	rax, qword ptr [rbx]
	test	rax, rax
	je	LBB111_29
	mov	rcx, qword ptr [rbx + 16]
	pxor	xmm4, xmm4
	test	rcx, rcx
	je	LBB111_16
	mov	rdx, qword ptr [rbx + 8]
	pxor	xmm8, xmm8
	pxor	xmm9, xmm9
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	.p2align	4, 0x90
LBB111_18:
	cmp	rcx, rax
	mov	rsi, rcx
	cmova	rsi, rax
	cmp	rsi, 7
	jbe	LBB111_30
	movdqu	xmm0, xmmword ptr [rdx]
	paddq	xmm8, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 16]
	paddq	xmm9, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 32]
	paddq	xmm2, xmm0
	movdqu	xmm0, xmmword ptr [rdx + 48]
	lea	rdx, [rdx + 8*rsi]
	paddq	xmm3, xmm0
	sub	rcx, rsi
	jne	LBB111_18
	jmp	LBB111_20
LBB111_1:
	test	dl, dl
	je	LBB111_2
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
	mov	rcx, qword ptr [rsp + 56]
	shr	rcx
	cmp	rax, rcx
	cmova	rcx, rax
	mov	rsi, qword ptr [rsp + 48]
	shr	rsi
	jmp	LBB111_4
LBB111_2:
	test	rcx, rcx
	je	LBB111_14
	shr	rcx
LBB111_4:
	mov	qword ptr [rsp + 56], rcx
	mov	qword ptr [rsp + 72], rsi
	mov	r12, qword ptr [rbx]
	mov	rax, rsi
	mul	r12
	jo	LBB111_27
	mov	r15, rax
	mov	qword ptr [rsp + 184], r14
	mov	r13, qword ptr [rbx + 8]
	mov	rbx, qword ptr [rbx + 16]
	cmp	rax, rbx
	cmova	r15, rbx
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
	test	rax, rax
	je	LBB111_28
	mov	rdi, qword ptr [rbp + 16]
	lea	r14, [r13 + 8*r15]
	sub	rbx, r15
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB111_7
	lea	rsi, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	xor	ecx, ecx
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h52f524c866d61f1cE
LBB111_9:
	movdqa	xmm12, xmmword ptr [rsp + 256]
	movdqa	xmm13, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movdqa	xmm3, xmmword ptr [rsp + 304]
	movdqa	xmm8, xmmword ptr [rsp + 368]
	movdqa	xmm9, xmmword ptr [rsp + 352]
	movdqa	xmm10, xmmword ptr [rsp + 336]
	movdqa	xmm11, xmmword ptr [rsp + 320]
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	mov	rax, qword ptr [rsp + 184]
	.p2align	4, 0x90
LBB111_10:
	paddq	xmm7, xmm3
	paddq	xmm6, xmm2
	paddq	xmm5, xmm13
	paddq	xmm4, xmm12
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 240], xmm1
	cmp	byte ptr [rsp + 240], 0
	movdqa	xmm1, xmm0
	jne	LBB111_10
	pxor	xmm1, xmm1
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB111_12:
	paddq	xmm7, xmm8
	paddq	xmm6, xmm9
	paddq	xmm5, xmm10
	paddq	xmm4, xmm11
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 224], xmm1
	cmp	byte ptr [rsp + 224], 0
	movdqa	xmm1, xmm0
	jne	LBB111_12
	movdqa	xmmword ptr [rax], xmm4
	movdqa	xmmword ptr [rax + 16], xmm5
	movdqa	xmmword ptr [rax + 32], xmm6
	movdqa	xmmword ptr [rax + 48], xmm7
	jmp	LBB111_25
LBB111_16:
	pxor	xmm8, xmm8
	pxor	xmm9, xmm9
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
LBB111_20:
	movdqa	xmm0, xmm4
	.p2align	4, 0x90
LBB111_21:
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 208], xmm4
	cmp	byte ptr [rsp + 208], 0
	movdqa	xmm4, xmm0
	jne	LBB111_21
	pxor	xmm1, xmm1
	pxor	xmm4, xmm4
	pxor	xmm5, xmm5
	pxor	xmm6, xmm6
	pxor	xmm7, xmm7
	movdqa	xmm0, xmm1
	.p2align	4, 0x90
LBB111_23:
	paddq	xmm7, xmm3
	paddq	xmm6, xmm2
	paddq	xmm5, xmm9
	paddq	xmm4, xmm8
	psrldq	xmm0, 1
	palignr	xmm0, xmm0, 15
	movdqa	xmmword ptr [rsp + 192], xmm1
	cmp	byte ptr [rsp + 192], 0
	movdqa	xmm1, xmm0
	jne	LBB111_23
	movdqa	xmmword ptr [r14], xmm4
	movdqa	xmmword ptr [r14 + 16], xmm5
	movdqa	xmmword ptr [r14 + 32], xmm6
	movdqa	xmmword ptr [r14 + 48], xmm7
LBB111_25:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB111_7:
	call	__ZN10rayon_core8registry15global_registry17h120c65cd1d73be3fE
	mov	rsi, qword ptr [rax]
	sub	rsi, -128
	lea	rdx, [rsp + 80]
	lea	rax, [rsp + 48]
	mov	qword ptr [rsp + 80], rax
	lea	rax, [rsp + 72]
	mov	qword ptr [rsp + 88], rax
	lea	rcx, [rsp + 56]
	mov	qword ptr [rsp + 96], rcx
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	mov	qword ptr [rsp + 120], rbx
	mov	rdi, qword ptr [rbp + 16]
	mov	qword ptr [rsp + 128], rdi
	mov	qword ptr [rsp + 136], rax
	mov	qword ptr [rsp + 144], rcx
	mov	qword ptr [rsp + 152], r12
	mov	qword ptr [rsp + 160], r13
	mov	qword ptr [rsp + 168], r15
	mov	qword ptr [rsp + 176], rdi
	lea	rdi, [rsp + 256]
	call	__ZN10rayon_core8registry8Registry14in_worker_cold17h475befc1427464dcE
	jmp	LBB111_9
LBB111_30:
	lea	rdi, [rip + l___unnamed_19]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 34
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB111_29:
	lea	rdi, [rip + l___unnamed_21]
	lea	rdx, [rip + l___unnamed_20]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB111_27:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_22]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
LBB111_28:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
	.cfi_endproc

	.p2align	4, 0x90
__ZN82_$LT$std..sys_common..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hc083bb14fb3b9e06E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	mov	rdx, rsi
	lea	rdi, [rip + l___unnamed_25]
	mov	esi, 25
	pop	rbp
	jmp	__ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h2760aab2290546fcE
	.cfi_endproc

	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h006e09d4d7103f8cE:
Lfunc_begin63:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception63
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 128]
	movdqu	xmm0, xmmword ptr [rdi + 144]
	pxor	xmm2, xmm2
	movdqu	xmmword ptr [rdi + 128], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB113_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB113_4
	mov	rax, qword ptr [rbx + 176]
	movdqu	xmm1, xmmword ptr [rbx + 160]
	movq	rcx, xmm1
	pshufd	xmm1, xmm1, 78
	movq	rdx, xmm1
	movq	rdi, xmm0
	movq	xmm1, rdx
	movq	xmm2, rcx
	punpcklqdq	xmm2, xmm1
	pshufd	xmm1, xmm2, 78
	palignr	xmm2, xmm0, 8
	mov	rcx, qword ptr [rdi]
	mov	r8, qword ptr [rdi + 8]
	movq	qword ptr [rsp + 248], xmm1
	movdqu	xmmword ptr [rsp + 232], xmm2
Ltmp1546:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 232]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf8f8293b3b524e6eE
Ltmp1547:
	movdqa	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movdqa	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB113_13
LBB113_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1553:
	call	qword ptr [rax]
Ltmp1554:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB113_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB113_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 184], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB113_1:
Ltmp1556:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1557:
	jmp	LBB113_2
LBB113_4:
Ltmp1548:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1549:
LBB113_2:
	ud2
LBB113_14:
Ltmp1555:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movdqa	xmmword ptr [rbx], xmm0
LBB113_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB113_5:
Ltmp1550:
Ltmp1551:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1552:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB113_10
	jmp	LBB113_13
LBB113_16:
Ltmp1558:
	mov	r14, rax
	jmp	LBB113_15
Lfunc_end63:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table113:
Lexception63:
	.byte	255
	.byte	155
	.uleb128 Lttbase28-Lttbaseref28
Lttbaseref28:
	.byte	1
	.uleb128 Lcst_end63-Lcst_begin63
Lcst_begin63:
	.uleb128 Ltmp1546-Lfunc_begin63
	.uleb128 Ltmp1547-Ltmp1546
	.uleb128 Ltmp1550-Lfunc_begin63
	.byte	3
	.uleb128 Ltmp1553-Lfunc_begin63
	.uleb128 Ltmp1554-Ltmp1553
	.uleb128 Ltmp1555-Lfunc_begin63
	.byte	0
	.uleb128 Ltmp1556-Lfunc_begin63
	.uleb128 Ltmp1557-Ltmp1556
	.uleb128 Ltmp1558-Lfunc_begin63
	.byte	0
	.uleb128 Ltmp1548-Lfunc_begin63
	.uleb128 Ltmp1549-Ltmp1548
	.uleb128 Ltmp1550-Lfunc_begin63
	.byte	3
	.uleb128 Ltmp1549-Lfunc_begin63
	.uleb128 Ltmp1551-Ltmp1549
	.byte	0
	.byte	0
	.uleb128 Ltmp1551-Lfunc_begin63
	.uleb128 Ltmp1552-Ltmp1551
	.uleb128 Ltmp1558-Lfunc_begin63
	.byte	0
Lcst_end63:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase28:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h04448f338fbbd7b1E:
Lfunc_begin64:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception64
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB114_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB114_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp1559:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17he71c6e485153800aE
Ltmp1560:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB114_14
LBB114_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp1566:
	call	qword ptr [rax]
Ltmp1567:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB114_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB114_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB114_1:
Ltmp1569:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1570:
	jmp	LBB114_2
LBB114_4:
Ltmp1561:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1562:
LBB114_2:
	ud2
LBB114_15:
Ltmp1568:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB114_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB114_6:
Ltmp1563:
Ltmp1564:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1565:
	test	rax, rax
	je	LBB114_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB114_11
	jmp	LBB114_14
LBB114_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB114_11
	jmp	LBB114_14
LBB114_17:
Ltmp1571:
	mov	r14, rax
	jmp	LBB114_16
Lfunc_end64:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table114:
Lexception64:
	.byte	255
	.byte	155
	.uleb128 Lttbase29-Lttbaseref29
Lttbaseref29:
	.byte	1
	.uleb128 Lcst_end64-Lcst_begin64
Lcst_begin64:
	.uleb128 Ltmp1559-Lfunc_begin64
	.uleb128 Ltmp1560-Ltmp1559
	.uleb128 Ltmp1563-Lfunc_begin64
	.byte	3
	.uleb128 Ltmp1566-Lfunc_begin64
	.uleb128 Ltmp1567-Ltmp1566
	.uleb128 Ltmp1568-Lfunc_begin64
	.byte	0
	.uleb128 Ltmp1569-Lfunc_begin64
	.uleb128 Ltmp1570-Ltmp1569
	.uleb128 Ltmp1571-Lfunc_begin64
	.byte	0
	.uleb128 Ltmp1561-Lfunc_begin64
	.uleb128 Ltmp1562-Ltmp1561
	.uleb128 Ltmp1563-Lfunc_begin64
	.byte	3
	.uleb128 Ltmp1562-Lfunc_begin64
	.uleb128 Ltmp1564-Ltmp1562
	.byte	0
	.byte	0
	.uleb128 Ltmp1564-Lfunc_begin64
	.uleb128 Ltmp1565-Ltmp1564
	.uleb128 Ltmp1571-Lfunc_begin64
	.byte	0
Lcst_end64:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase29:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h0a6c6ada20575cbeE:
Lfunc_begin65:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception65
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB115_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB115_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp1572:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf409ee847d2de198E
Ltmp1573:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB115_14
LBB115_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp1579:
	call	qword ptr [rax]
Ltmp1580:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB115_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB115_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB115_1:
Ltmp1582:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1583:
	jmp	LBB115_2
LBB115_4:
Ltmp1574:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1575:
LBB115_2:
	ud2
LBB115_15:
Ltmp1581:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB115_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB115_6:
Ltmp1576:
Ltmp1577:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1578:
	test	rax, rax
	je	LBB115_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB115_11
	jmp	LBB115_14
LBB115_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB115_11
	jmp	LBB115_14
LBB115_17:
Ltmp1584:
	mov	r14, rax
	jmp	LBB115_16
Lfunc_end65:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table115:
Lexception65:
	.byte	255
	.byte	155
	.uleb128 Lttbase30-Lttbaseref30
Lttbaseref30:
	.byte	1
	.uleb128 Lcst_end65-Lcst_begin65
Lcst_begin65:
	.uleb128 Ltmp1572-Lfunc_begin65
	.uleb128 Ltmp1573-Ltmp1572
	.uleb128 Ltmp1576-Lfunc_begin65
	.byte	3
	.uleb128 Ltmp1579-Lfunc_begin65
	.uleb128 Ltmp1580-Ltmp1579
	.uleb128 Ltmp1581-Lfunc_begin65
	.byte	0
	.uleb128 Ltmp1582-Lfunc_begin65
	.uleb128 Ltmp1583-Ltmp1582
	.uleb128 Ltmp1584-Lfunc_begin65
	.byte	0
	.uleb128 Ltmp1574-Lfunc_begin65
	.uleb128 Ltmp1575-Ltmp1574
	.uleb128 Ltmp1576-Lfunc_begin65
	.byte	3
	.uleb128 Ltmp1575-Lfunc_begin65
	.uleb128 Ltmp1577-Ltmp1575
	.byte	0
	.byte	0
	.uleb128 Ltmp1577-Lfunc_begin65
	.uleb128 Ltmp1578-Ltmp1577
	.uleb128 Ltmp1584-Lfunc_begin65
	.byte	0
Lcst_end65:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase30:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h0ab6dc5fe9e4cfa6E:
Lfunc_begin66:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception66
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 192], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 176], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 160], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 96], xmm0
	movups	xmm0, xmmword ptr [rdi + 312]
	movaps	xmmword ptr [rsp + 144], xmm0
	movups	xmm0, xmmword ptr [rdi + 296]
	movaps	xmmword ptr [rsp + 80], xmm0
	movups	xmm0, xmmword ptr [rdi + 344]
	movaps	xmmword ptr [rsp + 128], xmm0
	movups	xmm0, xmmword ptr [rdi + 328]
	movaps	xmmword ptr [rsp + 64], xmm0
	mov	rax, qword ptr [rdi + 376]
	mov	qword ptr [rsp + 272], rax
	mov	rax, qword ptr [rdi + 368]
	mov	qword ptr [rsp + 264], rax
	mov	rax, qword ptr [rdi + 360]
	mov	qword ptr [rsp + 256], rax
	movdqa	xmmword ptr [rsp + 112], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB116_1
	mov	rbx, rdi
	mov	rax, qword ptr [rsp + 272]
	mov	qword ptr [rsp + 248], rax
	mov	rcx, qword ptr [rsp + 256]
	mov	rdx, qword ptr [rsp + 264]
	mov	qword ptr [rsp + 240], rdx
	mov	qword ptr [rsp + 232], rcx
	mov	qword ptr [rsp + 56], rax
	mov	qword ptr [rsp + 48], rdx
	mov	qword ptr [rsp + 40], rcx
Ltmp1585:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1586:
	test	rax, rax
	je	LBB116_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB116_7
	pshufd	xmm0, xmmword ptr [rsp + 112], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 456], r14
	mov	qword ptr [rsp + 464], rax
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 472], xmm0
	movaps	xmm0, xmmword ptr [rsp + 192]
	movups	xmmword ptr [rsp + 488], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 504], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movups	xmmword ptr [rsp + 520], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 536], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movups	xmmword ptr [rsp + 552], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movups	xmmword ptr [rsp + 568], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movups	xmmword ptr [rsp + 584], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movups	xmmword ptr [rsp + 600], xmm0
	mov	rax, qword ptr [rsp + 40]
	mov	rcx, qword ptr [rsp + 48]
	mov	qword ptr [rsp + 616], rax
	mov	qword ptr [rsp + 624], rcx
	mov	rax, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 632], rax
Ltmp1587:
	lea	rdi, [rsp + 640]
	lea	rsi, [rsp + 456]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h6b8f521016c729d0E
Ltmp1588:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movdqa	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	movaps	xmm4, xmmword ptr [rsp + 704]
	movaps	xmm5, xmmword ptr [rsp + 720]
	movaps	xmm6, xmmword ptr [rsp + 736]
	movaps	xmm7, xmmword ptr [rsp + 752]
	movaps	xmmword ptr [rsp + 320], xmm0
	movdqa	xmmword ptr [rsp + 336], xmm1
	movaps	xmmword ptr [rsp + 368], xmm3
	movaps	xmmword ptr [rsp + 352], xmm2
	movaps	xmmword ptr [rsp + 400], xmm5
	movaps	xmmword ptr [rsp + 384], xmm4
	movaps	xmmword ptr [rsp + 432], xmm7
	movaps	xmmword ptr [rsp + 416], xmm6
	mov	eax, 1
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jb	LBB116_16
LBB116_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1596:
	call	qword ptr [rax]
Ltmp1597:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB116_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB116_16:
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp1599:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1600:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB116_1:
Ltmp1601:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1602:
	jmp	LBB116_2
LBB116_5:
Ltmp1591:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 456]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1592:
	jmp	LBB116_2
LBB116_7:
Ltmp1589:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1590:
LBB116_2:
	ud2
LBB116_18:
Ltmp1598:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB116_19
LBB116_8:
Ltmp1593:
Ltmp1594:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1595:
	mov	qword ptr [rsp + 264], rax
	mov	qword ptr [rsp + 272], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jae	LBB116_13
	jmp	LBB116_16
LBB116_20:
Ltmp1603:
	mov	r14, rax
LBB116_19:
	lea	rdi, [rsp + 456]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end66:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table116:
Lexception66:
	.byte	255
	.byte	155
	.uleb128 Lttbase31-Lttbaseref31
Lttbaseref31:
	.byte	1
	.uleb128 Lcst_end66-Lcst_begin66
Lcst_begin66:
	.uleb128 Ltmp1585-Lfunc_begin66
	.uleb128 Ltmp1588-Ltmp1585
	.uleb128 Ltmp1593-Lfunc_begin66
	.byte	3
	.uleb128 Ltmp1596-Lfunc_begin66
	.uleb128 Ltmp1597-Ltmp1596
	.uleb128 Ltmp1598-Lfunc_begin66
	.byte	0
	.uleb128 Ltmp1597-Lfunc_begin66
	.uleb128 Ltmp1599-Ltmp1597
	.byte	0
	.byte	0
	.uleb128 Ltmp1599-Lfunc_begin66
	.uleb128 Ltmp1602-Ltmp1599
	.uleb128 Ltmp1603-Lfunc_begin66
	.byte	0
	.uleb128 Ltmp1591-Lfunc_begin66
	.uleb128 Ltmp1590-Ltmp1591
	.uleb128 Ltmp1593-Lfunc_begin66
	.byte	3
	.uleb128 Ltmp1590-Lfunc_begin66
	.uleb128 Ltmp1594-Ltmp1590
	.byte	0
	.byte	0
	.uleb128 Ltmp1594-Lfunc_begin66
	.uleb128 Ltmp1595-Ltmp1594
	.uleb128 Ltmp1603-Lfunc_begin66
	.byte	0
	.uleb128 Ltmp1595-Lfunc_begin66
	.uleb128 Lfunc_end66-Ltmp1595
	.byte	0
	.byte	0
Lcst_end66:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase31:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h0fd9205a2cb1e06eE:
Lfunc_begin67:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception67
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm3, xmmword ptr [rdi + 128]
	movdqu	xmm2, xmmword ptr [rdi + 144]
	movups	xmm0, xmmword ptr [rdi + 192]
	movdqu	xmm1, xmmword ptr [rdi + 208]
	xorps	xmm4, xmm4
	movups	xmmword ptr [rdi + 128], xmm4
	movq	rax, xmm3
	test	rax, rax
	je	LBB117_1
	mov	rbx, rdi
	movups	xmm4, xmmword ptr [rdi + 160]
	movups	xmm5, xmmword ptr [rdi + 176]
	movaps	xmmword ptr [rsp + 112], xmm5
	movaps	xmmword ptr [rsp + 96], xmm4
	movdqa	xmmword ptr [rsp + 80], xmm2
	movdqa	xmmword ptr [rsp + 64], xmm3
	pshufd	xmm3, xmm3, 78
	movq	rcx, xmm3
	mov	rdx, qword ptr [rsp + 112]
	mov	rsi, qword ptr [rsp + 120]
	mov	qword ptr [rsp + 248], rsi
	mov	qword ptr [rsp + 240], rdx
	mov	rdx, qword ptr [rsp + 96]
	mov	rsi, qword ptr [rsp + 104]
	mov	qword ptr [rsp + 232], rsi
	mov	qword ptr [rsp + 224], rdx
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 216], rdx
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB117_4
	pshufd	xmm3, xmm1, 78
	movq	rax, xmm3
	movq	rdx, xmm2
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	mov	rdx, qword ptr [rsp + 248]
	mov	qword ptr [rsp + 288], rdx
	mov	rdx, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 280], rdx
	mov	rdx, qword ptr [rsp + 232]
	mov	qword ptr [rsp + 272], rdx
	mov	rdx, qword ptr [rsp + 216]
	mov	rdi, qword ptr [rsp + 224]
	mov	qword ptr [rsp + 264], rdi
	mov	qword ptr [rsp + 256], rdx
	movq	qword ptr [rsp + 312], xmm1
	movups	xmmword ptr [rsp + 296], xmm0
Ltmp1604:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 320]
	lea	r9, [rsp + 256]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17ha2f99a0eebe114e4E
Ltmp1605:
	movaps	xmm0, xmmword ptr [rsp + 320]
	movdqa	xmm1, xmmword ptr [rsp + 336]
	movdqa	xmm2, xmmword ptr [rsp + 352]
	movdqa	xmm3, xmmword ptr [rsp + 368]
	movdqa	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movaps	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB117_13
LBB117_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1611:
	call	qword ptr [rax]
Ltmp1612:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB117_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB117_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 224], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB117_1:
Ltmp1614:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1615:
	jmp	LBB117_2
LBB117_4:
Ltmp1606:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1607:
LBB117_2:
	ud2
LBB117_14:
Ltmp1613:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movdqa	xmm3, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movaps	xmmword ptr [rbx], xmm0
LBB117_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB117_5:
Ltmp1608:
Ltmp1609:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1610:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB117_10
	jmp	LBB117_13
LBB117_16:
Ltmp1616:
	mov	r14, rax
	jmp	LBB117_15
Lfunc_end67:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table117:
Lexception67:
	.byte	255
	.byte	155
	.uleb128 Lttbase32-Lttbaseref32
Lttbaseref32:
	.byte	1
	.uleb128 Lcst_end67-Lcst_begin67
Lcst_begin67:
	.uleb128 Ltmp1604-Lfunc_begin67
	.uleb128 Ltmp1605-Ltmp1604
	.uleb128 Ltmp1608-Lfunc_begin67
	.byte	3
	.uleb128 Ltmp1611-Lfunc_begin67
	.uleb128 Ltmp1612-Ltmp1611
	.uleb128 Ltmp1613-Lfunc_begin67
	.byte	0
	.uleb128 Ltmp1614-Lfunc_begin67
	.uleb128 Ltmp1615-Ltmp1614
	.uleb128 Ltmp1616-Lfunc_begin67
	.byte	0
	.uleb128 Ltmp1606-Lfunc_begin67
	.uleb128 Ltmp1607-Ltmp1606
	.uleb128 Ltmp1608-Lfunc_begin67
	.byte	3
	.uleb128 Ltmp1607-Lfunc_begin67
	.uleb128 Ltmp1609-Ltmp1607
	.byte	0
	.byte	0
	.uleb128 Ltmp1609-Lfunc_begin67
	.uleb128 Ltmp1610-Ltmp1609
	.uleb128 Ltmp1616-Lfunc_begin67
	.byte	0
Lcst_end67:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase32:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h14d9cc91c3586ce4E:
Lfunc_begin68:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception68
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB118_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB118_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp1617:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7832ac13ae304cccE
Ltmp1618:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB118_14
LBB118_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp1624:
	call	qword ptr [rax]
Ltmp1625:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB118_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB118_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB118_1:
Ltmp1627:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1628:
	jmp	LBB118_2
LBB118_4:
Ltmp1619:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1620:
LBB118_2:
	ud2
LBB118_15:
Ltmp1626:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB118_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB118_6:
Ltmp1621:
Ltmp1622:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1623:
	test	rax, rax
	je	LBB118_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB118_11
	jmp	LBB118_14
LBB118_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB118_11
	jmp	LBB118_14
LBB118_17:
Ltmp1629:
	mov	r14, rax
	jmp	LBB118_16
Lfunc_end68:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table118:
Lexception68:
	.byte	255
	.byte	155
	.uleb128 Lttbase33-Lttbaseref33
Lttbaseref33:
	.byte	1
	.uleb128 Lcst_end68-Lcst_begin68
Lcst_begin68:
	.uleb128 Ltmp1617-Lfunc_begin68
	.uleb128 Ltmp1618-Ltmp1617
	.uleb128 Ltmp1621-Lfunc_begin68
	.byte	3
	.uleb128 Ltmp1624-Lfunc_begin68
	.uleb128 Ltmp1625-Ltmp1624
	.uleb128 Ltmp1626-Lfunc_begin68
	.byte	0
	.uleb128 Ltmp1627-Lfunc_begin68
	.uleb128 Ltmp1628-Ltmp1627
	.uleb128 Ltmp1629-Lfunc_begin68
	.byte	0
	.uleb128 Ltmp1619-Lfunc_begin68
	.uleb128 Ltmp1620-Ltmp1619
	.uleb128 Ltmp1621-Lfunc_begin68
	.byte	3
	.uleb128 Ltmp1620-Lfunc_begin68
	.uleb128 Ltmp1622-Ltmp1620
	.byte	0
	.byte	0
	.uleb128 Ltmp1622-Lfunc_begin68
	.uleb128 Ltmp1623-Ltmp1622
	.uleb128 Ltmp1629-Lfunc_begin68
	.byte	0
Lcst_end68:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase33:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h174f827c5512d44aE:
Lfunc_begin69:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception69
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB119_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp1630:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1631:
	test	rax, rax
	je	LBB119_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB119_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp1632:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h1ea365bec2d0444aE
Ltmp1633:
LBB119_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB119_9
LBB119_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp1641:
	call	qword ptr [rax]
Ltmp1642:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB119_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB119_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp1644:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1645:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB119_11:
Ltmp1646:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1647:
	jmp	LBB119_14
LBB119_12:
Ltmp1636:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1637:
	jmp	LBB119_14
LBB119_13:
Ltmp1634:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1635:
LBB119_14:
	ud2
LBB119_15:
Ltmp1643:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB119_21
LBB119_16:
Ltmp1638:
Ltmp1639:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1640:
	test	rax, rax
	je	LBB119_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB119_6
	jmp	LBB119_9
LBB119_20:
Ltmp1648:
	mov	r14, rax
LBB119_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end69:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table119:
Lexception69:
	.byte	255
	.byte	155
	.uleb128 Lttbase34-Lttbaseref34
Lttbaseref34:
	.byte	1
	.uleb128 Lcst_end69-Lcst_begin69
Lcst_begin69:
	.uleb128 Ltmp1630-Lfunc_begin69
	.uleb128 Ltmp1633-Ltmp1630
	.uleb128 Ltmp1638-Lfunc_begin69
	.byte	3
	.uleb128 Ltmp1641-Lfunc_begin69
	.uleb128 Ltmp1642-Ltmp1641
	.uleb128 Ltmp1643-Lfunc_begin69
	.byte	0
	.uleb128 Ltmp1644-Lfunc_begin69
	.uleb128 Ltmp1647-Ltmp1644
	.uleb128 Ltmp1648-Lfunc_begin69
	.byte	0
	.uleb128 Ltmp1636-Lfunc_begin69
	.uleb128 Ltmp1635-Ltmp1636
	.uleb128 Ltmp1638-Lfunc_begin69
	.byte	3
	.uleb128 Ltmp1639-Lfunc_begin69
	.uleb128 Ltmp1640-Ltmp1639
	.uleb128 Ltmp1648-Lfunc_begin69
	.byte	0
	.uleb128 Ltmp1640-Lfunc_begin69
	.uleb128 Lfunc_end69-Ltmp1640
	.byte	0
	.byte	0
Lcst_end69:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase34:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h1c18cb6f87558ad0E:
Lfunc_begin70:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception70
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 640
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 240], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 208], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movdqa	xmmword ptr [rsp + 192], xmm1
	movq	r15, xmm1
	test	r15, r15
	je	LBB120_1
	mov	rbx, rdi
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 176], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 160], xmm0
	mov	r14, qword ptr [rdi + 296]
Ltmp1649:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1650:
	test	rax, rax
	je	LBB120_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB120_7
	pshufd	xmm0, xmmword ptr [rsp + 192], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 56], r15
	mov	qword ptr [rsp + 64], rax
	movaps	xmm0, xmmword ptr [rsp + 240]
	movups	xmmword ptr [rsp + 72], xmm0
	movaps	xmm0, xmmword ptr [rsp + 224]
	movups	xmmword ptr [rsp + 88], xmm0
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 104], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 120], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 136], xmm0
	mov	qword ptr [rsp + 152], r14
Ltmp1651:
	lea	rdi, [rsp + 256]
	lea	rsi, [rsp + 56]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hfb786e3748f8012eE
Ltmp1652:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movaps	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmm4, xmmword ptr [rsp + 320]
	movaps	xmm5, xmmword ptr [rsp + 336]
	mov	rax, qword ptr [rsp + 352]
	mov	rcx, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 56], rcx
	mov	rcx, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 64], rcx
	mov	rcx, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 72], rcx
	movaps	xmmword ptr [rsp + 448], xmm0
	movdqa	xmmword ptr [rsp + 464], xmm1
	movaps	xmmword ptr [rsp + 496], xmm3
	movaps	xmmword ptr [rsp + 480], xmm2
	movaps	xmmword ptr [rsp + 528], xmm5
	movaps	xmmword ptr [rsp + 512], xmm4
	mov	qword ptr [rsp + 544], rax
	mov	rax, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 56]
	mov	rcx, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 560], rcx
	mov	qword ptr [rsp + 552], rax
	mov	eax, 1
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jb	LBB120_16
LBB120_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1660:
	call	qword ptr [rax]
Ltmp1661:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB120_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB120_16:
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp1663:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1664:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB120_1:
Ltmp1665:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1666:
	jmp	LBB120_2
LBB120_5:
Ltmp1655:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1656:
	jmp	LBB120_2
LBB120_7:
Ltmp1653:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1654:
LBB120_2:
	ud2
LBB120_18:
Ltmp1662:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB120_19
LBB120_8:
Ltmp1657:
Ltmp1658:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1659:
	mov	qword ptr [rsp + 392], rax
	mov	qword ptr [rsp + 400], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jae	LBB120_13
	jmp	LBB120_16
LBB120_20:
Ltmp1667:
	mov	r14, rax
LBB120_19:
	lea	rdi, [rsp + 256]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end70:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table120:
Lexception70:
	.byte	255
	.byte	155
	.uleb128 Lttbase35-Lttbaseref35
Lttbaseref35:
	.byte	1
	.uleb128 Lcst_end70-Lcst_begin70
Lcst_begin70:
	.uleb128 Ltmp1649-Lfunc_begin70
	.uleb128 Ltmp1652-Ltmp1649
	.uleb128 Ltmp1657-Lfunc_begin70
	.byte	3
	.uleb128 Ltmp1660-Lfunc_begin70
	.uleb128 Ltmp1661-Ltmp1660
	.uleb128 Ltmp1662-Lfunc_begin70
	.byte	0
	.uleb128 Ltmp1661-Lfunc_begin70
	.uleb128 Ltmp1663-Ltmp1661
	.byte	0
	.byte	0
	.uleb128 Ltmp1663-Lfunc_begin70
	.uleb128 Ltmp1666-Ltmp1663
	.uleb128 Ltmp1667-Lfunc_begin70
	.byte	0
	.uleb128 Ltmp1655-Lfunc_begin70
	.uleb128 Ltmp1654-Ltmp1655
	.uleb128 Ltmp1657-Lfunc_begin70
	.byte	3
	.uleb128 Ltmp1654-Lfunc_begin70
	.uleb128 Ltmp1658-Ltmp1654
	.byte	0
	.byte	0
	.uleb128 Ltmp1658-Lfunc_begin70
	.uleb128 Ltmp1659-Ltmp1658
	.uleb128 Ltmp1667-Lfunc_begin70
	.byte	0
	.uleb128 Ltmp1659-Lfunc_begin70
	.uleb128 Lfunc_end70-Ltmp1659
	.byte	0
	.byte	0
Lcst_end70:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase35:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h213ce81085afd2edE:
Lfunc_begin71:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception71
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB121_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp1668:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1669:
	test	rax, rax
	je	LBB121_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB121_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp1670:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hd3310eccc434e7d5E
Ltmp1671:
LBB121_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB121_9
LBB121_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp1679:
	call	qword ptr [rax]
Ltmp1680:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB121_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB121_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp1682:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1683:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB121_11:
Ltmp1684:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1685:
	jmp	LBB121_14
LBB121_12:
Ltmp1674:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1675:
	jmp	LBB121_14
LBB121_13:
Ltmp1672:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1673:
LBB121_14:
	ud2
LBB121_15:
Ltmp1681:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB121_21
LBB121_16:
Ltmp1676:
Ltmp1677:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1678:
	test	rax, rax
	je	LBB121_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB121_6
	jmp	LBB121_9
LBB121_20:
Ltmp1686:
	mov	r14, rax
LBB121_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end71:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table121:
Lexception71:
	.byte	255
	.byte	155
	.uleb128 Lttbase36-Lttbaseref36
Lttbaseref36:
	.byte	1
	.uleb128 Lcst_end71-Lcst_begin71
Lcst_begin71:
	.uleb128 Ltmp1668-Lfunc_begin71
	.uleb128 Ltmp1671-Ltmp1668
	.uleb128 Ltmp1676-Lfunc_begin71
	.byte	3
	.uleb128 Ltmp1679-Lfunc_begin71
	.uleb128 Ltmp1680-Ltmp1679
	.uleb128 Ltmp1681-Lfunc_begin71
	.byte	0
	.uleb128 Ltmp1682-Lfunc_begin71
	.uleb128 Ltmp1685-Ltmp1682
	.uleb128 Ltmp1686-Lfunc_begin71
	.byte	0
	.uleb128 Ltmp1674-Lfunc_begin71
	.uleb128 Ltmp1673-Ltmp1674
	.uleb128 Ltmp1676-Lfunc_begin71
	.byte	3
	.uleb128 Ltmp1677-Lfunc_begin71
	.uleb128 Ltmp1678-Ltmp1677
	.uleb128 Ltmp1686-Lfunc_begin71
	.byte	0
	.uleb128 Ltmp1678-Lfunc_begin71
	.uleb128 Lfunc_end71-Ltmp1678
	.byte	0
	.byte	0
Lcst_end71:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase36:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h23a755ad2f7f77cfE:
Lfunc_begin72:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception72
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 128]
	movdqu	xmm0, xmmword ptr [rdi + 144]
	pxor	xmm2, xmm2
	movdqu	xmmword ptr [rdi + 128], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB122_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB122_4
	mov	r9, qword ptr [rbx + 176]
	movdqu	xmm1, xmmword ptr [rbx + 160]
	movd	r11d, xmm1
	pshufd	xmm2, xmm1, 231
	movd	r8d, xmm2
	pshufd	xmm2, xmm1, 78
	movd	r10d, xmm2
	pshufd	xmm1, xmm1, 229
	movd	ecx, xmm1
	pshufd	xmm1, xmm0, 231
	movd	edx, xmm1
	pshufd	xmm1, xmm0, 78
	movd	edi, xmm1
	movq	rax, xmm0
	movd	xmm0, edi
	movd	xmm1, edx
	punpckldq	xmm0, xmm1
	movd	xmm1, r11d
	movd	xmm2, ecx
	punpckldq	xmm1, xmm2
	punpcklqdq	xmm0, xmm1
	movd	xmm1, r10d
	movd	xmm2, r8d
	punpckldq	xmm1, xmm2
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	movdqu	xmmword ptr [rsp + 232], xmm0
	movq	qword ptr [rsp + 248], xmm1
Ltmp1687:
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 232]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7e7cdc163fa85702E
Ltmp1688:
	movdqa	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movdqa	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB122_13
LBB122_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1694:
	call	qword ptr [rax]
Ltmp1695:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB122_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB122_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 184], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB122_1:
Ltmp1697:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1698:
	jmp	LBB122_2
LBB122_4:
Ltmp1689:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1690:
LBB122_2:
	ud2
LBB122_14:
Ltmp1696:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movdqa	xmmword ptr [rbx], xmm0
LBB122_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB122_5:
Ltmp1691:
Ltmp1692:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1693:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB122_10
	jmp	LBB122_13
LBB122_16:
Ltmp1699:
	mov	r14, rax
	jmp	LBB122_15
Lfunc_end72:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table122:
Lexception72:
	.byte	255
	.byte	155
	.uleb128 Lttbase37-Lttbaseref37
Lttbaseref37:
	.byte	1
	.uleb128 Lcst_end72-Lcst_begin72
Lcst_begin72:
	.uleb128 Ltmp1687-Lfunc_begin72
	.uleb128 Ltmp1688-Ltmp1687
	.uleb128 Ltmp1691-Lfunc_begin72
	.byte	3
	.uleb128 Ltmp1694-Lfunc_begin72
	.uleb128 Ltmp1695-Ltmp1694
	.uleb128 Ltmp1696-Lfunc_begin72
	.byte	0
	.uleb128 Ltmp1697-Lfunc_begin72
	.uleb128 Ltmp1698-Ltmp1697
	.uleb128 Ltmp1699-Lfunc_begin72
	.byte	0
	.uleb128 Ltmp1689-Lfunc_begin72
	.uleb128 Ltmp1690-Ltmp1689
	.uleb128 Ltmp1691-Lfunc_begin72
	.byte	3
	.uleb128 Ltmp1690-Lfunc_begin72
	.uleb128 Ltmp1692-Ltmp1690
	.byte	0
	.byte	0
	.uleb128 Ltmp1692-Lfunc_begin72
	.uleb128 Ltmp1693-Ltmp1692
	.uleb128 Ltmp1699-Lfunc_begin72
	.byte	0
Lcst_end72:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase37:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h24d57b7639b8f4c6E:
Lfunc_begin73:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception73
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB123_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp1700:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1701:
	test	rax, rax
	je	LBB123_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB123_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp1702:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h3e6e22037d084d63E
Ltmp1703:
LBB123_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB123_9
LBB123_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp1711:
	call	qword ptr [rax]
Ltmp1712:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB123_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB123_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp1714:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1715:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB123_11:
Ltmp1716:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1717:
	jmp	LBB123_14
LBB123_12:
Ltmp1706:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1707:
	jmp	LBB123_14
LBB123_13:
Ltmp1704:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1705:
LBB123_14:
	ud2
LBB123_15:
Ltmp1713:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB123_21
LBB123_16:
Ltmp1708:
Ltmp1709:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1710:
	test	rax, rax
	je	LBB123_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB123_6
	jmp	LBB123_9
LBB123_20:
Ltmp1718:
	mov	r14, rax
LBB123_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end73:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table123:
Lexception73:
	.byte	255
	.byte	155
	.uleb128 Lttbase38-Lttbaseref38
Lttbaseref38:
	.byte	1
	.uleb128 Lcst_end73-Lcst_begin73
Lcst_begin73:
	.uleb128 Ltmp1700-Lfunc_begin73
	.uleb128 Ltmp1703-Ltmp1700
	.uleb128 Ltmp1708-Lfunc_begin73
	.byte	3
	.uleb128 Ltmp1711-Lfunc_begin73
	.uleb128 Ltmp1712-Ltmp1711
	.uleb128 Ltmp1713-Lfunc_begin73
	.byte	0
	.uleb128 Ltmp1714-Lfunc_begin73
	.uleb128 Ltmp1717-Ltmp1714
	.uleb128 Ltmp1718-Lfunc_begin73
	.byte	0
	.uleb128 Ltmp1706-Lfunc_begin73
	.uleb128 Ltmp1705-Ltmp1706
	.uleb128 Ltmp1708-Lfunc_begin73
	.byte	3
	.uleb128 Ltmp1709-Lfunc_begin73
	.uleb128 Ltmp1710-Ltmp1709
	.uleb128 Ltmp1718-Lfunc_begin73
	.byte	0
	.uleb128 Ltmp1710-Lfunc_begin73
	.uleb128 Lfunc_end73-Ltmp1710
	.byte	0
	.byte	0
Lcst_end73:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase38:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h25927f3b61816538E:
Lfunc_begin74:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception74
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 192], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 176], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 160], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 96], xmm0
	movups	xmm0, xmmword ptr [rdi + 312]
	movaps	xmmword ptr [rsp + 144], xmm0
	movups	xmm0, xmmword ptr [rdi + 296]
	movaps	xmmword ptr [rsp + 80], xmm0
	movups	xmm0, xmmword ptr [rdi + 344]
	movaps	xmmword ptr [rsp + 128], xmm0
	movups	xmm0, xmmword ptr [rdi + 328]
	movaps	xmmword ptr [rsp + 64], xmm0
	mov	rax, qword ptr [rdi + 376]
	mov	qword ptr [rsp + 272], rax
	mov	rax, qword ptr [rdi + 368]
	mov	qword ptr [rsp + 264], rax
	mov	rax, qword ptr [rdi + 360]
	mov	qword ptr [rsp + 256], rax
	movdqa	xmmword ptr [rsp + 112], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB124_1
	mov	rbx, rdi
	mov	rax, qword ptr [rsp + 272]
	mov	qword ptr [rsp + 248], rax
	mov	rcx, qword ptr [rsp + 256]
	mov	rdx, qword ptr [rsp + 264]
	mov	qword ptr [rsp + 240], rdx
	mov	qword ptr [rsp + 232], rcx
	mov	qword ptr [rsp + 56], rax
	mov	qword ptr [rsp + 48], rdx
	mov	qword ptr [rsp + 40], rcx
Ltmp1719:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1720:
	test	rax, rax
	je	LBB124_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB124_7
	pshufd	xmm0, xmmword ptr [rsp + 112], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 456], r14
	mov	qword ptr [rsp + 464], rax
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 472], xmm0
	movaps	xmm0, xmmword ptr [rsp + 192]
	movups	xmmword ptr [rsp + 488], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 504], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movups	xmmword ptr [rsp + 520], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 536], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movups	xmmword ptr [rsp + 552], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movups	xmmword ptr [rsp + 568], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movups	xmmword ptr [rsp + 584], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movups	xmmword ptr [rsp + 600], xmm0
	mov	rax, qword ptr [rsp + 40]
	mov	rcx, qword ptr [rsp + 48]
	mov	qword ptr [rsp + 616], rax
	mov	qword ptr [rsp + 624], rcx
	mov	rax, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 632], rax
Ltmp1721:
	lea	rdi, [rsp + 640]
	lea	rsi, [rsp + 456]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h2dcc77ab8eef10feE
Ltmp1722:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movdqa	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	movaps	xmm4, xmmword ptr [rsp + 704]
	movaps	xmm5, xmmword ptr [rsp + 720]
	movaps	xmm6, xmmword ptr [rsp + 736]
	movaps	xmm7, xmmword ptr [rsp + 752]
	movaps	xmmword ptr [rsp + 320], xmm0
	movdqa	xmmword ptr [rsp + 336], xmm1
	movaps	xmmword ptr [rsp + 368], xmm3
	movaps	xmmword ptr [rsp + 352], xmm2
	movaps	xmmword ptr [rsp + 400], xmm5
	movaps	xmmword ptr [rsp + 384], xmm4
	movaps	xmmword ptr [rsp + 432], xmm7
	movaps	xmmword ptr [rsp + 416], xmm6
	mov	eax, 1
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jb	LBB124_16
LBB124_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1730:
	call	qword ptr [rax]
Ltmp1731:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB124_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB124_16:
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp1733:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1734:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB124_1:
Ltmp1735:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1736:
	jmp	LBB124_2
LBB124_5:
Ltmp1725:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 456]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1726:
	jmp	LBB124_2
LBB124_7:
Ltmp1723:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1724:
LBB124_2:
	ud2
LBB124_18:
Ltmp1732:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB124_19
LBB124_8:
Ltmp1727:
Ltmp1728:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1729:
	mov	qword ptr [rsp + 264], rax
	mov	qword ptr [rsp + 272], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jae	LBB124_13
	jmp	LBB124_16
LBB124_20:
Ltmp1737:
	mov	r14, rax
LBB124_19:
	lea	rdi, [rsp + 456]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end74:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table124:
Lexception74:
	.byte	255
	.byte	155
	.uleb128 Lttbase39-Lttbaseref39
Lttbaseref39:
	.byte	1
	.uleb128 Lcst_end74-Lcst_begin74
Lcst_begin74:
	.uleb128 Ltmp1719-Lfunc_begin74
	.uleb128 Ltmp1722-Ltmp1719
	.uleb128 Ltmp1727-Lfunc_begin74
	.byte	3
	.uleb128 Ltmp1730-Lfunc_begin74
	.uleb128 Ltmp1731-Ltmp1730
	.uleb128 Ltmp1732-Lfunc_begin74
	.byte	0
	.uleb128 Ltmp1731-Lfunc_begin74
	.uleb128 Ltmp1733-Ltmp1731
	.byte	0
	.byte	0
	.uleb128 Ltmp1733-Lfunc_begin74
	.uleb128 Ltmp1736-Ltmp1733
	.uleb128 Ltmp1737-Lfunc_begin74
	.byte	0
	.uleb128 Ltmp1725-Lfunc_begin74
	.uleb128 Ltmp1724-Ltmp1725
	.uleb128 Ltmp1727-Lfunc_begin74
	.byte	3
	.uleb128 Ltmp1724-Lfunc_begin74
	.uleb128 Ltmp1728-Ltmp1724
	.byte	0
	.byte	0
	.uleb128 Ltmp1728-Lfunc_begin74
	.uleb128 Ltmp1729-Ltmp1728
	.uleb128 Ltmp1737-Lfunc_begin74
	.byte	0
	.uleb128 Ltmp1729-Lfunc_begin74
	.uleb128 Lfunc_end74-Ltmp1729
	.byte	0
	.byte	0
Lcst_end74:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase39:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h2f5ce5cc9ac7e4fbE:
Lfunc_begin75:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception75
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB125_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB125_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp1738:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h333b34283e7d4003E
Ltmp1739:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB125_14
LBB125_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp1745:
	call	qword ptr [rax]
Ltmp1746:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB125_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB125_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB125_1:
Ltmp1748:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1749:
	jmp	LBB125_2
LBB125_4:
Ltmp1740:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1741:
LBB125_2:
	ud2
LBB125_15:
Ltmp1747:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB125_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB125_6:
Ltmp1742:
Ltmp1743:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1744:
	test	rax, rax
	je	LBB125_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB125_11
	jmp	LBB125_14
LBB125_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB125_11
	jmp	LBB125_14
LBB125_17:
Ltmp1750:
	mov	r14, rax
	jmp	LBB125_16
Lfunc_end75:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table125:
Lexception75:
	.byte	255
	.byte	155
	.uleb128 Lttbase40-Lttbaseref40
Lttbaseref40:
	.byte	1
	.uleb128 Lcst_end75-Lcst_begin75
Lcst_begin75:
	.uleb128 Ltmp1738-Lfunc_begin75
	.uleb128 Ltmp1739-Ltmp1738
	.uleb128 Ltmp1742-Lfunc_begin75
	.byte	3
	.uleb128 Ltmp1745-Lfunc_begin75
	.uleb128 Ltmp1746-Ltmp1745
	.uleb128 Ltmp1747-Lfunc_begin75
	.byte	0
	.uleb128 Ltmp1748-Lfunc_begin75
	.uleb128 Ltmp1749-Ltmp1748
	.uleb128 Ltmp1750-Lfunc_begin75
	.byte	0
	.uleb128 Ltmp1740-Lfunc_begin75
	.uleb128 Ltmp1741-Ltmp1740
	.uleb128 Ltmp1742-Lfunc_begin75
	.byte	3
	.uleb128 Ltmp1741-Lfunc_begin75
	.uleb128 Ltmp1743-Ltmp1741
	.byte	0
	.byte	0
	.uleb128 Ltmp1743-Lfunc_begin75
	.uleb128 Ltmp1744-Ltmp1743
	.uleb128 Ltmp1750-Lfunc_begin75
	.byte	0
Lcst_end75:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase40:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h37ece9d5eda5e307E:
Lfunc_begin76:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception76
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB126_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp1751:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1752:
	test	rax, rax
	je	LBB126_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB126_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp1753:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h35cb1e0ec72c1b47E
Ltmp1754:
LBB126_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB126_9
LBB126_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp1762:
	call	qword ptr [rax]
Ltmp1763:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB126_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB126_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp1765:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1766:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB126_11:
Ltmp1767:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1768:
	jmp	LBB126_14
LBB126_12:
Ltmp1757:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1758:
	jmp	LBB126_14
LBB126_13:
Ltmp1755:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1756:
LBB126_14:
	ud2
LBB126_15:
Ltmp1764:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB126_21
LBB126_16:
Ltmp1759:
Ltmp1760:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1761:
	test	rax, rax
	je	LBB126_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB126_6
	jmp	LBB126_9
LBB126_20:
Ltmp1769:
	mov	r14, rax
LBB126_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end76:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table126:
Lexception76:
	.byte	255
	.byte	155
	.uleb128 Lttbase41-Lttbaseref41
Lttbaseref41:
	.byte	1
	.uleb128 Lcst_end76-Lcst_begin76
Lcst_begin76:
	.uleb128 Ltmp1751-Lfunc_begin76
	.uleb128 Ltmp1754-Ltmp1751
	.uleb128 Ltmp1759-Lfunc_begin76
	.byte	3
	.uleb128 Ltmp1762-Lfunc_begin76
	.uleb128 Ltmp1763-Ltmp1762
	.uleb128 Ltmp1764-Lfunc_begin76
	.byte	0
	.uleb128 Ltmp1765-Lfunc_begin76
	.uleb128 Ltmp1768-Ltmp1765
	.uleb128 Ltmp1769-Lfunc_begin76
	.byte	0
	.uleb128 Ltmp1757-Lfunc_begin76
	.uleb128 Ltmp1756-Ltmp1757
	.uleb128 Ltmp1759-Lfunc_begin76
	.byte	3
	.uleb128 Ltmp1760-Lfunc_begin76
	.uleb128 Ltmp1761-Ltmp1760
	.uleb128 Ltmp1769-Lfunc_begin76
	.byte	0
	.uleb128 Ltmp1761-Lfunc_begin76
	.uleb128 Lfunc_end76-Ltmp1761
	.byte	0
	.byte	0
Lcst_end76:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase41:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3b384fef557a344aE:
Lfunc_begin77:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception77
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB127_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB127_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp1770:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hed49352b02a73d05E
Ltmp1771:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB127_14
LBB127_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp1777:
	call	qword ptr [rax]
Ltmp1778:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB127_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB127_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB127_1:
Ltmp1780:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1781:
	jmp	LBB127_2
LBB127_4:
Ltmp1772:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1773:
LBB127_2:
	ud2
LBB127_15:
Ltmp1779:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB127_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB127_6:
Ltmp1774:
Ltmp1775:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1776:
	test	rax, rax
	je	LBB127_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB127_11
	jmp	LBB127_14
LBB127_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB127_11
	jmp	LBB127_14
LBB127_17:
Ltmp1782:
	mov	r14, rax
	jmp	LBB127_16
Lfunc_end77:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table127:
Lexception77:
	.byte	255
	.byte	155
	.uleb128 Lttbase42-Lttbaseref42
Lttbaseref42:
	.byte	1
	.uleb128 Lcst_end77-Lcst_begin77
Lcst_begin77:
	.uleb128 Ltmp1770-Lfunc_begin77
	.uleb128 Ltmp1771-Ltmp1770
	.uleb128 Ltmp1774-Lfunc_begin77
	.byte	3
	.uleb128 Ltmp1777-Lfunc_begin77
	.uleb128 Ltmp1778-Ltmp1777
	.uleb128 Ltmp1779-Lfunc_begin77
	.byte	0
	.uleb128 Ltmp1780-Lfunc_begin77
	.uleb128 Ltmp1781-Ltmp1780
	.uleb128 Ltmp1782-Lfunc_begin77
	.byte	0
	.uleb128 Ltmp1772-Lfunc_begin77
	.uleb128 Ltmp1773-Ltmp1772
	.uleb128 Ltmp1774-Lfunc_begin77
	.byte	3
	.uleb128 Ltmp1773-Lfunc_begin77
	.uleb128 Ltmp1775-Ltmp1773
	.byte	0
	.byte	0
	.uleb128 Ltmp1775-Lfunc_begin77
	.uleb128 Ltmp1776-Ltmp1775
	.uleb128 Ltmp1782-Lfunc_begin77
	.byte	0
Lcst_end77:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase42:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h3be42809eb5e4d83E:
Lfunc_begin78:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception78
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 640
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 240], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 208], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movdqa	xmmword ptr [rsp + 192], xmm1
	movq	r15, xmm1
	test	r15, r15
	je	LBB128_1
	mov	rbx, rdi
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 176], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 160], xmm0
	mov	r14, qword ptr [rdi + 296]
Ltmp1783:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1784:
	test	rax, rax
	je	LBB128_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB128_7
	pshufd	xmm0, xmmword ptr [rsp + 192], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 56], r15
	mov	qword ptr [rsp + 64], rax
	movaps	xmm0, xmmword ptr [rsp + 240]
	movups	xmmword ptr [rsp + 72], xmm0
	movaps	xmm0, xmmword ptr [rsp + 224]
	movups	xmmword ptr [rsp + 88], xmm0
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 104], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 120], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 136], xmm0
	mov	qword ptr [rsp + 152], r14
Ltmp1785:
	lea	rdi, [rsp + 256]
	lea	rsi, [rsp + 56]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h481b8c02e05c9cc4E
Ltmp1786:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movaps	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmm4, xmmword ptr [rsp + 320]
	movaps	xmm5, xmmword ptr [rsp + 336]
	mov	rax, qword ptr [rsp + 352]
	mov	rcx, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 56], rcx
	mov	rcx, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 64], rcx
	mov	rcx, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 72], rcx
	movaps	xmmword ptr [rsp + 448], xmm0
	movdqa	xmmword ptr [rsp + 464], xmm1
	movaps	xmmword ptr [rsp + 496], xmm3
	movaps	xmmword ptr [rsp + 480], xmm2
	movaps	xmmword ptr [rsp + 528], xmm5
	movaps	xmmword ptr [rsp + 512], xmm4
	mov	qword ptr [rsp + 544], rax
	mov	rax, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 56]
	mov	rcx, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 560], rcx
	mov	qword ptr [rsp + 552], rax
	mov	eax, 1
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jb	LBB128_16
LBB128_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1794:
	call	qword ptr [rax]
Ltmp1795:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB128_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB128_16:
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp1797:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1798:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB128_1:
Ltmp1799:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1800:
	jmp	LBB128_2
LBB128_5:
Ltmp1789:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1790:
	jmp	LBB128_2
LBB128_7:
Ltmp1787:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1788:
LBB128_2:
	ud2
LBB128_18:
Ltmp1796:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB128_19
LBB128_8:
Ltmp1791:
Ltmp1792:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1793:
	mov	qword ptr [rsp + 392], rax
	mov	qword ptr [rsp + 400], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jae	LBB128_13
	jmp	LBB128_16
LBB128_20:
Ltmp1801:
	mov	r14, rax
LBB128_19:
	lea	rdi, [rsp + 256]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end78:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table128:
Lexception78:
	.byte	255
	.byte	155
	.uleb128 Lttbase43-Lttbaseref43
Lttbaseref43:
	.byte	1
	.uleb128 Lcst_end78-Lcst_begin78
Lcst_begin78:
	.uleb128 Ltmp1783-Lfunc_begin78
	.uleb128 Ltmp1786-Ltmp1783
	.uleb128 Ltmp1791-Lfunc_begin78
	.byte	3
	.uleb128 Ltmp1794-Lfunc_begin78
	.uleb128 Ltmp1795-Ltmp1794
	.uleb128 Ltmp1796-Lfunc_begin78
	.byte	0
	.uleb128 Ltmp1795-Lfunc_begin78
	.uleb128 Ltmp1797-Ltmp1795
	.byte	0
	.byte	0
	.uleb128 Ltmp1797-Lfunc_begin78
	.uleb128 Ltmp1800-Ltmp1797
	.uleb128 Ltmp1801-Lfunc_begin78
	.byte	0
	.uleb128 Ltmp1789-Lfunc_begin78
	.uleb128 Ltmp1788-Ltmp1789
	.uleb128 Ltmp1791-Lfunc_begin78
	.byte	3
	.uleb128 Ltmp1788-Lfunc_begin78
	.uleb128 Ltmp1792-Ltmp1788
	.byte	0
	.byte	0
	.uleb128 Ltmp1792-Lfunc_begin78
	.uleb128 Ltmp1793-Ltmp1792
	.uleb128 Ltmp1801-Lfunc_begin78
	.byte	0
	.uleb128 Ltmp1793-Lfunc_begin78
	.uleb128 Lfunc_end78-Ltmp1793
	.byte	0
	.byte	0
Lcst_end78:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase43:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h46716daff3ffa871E:
Lfunc_begin79:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception79
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB129_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp1802:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1803:
	test	rax, rax
	je	LBB129_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB129_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp1804:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h47120a75e9270438E
Ltmp1805:
LBB129_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB129_9
LBB129_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp1813:
	call	qword ptr [rax]
Ltmp1814:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB129_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB129_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp1816:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1817:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB129_11:
Ltmp1818:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1819:
	jmp	LBB129_14
LBB129_12:
Ltmp1808:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1809:
	jmp	LBB129_14
LBB129_13:
Ltmp1806:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1807:
LBB129_14:
	ud2
LBB129_15:
Ltmp1815:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB129_21
LBB129_16:
Ltmp1810:
Ltmp1811:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1812:
	test	rax, rax
	je	LBB129_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB129_6
	jmp	LBB129_9
LBB129_20:
Ltmp1820:
	mov	r14, rax
LBB129_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end79:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table129:
Lexception79:
	.byte	255
	.byte	155
	.uleb128 Lttbase44-Lttbaseref44
Lttbaseref44:
	.byte	1
	.uleb128 Lcst_end79-Lcst_begin79
Lcst_begin79:
	.uleb128 Ltmp1802-Lfunc_begin79
	.uleb128 Ltmp1805-Ltmp1802
	.uleb128 Ltmp1810-Lfunc_begin79
	.byte	3
	.uleb128 Ltmp1813-Lfunc_begin79
	.uleb128 Ltmp1814-Ltmp1813
	.uleb128 Ltmp1815-Lfunc_begin79
	.byte	0
	.uleb128 Ltmp1816-Lfunc_begin79
	.uleb128 Ltmp1819-Ltmp1816
	.uleb128 Ltmp1820-Lfunc_begin79
	.byte	0
	.uleb128 Ltmp1808-Lfunc_begin79
	.uleb128 Ltmp1807-Ltmp1808
	.uleb128 Ltmp1810-Lfunc_begin79
	.byte	3
	.uleb128 Ltmp1811-Lfunc_begin79
	.uleb128 Ltmp1812-Ltmp1811
	.uleb128 Ltmp1820-Lfunc_begin79
	.byte	0
	.uleb128 Ltmp1812-Lfunc_begin79
	.uleb128 Lfunc_end79-Ltmp1812
	.byte	0
	.byte	0
Lcst_end79:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase44:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h48c7490fa79e5e5eE:
Lfunc_begin80:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception80
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 768
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 320], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 304], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 288], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 272], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 240], xmm0
	mov	rax, qword ptr [rdi + 312]
	mov	qword ptr [rsp + 400], rax
	mov	rax, qword ptr [rdi + 304]
	mov	qword ptr [rsp + 392], rax
	mov	rax, qword ptr [rdi + 296]
	mov	qword ptr [rsp + 384], rax
	movdqa	xmmword ptr [rsp + 256], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB130_1
	mov	rbx, rdi
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 352], rax
	mov	rcx, qword ptr [rsp + 384]
	mov	rdx, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 344], rdx
	mov	qword ptr [rsp + 336], rcx
	mov	qword ptr [rsp + 376], rax
	mov	qword ptr [rsp + 368], rdx
	mov	qword ptr [rsp + 360], rcx
	mov	qword ptr [rsp + 400], rax
	mov	qword ptr [rsp + 392], rdx
	mov	qword ptr [rsp + 384], rcx
	mov	qword ptr [rsp + 56], rax
	mov	qword ptr [rsp + 48], rdx
	mov	qword ptr [rsp + 40], rcx
Ltmp1821:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1822:
	test	rax, rax
	je	LBB130_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB130_7
	pshufd	xmm0, xmmword ptr [rsp + 256], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 616], r14
	mov	qword ptr [rsp + 624], rax
	movaps	xmm0, xmmword ptr [rsp + 320]
	movups	xmmword ptr [rsp + 632], xmm0
	movaps	xmm0, xmmword ptr [rsp + 304]
	movups	xmmword ptr [rsp + 648], xmm0
	movaps	xmm0, xmmword ptr [rsp + 288]
	movups	xmmword ptr [rsp + 664], xmm0
	movaps	xmm0, xmmword ptr [rsp + 240]
	movups	xmmword ptr [rsp + 680], xmm0
	movaps	xmm0, xmmword ptr [rsp + 272]
	movups	xmmword ptr [rsp + 696], xmm0
	mov	rax, qword ptr [rsp + 40]
	mov	rcx, qword ptr [rsp + 48]
	mov	qword ptr [rsp + 712], rax
	mov	qword ptr [rsp + 720], rcx
	mov	rax, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 728], rax
Ltmp1823:
	lea	rdi, [rsp + 64]
	lea	rsi, [rsp + 616]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h88842e955f57968cE
Ltmp1824:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	movaps	xmm4, xmmword ptr [rsp + 128]
	movaps	xmm5, xmmword ptr [rsp + 144]
	mov	rax, qword ptr [rsp + 176]
	movaps	xmm6, xmmword ptr [rsp + 160]
	mov	rcx, qword ptr [rsp + 184]
	movaps	xmmword ptr [rsp + 64], xmm6
	mov	qword ptr [rsp + 80], rax
	movaps	xmmword ptr [rsp + 448], xmm0
	movdqa	xmmword ptr [rsp + 464], xmm1
	movaps	xmmword ptr [rsp + 496], xmm3
	movaps	xmmword ptr [rsp + 480], xmm2
	movaps	xmmword ptr [rsp + 528], xmm5
	movaps	xmmword ptr [rsp + 512], xmm4
	mov	rax, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 560], rax
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmmword ptr [rsp + 544], xmm0
	mov	qword ptr [rsp + 568], rcx
	mov	eax, 1
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jb	LBB130_16
LBB130_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1832:
	call	qword ptr [rax]
Ltmp1833:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB130_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB130_16:
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp1835:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1836:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB130_1:
Ltmp1837:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1838:
	jmp	LBB130_2
LBB130_5:
Ltmp1827:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 64]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1828:
	jmp	LBB130_2
LBB130_7:
Ltmp1825:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1826:
LBB130_2:
	ud2
LBB130_18:
Ltmp1834:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB130_19
LBB130_8:
Ltmp1829:
Ltmp1830:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1831:
	mov	qword ptr [rsp + 392], rax
	mov	qword ptr [rsp + 400], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jae	LBB130_13
	jmp	LBB130_16
LBB130_20:
Ltmp1839:
	mov	r14, rax
LBB130_19:
	lea	rdi, [rsp + 64]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end80:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table130:
Lexception80:
	.byte	255
	.byte	155
	.uleb128 Lttbase45-Lttbaseref45
Lttbaseref45:
	.byte	1
	.uleb128 Lcst_end80-Lcst_begin80
Lcst_begin80:
	.uleb128 Ltmp1821-Lfunc_begin80
	.uleb128 Ltmp1824-Ltmp1821
	.uleb128 Ltmp1829-Lfunc_begin80
	.byte	3
	.uleb128 Ltmp1832-Lfunc_begin80
	.uleb128 Ltmp1833-Ltmp1832
	.uleb128 Ltmp1834-Lfunc_begin80
	.byte	0
	.uleb128 Ltmp1833-Lfunc_begin80
	.uleb128 Ltmp1835-Ltmp1833
	.byte	0
	.byte	0
	.uleb128 Ltmp1835-Lfunc_begin80
	.uleb128 Ltmp1838-Ltmp1835
	.uleb128 Ltmp1839-Lfunc_begin80
	.byte	0
	.uleb128 Ltmp1827-Lfunc_begin80
	.uleb128 Ltmp1826-Ltmp1827
	.uleb128 Ltmp1829-Lfunc_begin80
	.byte	3
	.uleb128 Ltmp1826-Lfunc_begin80
	.uleb128 Ltmp1830-Ltmp1826
	.byte	0
	.byte	0
	.uleb128 Ltmp1830-Lfunc_begin80
	.uleb128 Ltmp1831-Ltmp1830
	.uleb128 Ltmp1839-Lfunc_begin80
	.byte	0
	.uleb128 Ltmp1831-Lfunc_begin80
	.uleb128 Lfunc_end80-Ltmp1831
	.byte	0
	.byte	0
Lcst_end80:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase45:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h509fdfe12c6f5a9aE:
Lfunc_begin81:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception81
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 192], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 176], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 160], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 96], xmm0
	movups	xmm0, xmmword ptr [rdi + 312]
	movaps	xmmword ptr [rsp + 144], xmm0
	movups	xmm0, xmmword ptr [rdi + 296]
	movaps	xmmword ptr [rsp + 80], xmm0
	movups	xmm0, xmmword ptr [rdi + 344]
	movaps	xmmword ptr [rsp + 128], xmm0
	movups	xmm0, xmmword ptr [rdi + 328]
	movaps	xmmword ptr [rsp + 64], xmm0
	mov	rax, qword ptr [rdi + 376]
	mov	qword ptr [rsp + 272], rax
	mov	rax, qword ptr [rdi + 368]
	mov	qword ptr [rsp + 264], rax
	mov	rax, qword ptr [rdi + 360]
	mov	qword ptr [rsp + 256], rax
	movdqa	xmmword ptr [rsp + 112], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB131_1
	mov	rbx, rdi
	mov	rax, qword ptr [rsp + 272]
	mov	qword ptr [rsp + 248], rax
	mov	rcx, qword ptr [rsp + 256]
	mov	rdx, qword ptr [rsp + 264]
	mov	qword ptr [rsp + 240], rdx
	mov	qword ptr [rsp + 232], rcx
	mov	qword ptr [rsp + 56], rax
	mov	qword ptr [rsp + 48], rdx
	mov	qword ptr [rsp + 40], rcx
Ltmp1840:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1841:
	test	rax, rax
	je	LBB131_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB131_7
	pshufd	xmm0, xmmword ptr [rsp + 112], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 456], r14
	mov	qword ptr [rsp + 464], rax
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 472], xmm0
	movaps	xmm0, xmmword ptr [rsp + 192]
	movups	xmmword ptr [rsp + 488], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 504], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movups	xmmword ptr [rsp + 520], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 536], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movups	xmmword ptr [rsp + 552], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movups	xmmword ptr [rsp + 568], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movups	xmmword ptr [rsp + 584], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movups	xmmword ptr [rsp + 600], xmm0
	mov	rax, qword ptr [rsp + 40]
	mov	rcx, qword ptr [rsp + 48]
	mov	qword ptr [rsp + 616], rax
	mov	qword ptr [rsp + 624], rcx
	mov	rax, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 632], rax
Ltmp1842:
	lea	rdi, [rsp + 640]
	lea	rsi, [rsp + 456]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h702911570b428847E
Ltmp1843:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movdqa	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	movaps	xmm4, xmmword ptr [rsp + 704]
	movaps	xmm5, xmmword ptr [rsp + 720]
	movaps	xmm6, xmmword ptr [rsp + 736]
	movaps	xmm7, xmmword ptr [rsp + 752]
	movaps	xmmword ptr [rsp + 320], xmm0
	movdqa	xmmword ptr [rsp + 336], xmm1
	movaps	xmmword ptr [rsp + 368], xmm3
	movaps	xmmword ptr [rsp + 352], xmm2
	movaps	xmmword ptr [rsp + 400], xmm5
	movaps	xmmword ptr [rsp + 384], xmm4
	movaps	xmmword ptr [rsp + 432], xmm7
	movaps	xmmword ptr [rsp + 416], xmm6
	mov	eax, 1
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jb	LBB131_16
LBB131_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1851:
	call	qword ptr [rax]
Ltmp1852:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB131_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB131_16:
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp1854:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1855:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB131_1:
Ltmp1856:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1857:
	jmp	LBB131_2
LBB131_5:
Ltmp1846:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 456]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1847:
	jmp	LBB131_2
LBB131_7:
Ltmp1844:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1845:
LBB131_2:
	ud2
LBB131_18:
Ltmp1853:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB131_19
LBB131_8:
Ltmp1848:
Ltmp1849:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1850:
	mov	qword ptr [rsp + 264], rax
	mov	qword ptr [rsp + 272], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jae	LBB131_13
	jmp	LBB131_16
LBB131_20:
Ltmp1858:
	mov	r14, rax
LBB131_19:
	lea	rdi, [rsp + 456]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end81:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table131:
Lexception81:
	.byte	255
	.byte	155
	.uleb128 Lttbase46-Lttbaseref46
Lttbaseref46:
	.byte	1
	.uleb128 Lcst_end81-Lcst_begin81
Lcst_begin81:
	.uleb128 Ltmp1840-Lfunc_begin81
	.uleb128 Ltmp1843-Ltmp1840
	.uleb128 Ltmp1848-Lfunc_begin81
	.byte	3
	.uleb128 Ltmp1851-Lfunc_begin81
	.uleb128 Ltmp1852-Ltmp1851
	.uleb128 Ltmp1853-Lfunc_begin81
	.byte	0
	.uleb128 Ltmp1852-Lfunc_begin81
	.uleb128 Ltmp1854-Ltmp1852
	.byte	0
	.byte	0
	.uleb128 Ltmp1854-Lfunc_begin81
	.uleb128 Ltmp1857-Ltmp1854
	.uleb128 Ltmp1858-Lfunc_begin81
	.byte	0
	.uleb128 Ltmp1846-Lfunc_begin81
	.uleb128 Ltmp1845-Ltmp1846
	.uleb128 Ltmp1848-Lfunc_begin81
	.byte	3
	.uleb128 Ltmp1845-Lfunc_begin81
	.uleb128 Ltmp1849-Ltmp1845
	.byte	0
	.byte	0
	.uleb128 Ltmp1849-Lfunc_begin81
	.uleb128 Ltmp1850-Ltmp1849
	.uleb128 Ltmp1858-Lfunc_begin81
	.byte	0
	.uleb128 Ltmp1850-Lfunc_begin81
	.uleb128 Lfunc_end81-Ltmp1850
	.byte	0
	.byte	0
Lcst_end81:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase46:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h5695b4ea74fc43f6E:
Lfunc_begin82:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception82
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB132_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB132_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp1859:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h3da02ce22d6600afE
Ltmp1860:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB132_14
LBB132_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp1866:
	call	qword ptr [rax]
Ltmp1867:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB132_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB132_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB132_1:
Ltmp1869:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1870:
	jmp	LBB132_2
LBB132_4:
Ltmp1861:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1862:
LBB132_2:
	ud2
LBB132_15:
Ltmp1868:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB132_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB132_6:
Ltmp1863:
Ltmp1864:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1865:
	test	rax, rax
	je	LBB132_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB132_11
	jmp	LBB132_14
LBB132_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB132_11
	jmp	LBB132_14
LBB132_17:
Ltmp1871:
	mov	r14, rax
	jmp	LBB132_16
Lfunc_end82:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table132:
Lexception82:
	.byte	255
	.byte	155
	.uleb128 Lttbase47-Lttbaseref47
Lttbaseref47:
	.byte	1
	.uleb128 Lcst_end82-Lcst_begin82
Lcst_begin82:
	.uleb128 Ltmp1859-Lfunc_begin82
	.uleb128 Ltmp1860-Ltmp1859
	.uleb128 Ltmp1863-Lfunc_begin82
	.byte	3
	.uleb128 Ltmp1866-Lfunc_begin82
	.uleb128 Ltmp1867-Ltmp1866
	.uleb128 Ltmp1868-Lfunc_begin82
	.byte	0
	.uleb128 Ltmp1869-Lfunc_begin82
	.uleb128 Ltmp1870-Ltmp1869
	.uleb128 Ltmp1871-Lfunc_begin82
	.byte	0
	.uleb128 Ltmp1861-Lfunc_begin82
	.uleb128 Ltmp1862-Ltmp1861
	.uleb128 Ltmp1863-Lfunc_begin82
	.byte	3
	.uleb128 Ltmp1862-Lfunc_begin82
	.uleb128 Ltmp1864-Ltmp1862
	.byte	0
	.byte	0
	.uleb128 Ltmp1864-Lfunc_begin82
	.uleb128 Ltmp1865-Ltmp1864
	.uleb128 Ltmp1871-Lfunc_begin82
	.byte	0
Lcst_end82:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase47:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h5699ec4aa7ef6fbfE:
Lfunc_begin83:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception83
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm2, xmmword ptr [rdi + 128]
	movdqu	xmm0, xmmword ptr [rdi + 144]
	pxor	xmm1, xmm1
	movdqu	xmmword ptr [rdi + 128], xmm1
	movq	rax, xmm2
	test	rax, rax
	je	LBB133_1
	mov	rbx, rdi
	movups	xmm3, xmmword ptr [rdi + 160]
	movdqu	xmm1, xmmword ptr [rdi + 176]
	movdqa	xmmword ptr [rsp + 112], xmm1
	movaps	xmmword ptr [rsp + 96], xmm3
	movdqa	xmmword ptr [rsp + 80], xmm0
	movdqa	xmmword ptr [rsp + 64], xmm2
	pshufd	xmm2, xmm2, 78
	movq	rcx, xmm2
	mov	rdx, qword ptr [rsp + 96]
	mov	rsi, qword ptr [rsp + 104]
	mov	qword ptr [rsp + 56], rsi
	mov	qword ptr [rsp + 48], rdx
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 40], rdx
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB133_4
	movq	rax, xmm0
	movq	r9, xmm1
	pshufd	xmm0, xmm1, 78
	movq	rdi, xmm0
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	mov	rax, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 248], rax
	mov	rax, qword ptr [rsp + 40]
	mov	rdx, qword ptr [rsp + 48]
	mov	qword ptr [rsp + 240], rdx
	mov	qword ptr [rsp + 232], rax
Ltmp1872:
	mov	qword ptr [rsp + 8], rdi
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 232]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hc0f93965f531a381E
Ltmp1873:
	movdqa	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movdqa	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB133_13
LBB133_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1879:
	call	qword ptr [rax]
Ltmp1880:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB133_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB133_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 192], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB133_1:
Ltmp1882:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1883:
	jmp	LBB133_2
LBB133_4:
Ltmp1874:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1875:
LBB133_2:
	ud2
LBB133_14:
Ltmp1881:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movdqa	xmmword ptr [rbx], xmm0
LBB133_15:
	lea	rdi, [rsp + 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB133_5:
Ltmp1876:
Ltmp1877:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1878:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB133_10
	jmp	LBB133_13
LBB133_16:
Ltmp1884:
	mov	r14, rax
	jmp	LBB133_15
Lfunc_end83:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table133:
Lexception83:
	.byte	255
	.byte	155
	.uleb128 Lttbase48-Lttbaseref48
Lttbaseref48:
	.byte	1
	.uleb128 Lcst_end83-Lcst_begin83
Lcst_begin83:
	.uleb128 Ltmp1872-Lfunc_begin83
	.uleb128 Ltmp1873-Ltmp1872
	.uleb128 Ltmp1876-Lfunc_begin83
	.byte	3
	.uleb128 Ltmp1879-Lfunc_begin83
	.uleb128 Ltmp1880-Ltmp1879
	.uleb128 Ltmp1881-Lfunc_begin83
	.byte	0
	.uleb128 Ltmp1882-Lfunc_begin83
	.uleb128 Ltmp1883-Ltmp1882
	.uleb128 Ltmp1884-Lfunc_begin83
	.byte	0
	.uleb128 Ltmp1874-Lfunc_begin83
	.uleb128 Ltmp1875-Ltmp1874
	.uleb128 Ltmp1876-Lfunc_begin83
	.byte	3
	.uleb128 Ltmp1875-Lfunc_begin83
	.uleb128 Ltmp1877-Ltmp1875
	.byte	0
	.byte	0
	.uleb128 Ltmp1877-Lfunc_begin83
	.uleb128 Ltmp1878-Ltmp1877
	.uleb128 Ltmp1884-Lfunc_begin83
	.byte	0
Lcst_end83:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase48:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h5f3213e3b662df40E:
Lfunc_begin84:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception84
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm3, xmmword ptr [rdi + 128]
	movdqu	xmm2, xmmword ptr [rdi + 144]
	movups	xmm0, xmmword ptr [rdi + 192]
	movdqu	xmm1, xmmword ptr [rdi + 208]
	xorps	xmm4, xmm4
	movups	xmmword ptr [rdi + 128], xmm4
	movq	rax, xmm3
	test	rax, rax
	je	LBB134_1
	mov	rbx, rdi
	movups	xmm4, xmmword ptr [rdi + 160]
	movups	xmm5, xmmword ptr [rdi + 176]
	movaps	xmmword ptr [rsp + 112], xmm5
	movaps	xmmword ptr [rsp + 96], xmm4
	movdqa	xmmword ptr [rsp + 80], xmm2
	movdqa	xmmword ptr [rsp + 64], xmm3
	pshufd	xmm3, xmm3, 78
	movq	rcx, xmm3
	mov	rdx, qword ptr [rsp + 112]
	mov	rsi, qword ptr [rsp + 120]
	mov	qword ptr [rsp + 248], rsi
	mov	qword ptr [rsp + 240], rdx
	mov	rdx, qword ptr [rsp + 96]
	mov	rsi, qword ptr [rsp + 104]
	mov	qword ptr [rsp + 232], rsi
	mov	qword ptr [rsp + 224], rdx
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 216], rdx
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB134_4
	pshufd	xmm3, xmm1, 78
	movq	rax, xmm3
	movq	rdx, xmm2
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	mov	rdx, qword ptr [rsp + 248]
	mov	qword ptr [rsp + 288], rdx
	mov	rdx, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 280], rdx
	mov	rdx, qword ptr [rsp + 232]
	mov	qword ptr [rsp + 272], rdx
	mov	rdx, qword ptr [rsp + 216]
	mov	rdi, qword ptr [rsp + 224]
	mov	qword ptr [rsp + 264], rdi
	mov	qword ptr [rsp + 256], rdx
	movq	qword ptr [rsp + 312], xmm1
	movups	xmmword ptr [rsp + 296], xmm0
Ltmp1885:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 320]
	lea	r9, [rsp + 256]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h88adf7442447d004E
Ltmp1886:
	movaps	xmm0, xmmword ptr [rsp + 320]
	movdqa	xmm1, xmmword ptr [rsp + 336]
	movdqa	xmm2, xmmword ptr [rsp + 352]
	movdqa	xmm3, xmmword ptr [rsp + 368]
	movdqa	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movaps	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB134_13
LBB134_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1892:
	call	qword ptr [rax]
Ltmp1893:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB134_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB134_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 224], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB134_1:
Ltmp1895:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1896:
	jmp	LBB134_2
LBB134_4:
Ltmp1887:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1888:
LBB134_2:
	ud2
LBB134_14:
Ltmp1894:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movdqa	xmm3, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movaps	xmmword ptr [rbx], xmm0
LBB134_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB134_5:
Ltmp1889:
Ltmp1890:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1891:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB134_10
	jmp	LBB134_13
LBB134_16:
Ltmp1897:
	mov	r14, rax
	jmp	LBB134_15
Lfunc_end84:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table134:
Lexception84:
	.byte	255
	.byte	155
	.uleb128 Lttbase49-Lttbaseref49
Lttbaseref49:
	.byte	1
	.uleb128 Lcst_end84-Lcst_begin84
Lcst_begin84:
	.uleb128 Ltmp1885-Lfunc_begin84
	.uleb128 Ltmp1886-Ltmp1885
	.uleb128 Ltmp1889-Lfunc_begin84
	.byte	3
	.uleb128 Ltmp1892-Lfunc_begin84
	.uleb128 Ltmp1893-Ltmp1892
	.uleb128 Ltmp1894-Lfunc_begin84
	.byte	0
	.uleb128 Ltmp1895-Lfunc_begin84
	.uleb128 Ltmp1896-Ltmp1895
	.uleb128 Ltmp1897-Lfunc_begin84
	.byte	0
	.uleb128 Ltmp1887-Lfunc_begin84
	.uleb128 Ltmp1888-Ltmp1887
	.uleb128 Ltmp1889-Lfunc_begin84
	.byte	3
	.uleb128 Ltmp1888-Lfunc_begin84
	.uleb128 Ltmp1890-Ltmp1888
	.byte	0
	.byte	0
	.uleb128 Ltmp1890-Lfunc_begin84
	.uleb128 Ltmp1891-Ltmp1890
	.uleb128 Ltmp1897-Lfunc_begin84
	.byte	0
Lcst_end84:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase49:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h607ca98c39182f5cE:
Lfunc_begin85:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception85
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 128]
	movdqu	xmm0, xmmword ptr [rdi + 144]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi + 128], xmm2
	mov	rax, qword ptr [rdi + 176]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rdi + 168]
	mov	qword ptr [rsp + 72], rax
	mov	rax, qword ptr [rdi + 160]
	mov	qword ptr [rsp + 64], rax
	movq	rcx, xmm1
	test	rcx, rcx
	je	LBB135_1
	mov	rbx, rdi
	mov	rax, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 312], rax
	mov	rdx, qword ptr [rsp + 64]
	mov	rsi, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 304], rsi
	mov	qword ptr [rsp + 296], rdx
	movdqa	xmmword ptr [rsp + 80], xmm0
	movdqa	xmmword ptr [rsp + 64], xmm1
	mov	qword ptr [rsp + 96], rdx
	mov	qword ptr [rsp + 104], rsi
	mov	qword ptr [rsp + 112], rax
	pshufd	xmm1, xmm1, 78
	movq	rdi, xmm1
	mov	qword ptr [rsp + 264], rsi
	mov	qword ptr [rsp + 256], rdx
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 248], rdx
	mov	rsi, qword ptr [rcx]
	sub	rsi, qword ptr [rdi]
	jb	LBB135_4
	movq	rdx, xmm0
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	mov	rdx, qword ptr [rsp + 264]
	mov	qword ptr [rsp + 288], rdx
	mov	rdx, qword ptr [rsp + 248]
	mov	rdi, qword ptr [rsp + 256]
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 272], rdx
Ltmp1898:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 320]
	lea	r9, [rsp + 272]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h9345e3cb89fa4930E
Ltmp1899:
	movdqa	xmm0, xmmword ptr [rsp + 320]
	movdqa	xmm1, xmmword ptr [rsp + 336]
	movaps	xmm2, xmmword ptr [rsp + 352]
	movaps	xmm3, xmmword ptr [rsp + 368]
	movaps	xmmword ptr [rsp + 176], xmm3
	movaps	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movdqa	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB135_13
LBB135_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1905:
	call	qword ptr [rax]
Ltmp1906:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB135_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB135_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 184], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB135_1:
Ltmp1908:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1909:
	jmp	LBB135_2
LBB135_4:
Ltmp1900:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1901:
LBB135_2:
	ud2
LBB135_14:
Ltmp1907:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm3
	movaps	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movdqa	xmmword ptr [rbx], xmm0
LBB135_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB135_5:
Ltmp1902:
Ltmp1903:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1904:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB135_10
	jmp	LBB135_13
LBB135_16:
Ltmp1910:
	mov	r14, rax
	jmp	LBB135_15
Lfunc_end85:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table135:
Lexception85:
	.byte	255
	.byte	155
	.uleb128 Lttbase50-Lttbaseref50
Lttbaseref50:
	.byte	1
	.uleb128 Lcst_end85-Lcst_begin85
Lcst_begin85:
	.uleb128 Ltmp1898-Lfunc_begin85
	.uleb128 Ltmp1899-Ltmp1898
	.uleb128 Ltmp1902-Lfunc_begin85
	.byte	3
	.uleb128 Ltmp1905-Lfunc_begin85
	.uleb128 Ltmp1906-Ltmp1905
	.uleb128 Ltmp1907-Lfunc_begin85
	.byte	0
	.uleb128 Ltmp1908-Lfunc_begin85
	.uleb128 Ltmp1909-Ltmp1908
	.uleb128 Ltmp1910-Lfunc_begin85
	.byte	0
	.uleb128 Ltmp1900-Lfunc_begin85
	.uleb128 Ltmp1901-Ltmp1900
	.uleb128 Ltmp1902-Lfunc_begin85
	.byte	3
	.uleb128 Ltmp1901-Lfunc_begin85
	.uleb128 Ltmp1903-Ltmp1901
	.byte	0
	.byte	0
	.uleb128 Ltmp1903-Lfunc_begin85
	.uleb128 Ltmp1904-Ltmp1903
	.uleb128 Ltmp1910-Lfunc_begin85
	.byte	0
Lcst_end85:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase50:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h6149570e01c37addE:
Lfunc_begin86:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception86
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB136_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB136_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp1911:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hddeecd8dd3b2af70E
Ltmp1912:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB136_14
LBB136_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp1918:
	call	qword ptr [rax]
Ltmp1919:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB136_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB136_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB136_1:
Ltmp1921:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1922:
	jmp	LBB136_2
LBB136_4:
Ltmp1913:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1914:
LBB136_2:
	ud2
LBB136_15:
Ltmp1920:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB136_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB136_6:
Ltmp1915:
Ltmp1916:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1917:
	test	rax, rax
	je	LBB136_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB136_11
	jmp	LBB136_14
LBB136_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB136_11
	jmp	LBB136_14
LBB136_17:
Ltmp1923:
	mov	r14, rax
	jmp	LBB136_16
Lfunc_end86:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table136:
Lexception86:
	.byte	255
	.byte	155
	.uleb128 Lttbase51-Lttbaseref51
Lttbaseref51:
	.byte	1
	.uleb128 Lcst_end86-Lcst_begin86
Lcst_begin86:
	.uleb128 Ltmp1911-Lfunc_begin86
	.uleb128 Ltmp1912-Ltmp1911
	.uleb128 Ltmp1915-Lfunc_begin86
	.byte	3
	.uleb128 Ltmp1918-Lfunc_begin86
	.uleb128 Ltmp1919-Ltmp1918
	.uleb128 Ltmp1920-Lfunc_begin86
	.byte	0
	.uleb128 Ltmp1921-Lfunc_begin86
	.uleb128 Ltmp1922-Ltmp1921
	.uleb128 Ltmp1923-Lfunc_begin86
	.byte	0
	.uleb128 Ltmp1913-Lfunc_begin86
	.uleb128 Ltmp1914-Ltmp1913
	.uleb128 Ltmp1915-Lfunc_begin86
	.byte	3
	.uleb128 Ltmp1914-Lfunc_begin86
	.uleb128 Ltmp1916-Ltmp1914
	.byte	0
	.byte	0
	.uleb128 Ltmp1916-Lfunc_begin86
	.uleb128 Ltmp1917-Ltmp1916
	.uleb128 Ltmp1923-Lfunc_begin86
	.byte	0
Lcst_end86:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase51:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h66098996f778b483E:
Lfunc_begin87:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception87
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB137_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB137_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp1924:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17he2e0ed02bd580b5bE
Ltmp1925:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB137_14
LBB137_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp1931:
	call	qword ptr [rax]
Ltmp1932:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB137_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB137_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB137_1:
Ltmp1934:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1935:
	jmp	LBB137_2
LBB137_4:
Ltmp1926:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1927:
LBB137_2:
	ud2
LBB137_15:
Ltmp1933:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB137_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB137_6:
Ltmp1928:
Ltmp1929:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1930:
	test	rax, rax
	je	LBB137_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB137_11
	jmp	LBB137_14
LBB137_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB137_11
	jmp	LBB137_14
LBB137_17:
Ltmp1936:
	mov	r14, rax
	jmp	LBB137_16
Lfunc_end87:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table137:
Lexception87:
	.byte	255
	.byte	155
	.uleb128 Lttbase52-Lttbaseref52
Lttbaseref52:
	.byte	1
	.uleb128 Lcst_end87-Lcst_begin87
Lcst_begin87:
	.uleb128 Ltmp1924-Lfunc_begin87
	.uleb128 Ltmp1925-Ltmp1924
	.uleb128 Ltmp1928-Lfunc_begin87
	.byte	3
	.uleb128 Ltmp1931-Lfunc_begin87
	.uleb128 Ltmp1932-Ltmp1931
	.uleb128 Ltmp1933-Lfunc_begin87
	.byte	0
	.uleb128 Ltmp1934-Lfunc_begin87
	.uleb128 Ltmp1935-Ltmp1934
	.uleb128 Ltmp1936-Lfunc_begin87
	.byte	0
	.uleb128 Ltmp1926-Lfunc_begin87
	.uleb128 Ltmp1927-Ltmp1926
	.uleb128 Ltmp1928-Lfunc_begin87
	.byte	3
	.uleb128 Ltmp1927-Lfunc_begin87
	.uleb128 Ltmp1929-Ltmp1927
	.byte	0
	.byte	0
	.uleb128 Ltmp1929-Lfunc_begin87
	.uleb128 Ltmp1930-Ltmp1929
	.uleb128 Ltmp1936-Lfunc_begin87
	.byte	0
Lcst_end87:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase52:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h6733e7fed8fc0b08E:
Lfunc_begin88:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception88
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB138_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB138_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp1937:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h2395d30d65c44400E
Ltmp1938:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB138_14
LBB138_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp1944:
	call	qword ptr [rax]
Ltmp1945:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB138_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB138_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB138_1:
Ltmp1947:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1948:
	jmp	LBB138_2
LBB138_4:
Ltmp1939:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1940:
LBB138_2:
	ud2
LBB138_15:
Ltmp1946:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB138_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB138_6:
Ltmp1941:
Ltmp1942:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1943:
	test	rax, rax
	je	LBB138_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB138_11
	jmp	LBB138_14
LBB138_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB138_11
	jmp	LBB138_14
LBB138_17:
Ltmp1949:
	mov	r14, rax
	jmp	LBB138_16
Lfunc_end88:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table138:
Lexception88:
	.byte	255
	.byte	155
	.uleb128 Lttbase53-Lttbaseref53
Lttbaseref53:
	.byte	1
	.uleb128 Lcst_end88-Lcst_begin88
Lcst_begin88:
	.uleb128 Ltmp1937-Lfunc_begin88
	.uleb128 Ltmp1938-Ltmp1937
	.uleb128 Ltmp1941-Lfunc_begin88
	.byte	3
	.uleb128 Ltmp1944-Lfunc_begin88
	.uleb128 Ltmp1945-Ltmp1944
	.uleb128 Ltmp1946-Lfunc_begin88
	.byte	0
	.uleb128 Ltmp1947-Lfunc_begin88
	.uleb128 Ltmp1948-Ltmp1947
	.uleb128 Ltmp1949-Lfunc_begin88
	.byte	0
	.uleb128 Ltmp1939-Lfunc_begin88
	.uleb128 Ltmp1940-Ltmp1939
	.uleb128 Ltmp1941-Lfunc_begin88
	.byte	3
	.uleb128 Ltmp1940-Lfunc_begin88
	.uleb128 Ltmp1942-Ltmp1940
	.byte	0
	.byte	0
	.uleb128 Ltmp1942-Lfunc_begin88
	.uleb128 Ltmp1943-Ltmp1942
	.uleb128 Ltmp1949-Lfunc_begin88
	.byte	0
Lcst_end88:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase53:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h678d839fedfca7ffE:
Lfunc_begin89:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception89
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB139_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp1950:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1951:
	test	rax, rax
	je	LBB139_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB139_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp1952:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17he9e6a61e30b054aeE
Ltmp1953:
LBB139_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB139_9
LBB139_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp1961:
	call	qword ptr [rax]
Ltmp1962:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB139_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB139_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp1964:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1965:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB139_11:
Ltmp1966:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1967:
	jmp	LBB139_14
LBB139_12:
Ltmp1956:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1957:
	jmp	LBB139_14
LBB139_13:
Ltmp1954:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1955:
LBB139_14:
	ud2
LBB139_15:
Ltmp1963:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB139_21
LBB139_16:
Ltmp1958:
Ltmp1959:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1960:
	test	rax, rax
	je	LBB139_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB139_6
	jmp	LBB139_9
LBB139_20:
Ltmp1968:
	mov	r14, rax
LBB139_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end89:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table139:
Lexception89:
	.byte	255
	.byte	155
	.uleb128 Lttbase54-Lttbaseref54
Lttbaseref54:
	.byte	1
	.uleb128 Lcst_end89-Lcst_begin89
Lcst_begin89:
	.uleb128 Ltmp1950-Lfunc_begin89
	.uleb128 Ltmp1953-Ltmp1950
	.uleb128 Ltmp1958-Lfunc_begin89
	.byte	3
	.uleb128 Ltmp1961-Lfunc_begin89
	.uleb128 Ltmp1962-Ltmp1961
	.uleb128 Ltmp1963-Lfunc_begin89
	.byte	0
	.uleb128 Ltmp1964-Lfunc_begin89
	.uleb128 Ltmp1967-Ltmp1964
	.uleb128 Ltmp1968-Lfunc_begin89
	.byte	0
	.uleb128 Ltmp1956-Lfunc_begin89
	.uleb128 Ltmp1955-Ltmp1956
	.uleb128 Ltmp1958-Lfunc_begin89
	.byte	3
	.uleb128 Ltmp1959-Lfunc_begin89
	.uleb128 Ltmp1960-Ltmp1959
	.uleb128 Ltmp1968-Lfunc_begin89
	.byte	0
	.uleb128 Ltmp1960-Lfunc_begin89
	.uleb128 Lfunc_end89-Ltmp1960
	.byte	0
	.byte	0
Lcst_end89:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase54:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h6bc5d022e5ada673E:
Lfunc_begin90:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception90
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 640
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 240], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 208], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movdqa	xmmword ptr [rsp + 192], xmm1
	movq	r15, xmm1
	test	r15, r15
	je	LBB140_1
	mov	rbx, rdi
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 176], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 160], xmm0
	mov	r14, qword ptr [rdi + 296]
Ltmp1969:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1970:
	test	rax, rax
	je	LBB140_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB140_7
	pshufd	xmm0, xmmword ptr [rsp + 192], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 56], r15
	mov	qword ptr [rsp + 64], rax
	movaps	xmm0, xmmword ptr [rsp + 240]
	movups	xmmword ptr [rsp + 72], xmm0
	movaps	xmm0, xmmword ptr [rsp + 224]
	movups	xmmword ptr [rsp + 88], xmm0
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 104], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 120], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 136], xmm0
	mov	qword ptr [rsp + 152], r14
Ltmp1971:
	lea	rdi, [rsp + 256]
	lea	rsi, [rsp + 56]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hd467aaba5ed10466E
Ltmp1972:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movaps	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmm4, xmmword ptr [rsp + 320]
	movaps	xmm5, xmmword ptr [rsp + 336]
	mov	rax, qword ptr [rsp + 352]
	mov	rcx, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 56], rcx
	mov	rcx, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 64], rcx
	mov	rcx, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 72], rcx
	movaps	xmmword ptr [rsp + 448], xmm0
	movdqa	xmmword ptr [rsp + 464], xmm1
	movaps	xmmword ptr [rsp + 496], xmm3
	movaps	xmmword ptr [rsp + 480], xmm2
	movaps	xmmword ptr [rsp + 528], xmm5
	movaps	xmmword ptr [rsp + 512], xmm4
	mov	qword ptr [rsp + 544], rax
	mov	rax, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 56]
	mov	rcx, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 560], rcx
	mov	qword ptr [rsp + 552], rax
	mov	eax, 1
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jb	LBB140_16
LBB140_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1980:
	call	qword ptr [rax]
Ltmp1981:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB140_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB140_16:
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp1983:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp1984:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB140_1:
Ltmp1985:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp1986:
	jmp	LBB140_2
LBB140_5:
Ltmp1975:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1976:
	jmp	LBB140_2
LBB140_7:
Ltmp1973:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1974:
LBB140_2:
	ud2
LBB140_18:
Ltmp1982:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB140_19
LBB140_8:
Ltmp1977:
Ltmp1978:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1979:
	mov	qword ptr [rsp + 392], rax
	mov	qword ptr [rsp + 400], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jae	LBB140_13
	jmp	LBB140_16
LBB140_20:
Ltmp1987:
	mov	r14, rax
LBB140_19:
	lea	rdi, [rsp + 256]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end90:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table140:
Lexception90:
	.byte	255
	.byte	155
	.uleb128 Lttbase55-Lttbaseref55
Lttbaseref55:
	.byte	1
	.uleb128 Lcst_end90-Lcst_begin90
Lcst_begin90:
	.uleb128 Ltmp1969-Lfunc_begin90
	.uleb128 Ltmp1972-Ltmp1969
	.uleb128 Ltmp1977-Lfunc_begin90
	.byte	3
	.uleb128 Ltmp1980-Lfunc_begin90
	.uleb128 Ltmp1981-Ltmp1980
	.uleb128 Ltmp1982-Lfunc_begin90
	.byte	0
	.uleb128 Ltmp1981-Lfunc_begin90
	.uleb128 Ltmp1983-Ltmp1981
	.byte	0
	.byte	0
	.uleb128 Ltmp1983-Lfunc_begin90
	.uleb128 Ltmp1986-Ltmp1983
	.uleb128 Ltmp1987-Lfunc_begin90
	.byte	0
	.uleb128 Ltmp1975-Lfunc_begin90
	.uleb128 Ltmp1974-Ltmp1975
	.uleb128 Ltmp1977-Lfunc_begin90
	.byte	3
	.uleb128 Ltmp1974-Lfunc_begin90
	.uleb128 Ltmp1978-Ltmp1974
	.byte	0
	.byte	0
	.uleb128 Ltmp1978-Lfunc_begin90
	.uleb128 Ltmp1979-Ltmp1978
	.uleb128 Ltmp1987-Lfunc_begin90
	.byte	0
	.uleb128 Ltmp1979-Lfunc_begin90
	.uleb128 Lfunc_end90-Ltmp1979
	.byte	0
	.byte	0
Lcst_end90:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase55:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h6d887124331a34a1E:
Lfunc_begin91:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception91
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 640
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 240], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 208], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movdqa	xmmword ptr [rsp + 192], xmm1
	movq	r15, xmm1
	test	r15, r15
	je	LBB141_1
	mov	rbx, rdi
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 176], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 160], xmm0
	mov	r14, qword ptr [rdi + 296]
Ltmp1988:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp1989:
	test	rax, rax
	je	LBB141_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB141_7
	pshufd	xmm0, xmmword ptr [rsp + 192], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 56], r15
	mov	qword ptr [rsp + 64], rax
	movaps	xmm0, xmmword ptr [rsp + 240]
	movups	xmmword ptr [rsp + 72], xmm0
	movaps	xmm0, xmmword ptr [rsp + 224]
	movups	xmmword ptr [rsp + 88], xmm0
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 104], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 120], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 136], xmm0
	mov	qword ptr [rsp + 152], r14
Ltmp1990:
	lea	rdi, [rsp + 256]
	lea	rsi, [rsp + 56]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h52f524c866d61f1cE
Ltmp1991:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movaps	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmm4, xmmword ptr [rsp + 320]
	movaps	xmm5, xmmword ptr [rsp + 336]
	mov	rax, qword ptr [rsp + 352]
	mov	rcx, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 56], rcx
	mov	rcx, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 64], rcx
	mov	rcx, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 72], rcx
	movaps	xmmword ptr [rsp + 448], xmm0
	movdqa	xmmword ptr [rsp + 464], xmm1
	movaps	xmmword ptr [rsp + 496], xmm3
	movaps	xmmword ptr [rsp + 480], xmm2
	movaps	xmmword ptr [rsp + 528], xmm5
	movaps	xmmword ptr [rsp + 512], xmm4
	mov	qword ptr [rsp + 544], rax
	mov	rax, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 56]
	mov	rcx, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 560], rcx
	mov	qword ptr [rsp + 552], rax
	mov	eax, 1
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jb	LBB141_16
LBB141_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp1999:
	call	qword ptr [rax]
Ltmp2000:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB141_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB141_16:
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp2002:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2003:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB141_1:
Ltmp2004:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2005:
	jmp	LBB141_2
LBB141_5:
Ltmp1994:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp1995:
	jmp	LBB141_2
LBB141_7:
Ltmp1992:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp1993:
LBB141_2:
	ud2
LBB141_18:
Ltmp2001:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB141_19
LBB141_8:
Ltmp1996:
Ltmp1997:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp1998:
	mov	qword ptr [rsp + 392], rax
	mov	qword ptr [rsp + 400], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jae	LBB141_13
	jmp	LBB141_16
LBB141_20:
Ltmp2006:
	mov	r14, rax
LBB141_19:
	lea	rdi, [rsp + 256]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end91:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table141:
Lexception91:
	.byte	255
	.byte	155
	.uleb128 Lttbase56-Lttbaseref56
Lttbaseref56:
	.byte	1
	.uleb128 Lcst_end91-Lcst_begin91
Lcst_begin91:
	.uleb128 Ltmp1988-Lfunc_begin91
	.uleb128 Ltmp1991-Ltmp1988
	.uleb128 Ltmp1996-Lfunc_begin91
	.byte	3
	.uleb128 Ltmp1999-Lfunc_begin91
	.uleb128 Ltmp2000-Ltmp1999
	.uleb128 Ltmp2001-Lfunc_begin91
	.byte	0
	.uleb128 Ltmp2000-Lfunc_begin91
	.uleb128 Ltmp2002-Ltmp2000
	.byte	0
	.byte	0
	.uleb128 Ltmp2002-Lfunc_begin91
	.uleb128 Ltmp2005-Ltmp2002
	.uleb128 Ltmp2006-Lfunc_begin91
	.byte	0
	.uleb128 Ltmp1994-Lfunc_begin91
	.uleb128 Ltmp1993-Ltmp1994
	.uleb128 Ltmp1996-Lfunc_begin91
	.byte	3
	.uleb128 Ltmp1993-Lfunc_begin91
	.uleb128 Ltmp1997-Ltmp1993
	.byte	0
	.byte	0
	.uleb128 Ltmp1997-Lfunc_begin91
	.uleb128 Ltmp1998-Ltmp1997
	.uleb128 Ltmp2006-Lfunc_begin91
	.byte	0
	.uleb128 Ltmp1998-Lfunc_begin91
	.uleb128 Lfunc_end91-Ltmp1998
	.byte	0
	.byte	0
Lcst_end91:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase56:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h6f5ac582fe6f1885E:
Lfunc_begin92:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception92
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 192], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 176], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 160], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 96], xmm0
	movups	xmm0, xmmword ptr [rdi + 312]
	movaps	xmmword ptr [rsp + 144], xmm0
	movups	xmm0, xmmword ptr [rdi + 296]
	movaps	xmmword ptr [rsp + 80], xmm0
	movups	xmm0, xmmword ptr [rdi + 344]
	movaps	xmmword ptr [rsp + 128], xmm0
	movups	xmm0, xmmword ptr [rdi + 328]
	movaps	xmmword ptr [rsp + 64], xmm0
	mov	rax, qword ptr [rdi + 376]
	mov	qword ptr [rsp + 272], rax
	mov	rax, qword ptr [rdi + 368]
	mov	qword ptr [rsp + 264], rax
	mov	rax, qword ptr [rdi + 360]
	mov	qword ptr [rsp + 256], rax
	movdqa	xmmword ptr [rsp + 112], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB142_1
	mov	rbx, rdi
	mov	rax, qword ptr [rsp + 272]
	mov	qword ptr [rsp + 248], rax
	mov	rcx, qword ptr [rsp + 256]
	mov	rdx, qword ptr [rsp + 264]
	mov	qword ptr [rsp + 240], rdx
	mov	qword ptr [rsp + 232], rcx
	mov	qword ptr [rsp + 56], rax
	mov	qword ptr [rsp + 48], rdx
	mov	qword ptr [rsp + 40], rcx
Ltmp2007:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2008:
	test	rax, rax
	je	LBB142_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB142_7
	pshufd	xmm0, xmmword ptr [rsp + 112], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 456], r14
	mov	qword ptr [rsp + 464], rax
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 472], xmm0
	movaps	xmm0, xmmword ptr [rsp + 192]
	movups	xmmword ptr [rsp + 488], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 504], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movups	xmmword ptr [rsp + 520], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 536], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movups	xmmword ptr [rsp + 552], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movups	xmmword ptr [rsp + 568], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movups	xmmword ptr [rsp + 584], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movups	xmmword ptr [rsp + 600], xmm0
	mov	rax, qword ptr [rsp + 40]
	mov	rcx, qword ptr [rsp + 48]
	mov	qword ptr [rsp + 616], rax
	mov	qword ptr [rsp + 624], rcx
	mov	rax, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 632], rax
Ltmp2009:
	lea	rdi, [rsp + 640]
	lea	rsi, [rsp + 456]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9321494734bafdcbE
Ltmp2010:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movdqa	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	movaps	xmm4, xmmword ptr [rsp + 704]
	movaps	xmm5, xmmword ptr [rsp + 720]
	movaps	xmm6, xmmword ptr [rsp + 736]
	movaps	xmm7, xmmword ptr [rsp + 752]
	movaps	xmmword ptr [rsp + 320], xmm0
	movdqa	xmmword ptr [rsp + 336], xmm1
	movaps	xmmword ptr [rsp + 368], xmm3
	movaps	xmmword ptr [rsp + 352], xmm2
	movaps	xmmword ptr [rsp + 400], xmm5
	movaps	xmmword ptr [rsp + 384], xmm4
	movaps	xmmword ptr [rsp + 432], xmm7
	movaps	xmmword ptr [rsp + 416], xmm6
	mov	eax, 1
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jb	LBB142_16
LBB142_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2018:
	call	qword ptr [rax]
Ltmp2019:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB142_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB142_16:
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp2021:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2022:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB142_1:
Ltmp2023:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2024:
	jmp	LBB142_2
LBB142_5:
Ltmp2013:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 456]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2014:
	jmp	LBB142_2
LBB142_7:
Ltmp2011:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2012:
LBB142_2:
	ud2
LBB142_18:
Ltmp2020:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB142_19
LBB142_8:
Ltmp2015:
Ltmp2016:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2017:
	mov	qword ptr [rsp + 264], rax
	mov	qword ptr [rsp + 272], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jae	LBB142_13
	jmp	LBB142_16
LBB142_20:
Ltmp2025:
	mov	r14, rax
LBB142_19:
	lea	rdi, [rsp + 456]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end92:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table142:
Lexception92:
	.byte	255
	.byte	155
	.uleb128 Lttbase57-Lttbaseref57
Lttbaseref57:
	.byte	1
	.uleb128 Lcst_end92-Lcst_begin92
Lcst_begin92:
	.uleb128 Ltmp2007-Lfunc_begin92
	.uleb128 Ltmp2010-Ltmp2007
	.uleb128 Ltmp2015-Lfunc_begin92
	.byte	3
	.uleb128 Ltmp2018-Lfunc_begin92
	.uleb128 Ltmp2019-Ltmp2018
	.uleb128 Ltmp2020-Lfunc_begin92
	.byte	0
	.uleb128 Ltmp2019-Lfunc_begin92
	.uleb128 Ltmp2021-Ltmp2019
	.byte	0
	.byte	0
	.uleb128 Ltmp2021-Lfunc_begin92
	.uleb128 Ltmp2024-Ltmp2021
	.uleb128 Ltmp2025-Lfunc_begin92
	.byte	0
	.uleb128 Ltmp2013-Lfunc_begin92
	.uleb128 Ltmp2012-Ltmp2013
	.uleb128 Ltmp2015-Lfunc_begin92
	.byte	3
	.uleb128 Ltmp2012-Lfunc_begin92
	.uleb128 Ltmp2016-Ltmp2012
	.byte	0
	.byte	0
	.uleb128 Ltmp2016-Lfunc_begin92
	.uleb128 Ltmp2017-Ltmp2016
	.uleb128 Ltmp2025-Lfunc_begin92
	.byte	0
	.uleb128 Ltmp2017-Lfunc_begin92
	.uleb128 Lfunc_end92-Ltmp2017
	.byte	0
	.byte	0
Lcst_end92:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase57:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h7feb77d8a492f71eE:
Lfunc_begin93:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception93
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 192], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 176], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 160], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 96], xmm0
	movups	xmm0, xmmword ptr [rdi + 312]
	movaps	xmmword ptr [rsp + 144], xmm0
	movups	xmm0, xmmword ptr [rdi + 296]
	movaps	xmmword ptr [rsp + 80], xmm0
	movups	xmm0, xmmword ptr [rdi + 344]
	movaps	xmmword ptr [rsp + 128], xmm0
	movups	xmm0, xmmword ptr [rdi + 328]
	movaps	xmmword ptr [rsp + 64], xmm0
	mov	rax, qword ptr [rdi + 376]
	mov	qword ptr [rsp + 272], rax
	mov	rax, qword ptr [rdi + 368]
	mov	qword ptr [rsp + 264], rax
	mov	rax, qword ptr [rdi + 360]
	mov	qword ptr [rsp + 256], rax
	movdqa	xmmword ptr [rsp + 112], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB143_1
	mov	rbx, rdi
	mov	rax, qword ptr [rsp + 272]
	mov	qword ptr [rsp + 248], rax
	mov	rcx, qword ptr [rsp + 256]
	mov	rdx, qword ptr [rsp + 264]
	mov	qword ptr [rsp + 240], rdx
	mov	qword ptr [rsp + 232], rcx
	mov	qword ptr [rsp + 56], rax
	mov	qword ptr [rsp + 48], rdx
	mov	qword ptr [rsp + 40], rcx
Ltmp2026:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2027:
	test	rax, rax
	je	LBB143_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB143_7
	pshufd	xmm0, xmmword ptr [rsp + 112], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 456], r14
	mov	qword ptr [rsp + 464], rax
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 472], xmm0
	movaps	xmm0, xmmword ptr [rsp + 192]
	movups	xmmword ptr [rsp + 488], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 504], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movups	xmmword ptr [rsp + 520], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 536], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movups	xmmword ptr [rsp + 552], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movups	xmmword ptr [rsp + 568], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movups	xmmword ptr [rsp + 584], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movups	xmmword ptr [rsp + 600], xmm0
	mov	rax, qword ptr [rsp + 40]
	mov	rcx, qword ptr [rsp + 48]
	mov	qword ptr [rsp + 616], rax
	mov	qword ptr [rsp + 624], rcx
	mov	rax, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 632], rax
Ltmp2028:
	lea	rdi, [rsp + 640]
	lea	rsi, [rsp + 456]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hb2418168bff1c57dE
Ltmp2029:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movdqa	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	movaps	xmm4, xmmword ptr [rsp + 704]
	movaps	xmm5, xmmword ptr [rsp + 720]
	movaps	xmm6, xmmword ptr [rsp + 736]
	movaps	xmm7, xmmword ptr [rsp + 752]
	movaps	xmmword ptr [rsp + 320], xmm0
	movdqa	xmmword ptr [rsp + 336], xmm1
	movaps	xmmword ptr [rsp + 368], xmm3
	movaps	xmmword ptr [rsp + 352], xmm2
	movaps	xmmword ptr [rsp + 400], xmm5
	movaps	xmmword ptr [rsp + 384], xmm4
	movaps	xmmword ptr [rsp + 432], xmm7
	movaps	xmmword ptr [rsp + 416], xmm6
	mov	eax, 1
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jb	LBB143_16
LBB143_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2037:
	call	qword ptr [rax]
Ltmp2038:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB143_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB143_16:
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp2040:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2041:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB143_1:
Ltmp2042:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2043:
	jmp	LBB143_2
LBB143_5:
Ltmp2032:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 456]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2033:
	jmp	LBB143_2
LBB143_7:
Ltmp2030:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2031:
LBB143_2:
	ud2
LBB143_18:
Ltmp2039:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB143_19
LBB143_8:
Ltmp2034:
Ltmp2035:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2036:
	mov	qword ptr [rsp + 264], rax
	mov	qword ptr [rsp + 272], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jae	LBB143_13
	jmp	LBB143_16
LBB143_20:
Ltmp2044:
	mov	r14, rax
LBB143_19:
	lea	rdi, [rsp + 456]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end93:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table143:
Lexception93:
	.byte	255
	.byte	155
	.uleb128 Lttbase58-Lttbaseref58
Lttbaseref58:
	.byte	1
	.uleb128 Lcst_end93-Lcst_begin93
Lcst_begin93:
	.uleb128 Ltmp2026-Lfunc_begin93
	.uleb128 Ltmp2029-Ltmp2026
	.uleb128 Ltmp2034-Lfunc_begin93
	.byte	3
	.uleb128 Ltmp2037-Lfunc_begin93
	.uleb128 Ltmp2038-Ltmp2037
	.uleb128 Ltmp2039-Lfunc_begin93
	.byte	0
	.uleb128 Ltmp2038-Lfunc_begin93
	.uleb128 Ltmp2040-Ltmp2038
	.byte	0
	.byte	0
	.uleb128 Ltmp2040-Lfunc_begin93
	.uleb128 Ltmp2043-Ltmp2040
	.uleb128 Ltmp2044-Lfunc_begin93
	.byte	0
	.uleb128 Ltmp2032-Lfunc_begin93
	.uleb128 Ltmp2031-Ltmp2032
	.uleb128 Ltmp2034-Lfunc_begin93
	.byte	3
	.uleb128 Ltmp2031-Lfunc_begin93
	.uleb128 Ltmp2035-Ltmp2031
	.byte	0
	.byte	0
	.uleb128 Ltmp2035-Lfunc_begin93
	.uleb128 Ltmp2036-Ltmp2035
	.uleb128 Ltmp2044-Lfunc_begin93
	.byte	0
	.uleb128 Ltmp2036-Lfunc_begin93
	.uleb128 Lfunc_end93-Ltmp2036
	.byte	0
	.byte	0
Lcst_end93:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase58:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h82a774eddec8b54fE:
Lfunc_begin94:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception94
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm3, xmmword ptr [rdi + 128]
	movdqu	xmm2, xmmword ptr [rdi + 144]
	movups	xmm0, xmmword ptr [rdi + 192]
	movdqu	xmm1, xmmword ptr [rdi + 208]
	pxor	xmm4, xmm4
	movdqu	xmmword ptr [rdi + 128], xmm4
	movq	rax, xmm3
	test	rax, rax
	je	LBB144_1
	mov	rbx, rdi
	pshufd	xmm3, xmm3, 78
	movq	rcx, xmm3
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB144_4
	movdqu	xmm3, xmmword ptr [rbx + 160]
	movdqu	xmm4, xmmword ptr [rbx + 176]
	pshufd	xmm5, xmm1, 78
	movq	rax, xmm5
	movq	rdx, xmm2
	pshufd	xmm5, xmm4, 78
	palignr	xmm4, xmm3, 8
	palignr	xmm3, xmm2, 8
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	movq	qword ptr [rsp + 224], xmm5
	movdqu	xmmword ptr [rsp + 208], xmm4
	movdqu	xmmword ptr [rsp + 192], xmm3
	movq	qword ptr [rsp + 248], xmm1
	movups	xmmword ptr [rsp + 232], xmm0
Ltmp2045:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 192]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h08cd0410494d8951E
Ltmp2046:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movdqa	xmm3, xmmword ptr [rsp + 304]
	movdqa	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movaps	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB144_13
LBB144_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2052:
	call	qword ptr [rax]
Ltmp2053:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB144_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB144_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 224], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB144_1:
Ltmp2055:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2056:
	jmp	LBB144_2
LBB144_4:
Ltmp2047:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2048:
LBB144_2:
	ud2
LBB144_14:
Ltmp2054:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movdqa	xmm3, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movaps	xmmword ptr [rbx], xmm0
LBB144_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB144_5:
Ltmp2049:
Ltmp2050:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2051:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB144_10
	jmp	LBB144_13
LBB144_16:
Ltmp2057:
	mov	r14, rax
	jmp	LBB144_15
Lfunc_end94:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table144:
Lexception94:
	.byte	255
	.byte	155
	.uleb128 Lttbase59-Lttbaseref59
Lttbaseref59:
	.byte	1
	.uleb128 Lcst_end94-Lcst_begin94
Lcst_begin94:
	.uleb128 Ltmp2045-Lfunc_begin94
	.uleb128 Ltmp2046-Ltmp2045
	.uleb128 Ltmp2049-Lfunc_begin94
	.byte	3
	.uleb128 Ltmp2052-Lfunc_begin94
	.uleb128 Ltmp2053-Ltmp2052
	.uleb128 Ltmp2054-Lfunc_begin94
	.byte	0
	.uleb128 Ltmp2055-Lfunc_begin94
	.uleb128 Ltmp2056-Ltmp2055
	.uleb128 Ltmp2057-Lfunc_begin94
	.byte	0
	.uleb128 Ltmp2047-Lfunc_begin94
	.uleb128 Ltmp2048-Ltmp2047
	.uleb128 Ltmp2049-Lfunc_begin94
	.byte	3
	.uleb128 Ltmp2048-Lfunc_begin94
	.uleb128 Ltmp2050-Ltmp2048
	.byte	0
	.byte	0
	.uleb128 Ltmp2050-Lfunc_begin94
	.uleb128 Ltmp2051-Ltmp2050
	.uleb128 Ltmp2057-Lfunc_begin94
	.byte	0
Lcst_end94:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase59:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h83d26d877944e7c7E:
Lfunc_begin95:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception95
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 128]
	movdqu	xmm0, xmmword ptr [rdi + 144]
	pxor	xmm2, xmm2
	movdqu	xmmword ptr [rdi + 128], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB145_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB145_4
	mov	r9, qword ptr [rbx + 176]
	movdqu	xmm1, xmmword ptr [rbx + 160]
	movd	r11d, xmm1
	pshufd	xmm2, xmm1, 231
	movd	r8d, xmm2
	pshufd	xmm2, xmm1, 78
	movd	r10d, xmm2
	pshufd	xmm1, xmm1, 229
	movd	ecx, xmm1
	pshufd	xmm1, xmm0, 231
	movd	edx, xmm1
	pshufd	xmm1, xmm0, 78
	movd	edi, xmm1
	movq	rax, xmm0
	movd	xmm0, edi
	movd	xmm1, edx
	punpckldq	xmm0, xmm1
	movd	xmm1, r11d
	movd	xmm2, ecx
	punpckldq	xmm1, xmm2
	punpcklqdq	xmm0, xmm1
	movd	xmm1, r10d
	movd	xmm2, r8d
	punpckldq	xmm1, xmm2
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	movdqu	xmmword ptr [rsp + 232], xmm0
	movq	qword ptr [rsp + 248], xmm1
Ltmp2058:
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 232]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h1013a109747a48f3E
Ltmp2059:
	movdqa	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movdqa	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB145_13
LBB145_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2065:
	call	qword ptr [rax]
Ltmp2066:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB145_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB145_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 184], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB145_1:
Ltmp2068:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2069:
	jmp	LBB145_2
LBB145_4:
Ltmp2060:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2061:
LBB145_2:
	ud2
LBB145_14:
Ltmp2067:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movdqa	xmmword ptr [rbx], xmm0
LBB145_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB145_5:
Ltmp2062:
Ltmp2063:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2064:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB145_10
	jmp	LBB145_13
LBB145_16:
Ltmp2070:
	mov	r14, rax
	jmp	LBB145_15
Lfunc_end95:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table145:
Lexception95:
	.byte	255
	.byte	155
	.uleb128 Lttbase60-Lttbaseref60
Lttbaseref60:
	.byte	1
	.uleb128 Lcst_end95-Lcst_begin95
Lcst_begin95:
	.uleb128 Ltmp2058-Lfunc_begin95
	.uleb128 Ltmp2059-Ltmp2058
	.uleb128 Ltmp2062-Lfunc_begin95
	.byte	3
	.uleb128 Ltmp2065-Lfunc_begin95
	.uleb128 Ltmp2066-Ltmp2065
	.uleb128 Ltmp2067-Lfunc_begin95
	.byte	0
	.uleb128 Ltmp2068-Lfunc_begin95
	.uleb128 Ltmp2069-Ltmp2068
	.uleb128 Ltmp2070-Lfunc_begin95
	.byte	0
	.uleb128 Ltmp2060-Lfunc_begin95
	.uleb128 Ltmp2061-Ltmp2060
	.uleb128 Ltmp2062-Lfunc_begin95
	.byte	3
	.uleb128 Ltmp2061-Lfunc_begin95
	.uleb128 Ltmp2063-Ltmp2061
	.byte	0
	.byte	0
	.uleb128 Ltmp2063-Lfunc_begin95
	.uleb128 Ltmp2064-Ltmp2063
	.uleb128 Ltmp2070-Lfunc_begin95
	.byte	0
Lcst_end95:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase60:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h84e696eca4ce9fc8E:
Lfunc_begin96:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception96
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB146_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp2071:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2072:
	test	rax, rax
	je	LBB146_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB146_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp2073:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9ca205191000996dE
Ltmp2074:
LBB146_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB146_9
LBB146_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp2082:
	call	qword ptr [rax]
Ltmp2083:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB146_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB146_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp2085:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2086:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB146_11:
Ltmp2087:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2088:
	jmp	LBB146_14
LBB146_12:
Ltmp2077:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2078:
	jmp	LBB146_14
LBB146_13:
Ltmp2075:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2076:
LBB146_14:
	ud2
LBB146_15:
Ltmp2084:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB146_21
LBB146_16:
Ltmp2079:
Ltmp2080:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2081:
	test	rax, rax
	je	LBB146_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB146_6
	jmp	LBB146_9
LBB146_20:
Ltmp2089:
	mov	r14, rax
LBB146_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end96:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table146:
Lexception96:
	.byte	255
	.byte	155
	.uleb128 Lttbase61-Lttbaseref61
Lttbaseref61:
	.byte	1
	.uleb128 Lcst_end96-Lcst_begin96
Lcst_begin96:
	.uleb128 Ltmp2071-Lfunc_begin96
	.uleb128 Ltmp2074-Ltmp2071
	.uleb128 Ltmp2079-Lfunc_begin96
	.byte	3
	.uleb128 Ltmp2082-Lfunc_begin96
	.uleb128 Ltmp2083-Ltmp2082
	.uleb128 Ltmp2084-Lfunc_begin96
	.byte	0
	.uleb128 Ltmp2085-Lfunc_begin96
	.uleb128 Ltmp2088-Ltmp2085
	.uleb128 Ltmp2089-Lfunc_begin96
	.byte	0
	.uleb128 Ltmp2077-Lfunc_begin96
	.uleb128 Ltmp2076-Ltmp2077
	.uleb128 Ltmp2079-Lfunc_begin96
	.byte	3
	.uleb128 Ltmp2080-Lfunc_begin96
	.uleb128 Ltmp2081-Ltmp2080
	.uleb128 Ltmp2089-Lfunc_begin96
	.byte	0
	.uleb128 Ltmp2081-Lfunc_begin96
	.uleb128 Lfunc_end96-Ltmp2081
	.byte	0
	.byte	0
Lcst_end96:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase61:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h85e1b76bd1affdd5E:
Lfunc_begin97:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception97
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm3, xmmword ptr [rdi + 128]
	movdqu	xmm2, xmmword ptr [rdi + 144]
	movups	xmm0, xmmword ptr [rdi + 192]
	movdqu	xmm1, xmmword ptr [rdi + 208]
	pxor	xmm4, xmm4
	movdqu	xmmword ptr [rdi + 128], xmm4
	movq	rax, xmm3
	test	rax, rax
	je	LBB147_1
	mov	rbx, rdi
	pshufd	xmm3, xmm3, 78
	movq	rcx, xmm3
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB147_4
	movdqu	xmm3, xmmword ptr [rbx + 160]
	movdqu	xmm4, xmmword ptr [rbx + 176]
	pshufd	xmm5, xmm1, 78
	movq	rax, xmm5
	movq	rdx, xmm2
	pshufd	xmm5, xmm4, 78
	palignr	xmm4, xmm3, 8
	palignr	xmm3, xmm2, 8
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	movdqu	xmmword ptr [rsp + 192], xmm3
	movq	qword ptr [rsp + 224], xmm5
	movdqu	xmmword ptr [rsp + 208], xmm4
	movq	qword ptr [rsp + 248], xmm1
	movups	xmmword ptr [rsp + 232], xmm0
Ltmp2090:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 192]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h0d59b9077151e637E
Ltmp2091:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movdqa	xmm3, xmmword ptr [rsp + 304]
	movdqa	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movaps	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB147_13
LBB147_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2097:
	call	qword ptr [rax]
Ltmp2098:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB147_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB147_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 224], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB147_1:
Ltmp2100:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2101:
	jmp	LBB147_2
LBB147_4:
Ltmp2092:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2093:
LBB147_2:
	ud2
LBB147_14:
Ltmp2099:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movdqa	xmm3, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movaps	xmmword ptr [rbx], xmm0
LBB147_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB147_5:
Ltmp2094:
Ltmp2095:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2096:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB147_10
	jmp	LBB147_13
LBB147_16:
Ltmp2102:
	mov	r14, rax
	jmp	LBB147_15
Lfunc_end97:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table147:
Lexception97:
	.byte	255
	.byte	155
	.uleb128 Lttbase62-Lttbaseref62
Lttbaseref62:
	.byte	1
	.uleb128 Lcst_end97-Lcst_begin97
Lcst_begin97:
	.uleb128 Ltmp2090-Lfunc_begin97
	.uleb128 Ltmp2091-Ltmp2090
	.uleb128 Ltmp2094-Lfunc_begin97
	.byte	3
	.uleb128 Ltmp2097-Lfunc_begin97
	.uleb128 Ltmp2098-Ltmp2097
	.uleb128 Ltmp2099-Lfunc_begin97
	.byte	0
	.uleb128 Ltmp2100-Lfunc_begin97
	.uleb128 Ltmp2101-Ltmp2100
	.uleb128 Ltmp2102-Lfunc_begin97
	.byte	0
	.uleb128 Ltmp2092-Lfunc_begin97
	.uleb128 Ltmp2093-Ltmp2092
	.uleb128 Ltmp2094-Lfunc_begin97
	.byte	3
	.uleb128 Ltmp2093-Lfunc_begin97
	.uleb128 Ltmp2095-Ltmp2093
	.byte	0
	.byte	0
	.uleb128 Ltmp2095-Lfunc_begin97
	.uleb128 Ltmp2096-Ltmp2095
	.uleb128 Ltmp2102-Lfunc_begin97
	.byte	0
Lcst_end97:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase62:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h8b09c0858c976678E:
Lfunc_begin98:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception98
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 448
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 128]
	movdqu	xmm0, xmmword ptr [rdi + 144]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi + 128], xmm2
	mov	rax, qword ptr [rdi + 176]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rdi + 168]
	mov	qword ptr [rsp + 72], rax
	mov	rax, qword ptr [rdi + 160]
	mov	qword ptr [rsp + 64], rax
	movq	rcx, xmm1
	test	rcx, rcx
	je	LBB148_1
	mov	rbx, rdi
	mov	rax, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 312], rax
	mov	rdx, qword ptr [rsp + 64]
	mov	rsi, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 304], rsi
	mov	qword ptr [rsp + 296], rdx
	movdqa	xmmword ptr [rsp + 80], xmm0
	movdqa	xmmword ptr [rsp + 64], xmm1
	mov	qword ptr [rsp + 96], rdx
	mov	qword ptr [rsp + 104], rsi
	mov	qword ptr [rsp + 112], rax
	pshufd	xmm1, xmm1, 78
	movq	rdi, xmm1
	mov	qword ptr [rsp + 264], rsi
	mov	qword ptr [rsp + 256], rdx
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 248], rdx
	mov	rsi, qword ptr [rcx]
	sub	rsi, qword ptr [rdi]
	jb	LBB148_4
	movq	rdx, xmm0
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	mov	rdx, qword ptr [rsp + 264]
	mov	qword ptr [rsp + 288], rdx
	mov	rdx, qword ptr [rsp + 248]
	mov	rdi, qword ptr [rsp + 256]
	mov	qword ptr [rsp + 280], rdi
	mov	qword ptr [rsp + 272], rdx
Ltmp2103:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 320]
	lea	r9, [rsp + 272]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8bebf2fbcff93f77E
Ltmp2104:
	movdqa	xmm0, xmmword ptr [rsp + 320]
	movdqa	xmm1, xmmword ptr [rsp + 336]
	movaps	xmm2, xmmword ptr [rsp + 352]
	movaps	xmm3, xmmword ptr [rsp + 368]
	movaps	xmmword ptr [rsp + 176], xmm3
	movaps	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movdqa	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB148_13
LBB148_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2110:
	call	qword ptr [rax]
Ltmp2111:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB148_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB148_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 184], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB148_1:
Ltmp2113:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2114:
	jmp	LBB148_2
LBB148_4:
Ltmp2105:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2106:
LBB148_2:
	ud2
LBB148_14:
Ltmp2112:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm3
	movaps	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movdqa	xmmword ptr [rbx], xmm0
LBB148_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB148_5:
Ltmp2107:
Ltmp2108:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2109:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB148_10
	jmp	LBB148_13
LBB148_16:
Ltmp2115:
	mov	r14, rax
	jmp	LBB148_15
Lfunc_end98:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table148:
Lexception98:
	.byte	255
	.byte	155
	.uleb128 Lttbase63-Lttbaseref63
Lttbaseref63:
	.byte	1
	.uleb128 Lcst_end98-Lcst_begin98
Lcst_begin98:
	.uleb128 Ltmp2103-Lfunc_begin98
	.uleb128 Ltmp2104-Ltmp2103
	.uleb128 Ltmp2107-Lfunc_begin98
	.byte	3
	.uleb128 Ltmp2110-Lfunc_begin98
	.uleb128 Ltmp2111-Ltmp2110
	.uleb128 Ltmp2112-Lfunc_begin98
	.byte	0
	.uleb128 Ltmp2113-Lfunc_begin98
	.uleb128 Ltmp2114-Ltmp2113
	.uleb128 Ltmp2115-Lfunc_begin98
	.byte	0
	.uleb128 Ltmp2105-Lfunc_begin98
	.uleb128 Ltmp2106-Ltmp2105
	.uleb128 Ltmp2107-Lfunc_begin98
	.byte	3
	.uleb128 Ltmp2106-Lfunc_begin98
	.uleb128 Ltmp2108-Ltmp2106
	.byte	0
	.byte	0
	.uleb128 Ltmp2108-Lfunc_begin98
	.uleb128 Ltmp2109-Ltmp2108
	.uleb128 Ltmp2115-Lfunc_begin98
	.byte	0
Lcst_end98:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase63:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h8c14d870ff6a2f0aE:
Lfunc_begin99:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception99
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB149_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp2116:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2117:
	test	rax, rax
	je	LBB149_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB149_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp2118:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h3978e15f5771cce6E
Ltmp2119:
LBB149_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB149_9
LBB149_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp2127:
	call	qword ptr [rax]
Ltmp2128:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB149_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB149_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp2130:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2131:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB149_11:
Ltmp2132:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2133:
	jmp	LBB149_14
LBB149_12:
Ltmp2122:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2123:
	jmp	LBB149_14
LBB149_13:
Ltmp2120:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2121:
LBB149_14:
	ud2
LBB149_15:
Ltmp2129:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB149_21
LBB149_16:
Ltmp2124:
Ltmp2125:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2126:
	test	rax, rax
	je	LBB149_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB149_6
	jmp	LBB149_9
LBB149_20:
Ltmp2134:
	mov	r14, rax
LBB149_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end99:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table149:
Lexception99:
	.byte	255
	.byte	155
	.uleb128 Lttbase64-Lttbaseref64
Lttbaseref64:
	.byte	1
	.uleb128 Lcst_end99-Lcst_begin99
Lcst_begin99:
	.uleb128 Ltmp2116-Lfunc_begin99
	.uleb128 Ltmp2119-Ltmp2116
	.uleb128 Ltmp2124-Lfunc_begin99
	.byte	3
	.uleb128 Ltmp2127-Lfunc_begin99
	.uleb128 Ltmp2128-Ltmp2127
	.uleb128 Ltmp2129-Lfunc_begin99
	.byte	0
	.uleb128 Ltmp2130-Lfunc_begin99
	.uleb128 Ltmp2133-Ltmp2130
	.uleb128 Ltmp2134-Lfunc_begin99
	.byte	0
	.uleb128 Ltmp2122-Lfunc_begin99
	.uleb128 Ltmp2121-Ltmp2122
	.uleb128 Ltmp2124-Lfunc_begin99
	.byte	3
	.uleb128 Ltmp2125-Lfunc_begin99
	.uleb128 Ltmp2126-Ltmp2125
	.uleb128 Ltmp2134-Lfunc_begin99
	.byte	0
	.uleb128 Ltmp2126-Lfunc_begin99
	.uleb128 Lfunc_end99-Ltmp2126
	.byte	0
	.byte	0
Lcst_end99:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase64:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h8da3cda5121704f4E:
Lfunc_begin100:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception100
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB150_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB150_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp2135:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf17d0abb9471ca78E
Ltmp2136:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB150_14
LBB150_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp2142:
	call	qword ptr [rax]
Ltmp2143:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB150_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB150_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB150_1:
Ltmp2145:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2146:
	jmp	LBB150_2
LBB150_4:
Ltmp2137:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2138:
LBB150_2:
	ud2
LBB150_15:
Ltmp2144:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB150_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB150_6:
Ltmp2139:
Ltmp2140:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2141:
	test	rax, rax
	je	LBB150_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB150_11
	jmp	LBB150_14
LBB150_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB150_11
	jmp	LBB150_14
LBB150_17:
Ltmp2147:
	mov	r14, rax
	jmp	LBB150_16
Lfunc_end100:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table150:
Lexception100:
	.byte	255
	.byte	155
	.uleb128 Lttbase65-Lttbaseref65
Lttbaseref65:
	.byte	1
	.uleb128 Lcst_end100-Lcst_begin100
Lcst_begin100:
	.uleb128 Ltmp2135-Lfunc_begin100
	.uleb128 Ltmp2136-Ltmp2135
	.uleb128 Ltmp2139-Lfunc_begin100
	.byte	3
	.uleb128 Ltmp2142-Lfunc_begin100
	.uleb128 Ltmp2143-Ltmp2142
	.uleb128 Ltmp2144-Lfunc_begin100
	.byte	0
	.uleb128 Ltmp2145-Lfunc_begin100
	.uleb128 Ltmp2146-Ltmp2145
	.uleb128 Ltmp2147-Lfunc_begin100
	.byte	0
	.uleb128 Ltmp2137-Lfunc_begin100
	.uleb128 Ltmp2138-Ltmp2137
	.uleb128 Ltmp2139-Lfunc_begin100
	.byte	3
	.uleb128 Ltmp2138-Lfunc_begin100
	.uleb128 Ltmp2140-Ltmp2138
	.byte	0
	.byte	0
	.uleb128 Ltmp2140-Lfunc_begin100
	.uleb128 Ltmp2141-Ltmp2140
	.uleb128 Ltmp2147-Lfunc_begin100
	.byte	0
Lcst_end100:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase65:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h8fdce23ca587fd0dE:
Lfunc_begin101:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception101
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm3, xmmword ptr [rdi + 128]
	movdqu	xmm2, xmmword ptr [rdi + 144]
	movups	xmm0, xmmword ptr [rdi + 192]
	movdqu	xmm1, xmmword ptr [rdi + 208]
	pxor	xmm4, xmm4
	movdqu	xmmword ptr [rdi + 128], xmm4
	movq	rax, xmm3
	test	rax, rax
	je	LBB151_1
	mov	rbx, rdi
	pshufd	xmm3, xmm3, 78
	movq	rcx, xmm3
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB151_4
	movdqu	xmm3, xmmword ptr [rbx + 160]
	movdqu	xmm4, xmmword ptr [rbx + 176]
	pshufd	xmm5, xmm1, 78
	movq	rax, xmm5
	movq	rdx, xmm2
	pshufd	xmm5, xmm4, 78
	palignr	xmm4, xmm3, 8
	palignr	xmm3, xmm2, 8
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	movdqu	xmmword ptr [rsp + 192], xmm3
	movq	qword ptr [rsp + 224], xmm5
	movdqu	xmmword ptr [rsp + 208], xmm4
	movq	qword ptr [rsp + 248], xmm1
	movups	xmmword ptr [rsp + 232], xmm0
Ltmp2148:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 192]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h0ffe93cfb7fb0572E
Ltmp2149:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movdqa	xmm3, xmmword ptr [rsp + 304]
	movdqa	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movaps	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB151_13
LBB151_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2155:
	call	qword ptr [rax]
Ltmp2156:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB151_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB151_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 224], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB151_1:
Ltmp2158:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2159:
	jmp	LBB151_2
LBB151_4:
Ltmp2150:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2151:
LBB151_2:
	ud2
LBB151_14:
Ltmp2157:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movdqa	xmm3, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movaps	xmmword ptr [rbx], xmm0
LBB151_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB151_5:
Ltmp2152:
Ltmp2153:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2154:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB151_10
	jmp	LBB151_13
LBB151_16:
Ltmp2160:
	mov	r14, rax
	jmp	LBB151_15
Lfunc_end101:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table151:
Lexception101:
	.byte	255
	.byte	155
	.uleb128 Lttbase66-Lttbaseref66
Lttbaseref66:
	.byte	1
	.uleb128 Lcst_end101-Lcst_begin101
Lcst_begin101:
	.uleb128 Ltmp2148-Lfunc_begin101
	.uleb128 Ltmp2149-Ltmp2148
	.uleb128 Ltmp2152-Lfunc_begin101
	.byte	3
	.uleb128 Ltmp2155-Lfunc_begin101
	.uleb128 Ltmp2156-Ltmp2155
	.uleb128 Ltmp2157-Lfunc_begin101
	.byte	0
	.uleb128 Ltmp2158-Lfunc_begin101
	.uleb128 Ltmp2159-Ltmp2158
	.uleb128 Ltmp2160-Lfunc_begin101
	.byte	0
	.uleb128 Ltmp2150-Lfunc_begin101
	.uleb128 Ltmp2151-Ltmp2150
	.uleb128 Ltmp2152-Lfunc_begin101
	.byte	3
	.uleb128 Ltmp2151-Lfunc_begin101
	.uleb128 Ltmp2153-Ltmp2151
	.byte	0
	.byte	0
	.uleb128 Ltmp2153-Lfunc_begin101
	.uleb128 Ltmp2154-Ltmp2153
	.uleb128 Ltmp2160-Lfunc_begin101
	.byte	0
Lcst_end101:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase66:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h97d5ab8c23516d5aE:
Lfunc_begin102:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception102
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 768
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 320], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 304], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 288], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 272], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 240], xmm0
	mov	rax, qword ptr [rdi + 312]
	mov	qword ptr [rsp + 400], rax
	mov	rax, qword ptr [rdi + 304]
	mov	qword ptr [rsp + 392], rax
	mov	rax, qword ptr [rdi + 296]
	mov	qword ptr [rsp + 384], rax
	movdqa	xmmword ptr [rsp + 256], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB152_1
	mov	rbx, rdi
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 352], rax
	mov	rcx, qword ptr [rsp + 384]
	mov	rdx, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 344], rdx
	mov	qword ptr [rsp + 336], rcx
	mov	qword ptr [rsp + 376], rax
	mov	qword ptr [rsp + 368], rdx
	mov	qword ptr [rsp + 360], rcx
	mov	qword ptr [rsp + 400], rax
	mov	qword ptr [rsp + 392], rdx
	mov	qword ptr [rsp + 384], rcx
	mov	qword ptr [rsp + 56], rax
	mov	qword ptr [rsp + 48], rdx
	mov	qword ptr [rsp + 40], rcx
Ltmp2161:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2162:
	test	rax, rax
	je	LBB152_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB152_7
	pshufd	xmm0, xmmword ptr [rsp + 256], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 616], r14
	mov	qword ptr [rsp + 624], rax
	movaps	xmm0, xmmword ptr [rsp + 320]
	movups	xmmword ptr [rsp + 632], xmm0
	movaps	xmm0, xmmword ptr [rsp + 304]
	movups	xmmword ptr [rsp + 648], xmm0
	movaps	xmm0, xmmword ptr [rsp + 288]
	movups	xmmword ptr [rsp + 664], xmm0
	movaps	xmm0, xmmword ptr [rsp + 240]
	movups	xmmword ptr [rsp + 680], xmm0
	movaps	xmm0, xmmword ptr [rsp + 272]
	movups	xmmword ptr [rsp + 696], xmm0
	mov	rax, qword ptr [rsp + 40]
	mov	rcx, qword ptr [rsp + 48]
	mov	qword ptr [rsp + 712], rax
	mov	qword ptr [rsp + 720], rcx
	mov	rax, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 728], rax
Ltmp2163:
	lea	rdi, [rsp + 64]
	lea	rsi, [rsp + 616]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h1585a60d47833e4bE
Ltmp2164:
	movaps	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movaps	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	movaps	xmm4, xmmword ptr [rsp + 128]
	movaps	xmm5, xmmword ptr [rsp + 144]
	mov	rax, qword ptr [rsp + 176]
	movaps	xmm6, xmmword ptr [rsp + 160]
	mov	rcx, qword ptr [rsp + 184]
	movaps	xmmword ptr [rsp + 64], xmm6
	mov	qword ptr [rsp + 80], rax
	movaps	xmmword ptr [rsp + 448], xmm0
	movdqa	xmmword ptr [rsp + 464], xmm1
	movaps	xmmword ptr [rsp + 496], xmm3
	movaps	xmmword ptr [rsp + 480], xmm2
	movaps	xmmword ptr [rsp + 528], xmm5
	movaps	xmmword ptr [rsp + 512], xmm4
	mov	rax, qword ptr [rsp + 80]
	mov	qword ptr [rsp + 560], rax
	movaps	xmm0, xmmword ptr [rsp + 64]
	movaps	xmmword ptr [rsp + 544], xmm0
	mov	qword ptr [rsp + 568], rcx
	mov	eax, 1
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jb	LBB152_16
LBB152_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2172:
	call	qword ptr [rax]
Ltmp2173:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB152_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB152_16:
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp2175:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2176:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB152_1:
Ltmp2177:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2178:
	jmp	LBB152_2
LBB152_5:
Ltmp2167:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 64]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2168:
	jmp	LBB152_2
LBB152_7:
Ltmp2165:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2166:
LBB152_2:
	ud2
LBB152_18:
Ltmp2174:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB152_19
LBB152_8:
Ltmp2169:
Ltmp2170:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2171:
	mov	qword ptr [rsp + 392], rax
	mov	qword ptr [rsp + 400], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jae	LBB152_13
	jmp	LBB152_16
LBB152_20:
Ltmp2179:
	mov	r14, rax
LBB152_19:
	lea	rdi, [rsp + 64]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end102:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table152:
Lexception102:
	.byte	255
	.byte	155
	.uleb128 Lttbase67-Lttbaseref67
Lttbaseref67:
	.byte	1
	.uleb128 Lcst_end102-Lcst_begin102
Lcst_begin102:
	.uleb128 Ltmp2161-Lfunc_begin102
	.uleb128 Ltmp2164-Ltmp2161
	.uleb128 Ltmp2169-Lfunc_begin102
	.byte	3
	.uleb128 Ltmp2172-Lfunc_begin102
	.uleb128 Ltmp2173-Ltmp2172
	.uleb128 Ltmp2174-Lfunc_begin102
	.byte	0
	.uleb128 Ltmp2173-Lfunc_begin102
	.uleb128 Ltmp2175-Ltmp2173
	.byte	0
	.byte	0
	.uleb128 Ltmp2175-Lfunc_begin102
	.uleb128 Ltmp2178-Ltmp2175
	.uleb128 Ltmp2179-Lfunc_begin102
	.byte	0
	.uleb128 Ltmp2167-Lfunc_begin102
	.uleb128 Ltmp2166-Ltmp2167
	.uleb128 Ltmp2169-Lfunc_begin102
	.byte	3
	.uleb128 Ltmp2166-Lfunc_begin102
	.uleb128 Ltmp2170-Ltmp2166
	.byte	0
	.byte	0
	.uleb128 Ltmp2170-Lfunc_begin102
	.uleb128 Ltmp2171-Ltmp2170
	.uleb128 Ltmp2179-Lfunc_begin102
	.byte	0
	.uleb128 Ltmp2171-Lfunc_begin102
	.uleb128 Lfunc_end102-Ltmp2171
	.byte	0
	.byte	0
Lcst_end102:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase67:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17h97eed5dde8a9bab4E:
Lfunc_begin103:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception103
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm2, xmmword ptr [rdi + 128]
	movdqu	xmm0, xmmword ptr [rdi + 144]
	pxor	xmm1, xmm1
	movdqu	xmmword ptr [rdi + 128], xmm1
	movq	rax, xmm2
	test	rax, rax
	je	LBB153_1
	mov	rbx, rdi
	movups	xmm3, xmmword ptr [rdi + 160]
	movdqu	xmm1, xmmword ptr [rdi + 176]
	movdqa	xmmword ptr [rsp + 112], xmm1
	movaps	xmmword ptr [rsp + 96], xmm3
	movdqa	xmmword ptr [rsp + 80], xmm0
	movdqa	xmmword ptr [rsp + 64], xmm2
	pshufd	xmm2, xmm2, 78
	movq	rcx, xmm2
	mov	rdx, qword ptr [rsp + 96]
	mov	rsi, qword ptr [rsp + 104]
	mov	qword ptr [rsp + 56], rsi
	mov	qword ptr [rsp + 48], rdx
	mov	rdx, qword ptr [rsp + 88]
	mov	qword ptr [rsp + 40], rdx
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB153_4
	movq	rax, xmm0
	movq	r9, xmm1
	pshufd	xmm0, xmm1, 78
	movq	rdi, xmm0
	mov	rcx, qword ptr [rax]
	mov	r8, qword ptr [rax + 8]
	mov	rax, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 248], rax
	mov	rax, qword ptr [rsp + 40]
	mov	rdx, qword ptr [rsp + 48]
	mov	qword ptr [rsp + 240], rdx
	mov	qword ptr [rsp + 232], rax
Ltmp2180:
	mov	qword ptr [rsp + 8], rdi
	mov	qword ptr [rsp], r9
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 232]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7090b48d49163759E
Ltmp2181:
	movdqa	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movdqa	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB153_13
LBB153_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2187:
	call	qword ptr [rax]
Ltmp2188:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB153_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB153_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 192], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB153_1:
Ltmp2190:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2191:
	jmp	LBB153_2
LBB153_4:
Ltmp2182:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2183:
LBB153_2:
	ud2
LBB153_14:
Ltmp2189:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movdqa	xmmword ptr [rbx], xmm0
LBB153_15:
	lea	rdi, [rsp + 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB153_5:
Ltmp2184:
Ltmp2185:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2186:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB153_10
	jmp	LBB153_13
LBB153_16:
Ltmp2192:
	mov	r14, rax
	jmp	LBB153_15
Lfunc_end103:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table153:
Lexception103:
	.byte	255
	.byte	155
	.uleb128 Lttbase68-Lttbaseref68
Lttbaseref68:
	.byte	1
	.uleb128 Lcst_end103-Lcst_begin103
Lcst_begin103:
	.uleb128 Ltmp2180-Lfunc_begin103
	.uleb128 Ltmp2181-Ltmp2180
	.uleb128 Ltmp2184-Lfunc_begin103
	.byte	3
	.uleb128 Ltmp2187-Lfunc_begin103
	.uleb128 Ltmp2188-Ltmp2187
	.uleb128 Ltmp2189-Lfunc_begin103
	.byte	0
	.uleb128 Ltmp2190-Lfunc_begin103
	.uleb128 Ltmp2191-Ltmp2190
	.uleb128 Ltmp2192-Lfunc_begin103
	.byte	0
	.uleb128 Ltmp2182-Lfunc_begin103
	.uleb128 Ltmp2183-Ltmp2182
	.uleb128 Ltmp2184-Lfunc_begin103
	.byte	3
	.uleb128 Ltmp2183-Lfunc_begin103
	.uleb128 Ltmp2185-Ltmp2183
	.byte	0
	.byte	0
	.uleb128 Ltmp2185-Lfunc_begin103
	.uleb128 Ltmp2186-Ltmp2185
	.uleb128 Ltmp2192-Lfunc_begin103
	.byte	0
Lcst_end103:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase68:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17ha1d92ab8f967b530E:
Lfunc_begin104:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception104
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 128]
	movdqu	xmm0, xmmword ptr [rdi + 144]
	pxor	xmm2, xmm2
	movdqu	xmmword ptr [rdi + 128], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB154_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB154_4
	mov	rax, qword ptr [rbx + 176]
	movdqu	xmm1, xmmword ptr [rbx + 160]
	movq	rcx, xmm1
	pshufd	xmm1, xmm1, 78
	movq	rdx, xmm1
	movq	rdi, xmm0
	movq	xmm1, rdx
	movq	xmm2, rcx
	punpcklqdq	xmm2, xmm1
	pshufd	xmm1, xmm2, 78
	palignr	xmm2, xmm0, 8
	mov	rcx, qword ptr [rdi]
	mov	r8, qword ptr [rdi + 8]
	movq	qword ptr [rsp + 248], xmm1
	movdqu	xmmword ptr [rsp + 232], xmm2
Ltmp2193:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 232]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h88562aaf0f422f1dE
Ltmp2194:
	movdqa	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movdqa	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB154_13
LBB154_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2200:
	call	qword ptr [rax]
Ltmp2201:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB154_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB154_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 184], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB154_1:
Ltmp2203:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2204:
	jmp	LBB154_2
LBB154_4:
Ltmp2195:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2196:
LBB154_2:
	ud2
LBB154_14:
Ltmp2202:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movdqa	xmmword ptr [rbx], xmm0
LBB154_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB154_5:
Ltmp2197:
Ltmp2198:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2199:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB154_10
	jmp	LBB154_13
LBB154_16:
Ltmp2205:
	mov	r14, rax
	jmp	LBB154_15
Lfunc_end104:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table154:
Lexception104:
	.byte	255
	.byte	155
	.uleb128 Lttbase69-Lttbaseref69
Lttbaseref69:
	.byte	1
	.uleb128 Lcst_end104-Lcst_begin104
Lcst_begin104:
	.uleb128 Ltmp2193-Lfunc_begin104
	.uleb128 Ltmp2194-Ltmp2193
	.uleb128 Ltmp2197-Lfunc_begin104
	.byte	3
	.uleb128 Ltmp2200-Lfunc_begin104
	.uleb128 Ltmp2201-Ltmp2200
	.uleb128 Ltmp2202-Lfunc_begin104
	.byte	0
	.uleb128 Ltmp2203-Lfunc_begin104
	.uleb128 Ltmp2204-Ltmp2203
	.uleb128 Ltmp2205-Lfunc_begin104
	.byte	0
	.uleb128 Ltmp2195-Lfunc_begin104
	.uleb128 Ltmp2196-Ltmp2195
	.uleb128 Ltmp2197-Lfunc_begin104
	.byte	3
	.uleb128 Ltmp2196-Lfunc_begin104
	.uleb128 Ltmp2198-Ltmp2196
	.byte	0
	.byte	0
	.uleb128 Ltmp2198-Lfunc_begin104
	.uleb128 Ltmp2199-Ltmp2198
	.uleb128 Ltmp2205-Lfunc_begin104
	.byte	0
Lcst_end104:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase69:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17haa8806a7ca9a90c2E:
Lfunc_begin105:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception105
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB155_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB155_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp2206:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h9d5f279b65cc3217E
Ltmp2207:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB155_14
LBB155_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp2213:
	call	qword ptr [rax]
Ltmp2214:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB155_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB155_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB155_1:
Ltmp2216:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2217:
	jmp	LBB155_2
LBB155_4:
Ltmp2208:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2209:
LBB155_2:
	ud2
LBB155_15:
Ltmp2215:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB155_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB155_6:
Ltmp2210:
Ltmp2211:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2212:
	test	rax, rax
	je	LBB155_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB155_11
	jmp	LBB155_14
LBB155_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB155_11
	jmp	LBB155_14
LBB155_17:
Ltmp2218:
	mov	r14, rax
	jmp	LBB155_16
Lfunc_end105:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table155:
Lexception105:
	.byte	255
	.byte	155
	.uleb128 Lttbase70-Lttbaseref70
Lttbaseref70:
	.byte	1
	.uleb128 Lcst_end105-Lcst_begin105
Lcst_begin105:
	.uleb128 Ltmp2206-Lfunc_begin105
	.uleb128 Ltmp2207-Ltmp2206
	.uleb128 Ltmp2210-Lfunc_begin105
	.byte	3
	.uleb128 Ltmp2213-Lfunc_begin105
	.uleb128 Ltmp2214-Ltmp2213
	.uleb128 Ltmp2215-Lfunc_begin105
	.byte	0
	.uleb128 Ltmp2216-Lfunc_begin105
	.uleb128 Ltmp2217-Ltmp2216
	.uleb128 Ltmp2218-Lfunc_begin105
	.byte	0
	.uleb128 Ltmp2208-Lfunc_begin105
	.uleb128 Ltmp2209-Ltmp2208
	.uleb128 Ltmp2210-Lfunc_begin105
	.byte	3
	.uleb128 Ltmp2209-Lfunc_begin105
	.uleb128 Ltmp2211-Ltmp2209
	.byte	0
	.byte	0
	.uleb128 Ltmp2211-Lfunc_begin105
	.uleb128 Ltmp2212-Ltmp2211
	.uleb128 Ltmp2218-Lfunc_begin105
	.byte	0
Lcst_end105:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase70:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17had42af0063276cb6E:
Lfunc_begin106:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception106
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 40
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi]
	movdqu	xmm0, xmmword ptr [rdi + 16]
	xorps	xmm2, xmm2
	movups	xmmword ptr [rdi], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB156_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rdi, qword ptr [rax]
	sub	rdi, qword ptr [rcx]
	jb	LBB156_4
	mov	r9, qword ptr [rbx + 32]
	mov	rax, qword ptr [rbx + 40]
	movq	rcx, xmm0
	pshufd	xmm0, xmm0, 78
	movq	r8, xmm0
	mov	rdx, qword ptr [rcx]
	mov	rcx, qword ptr [rcx + 8]
	mov	r14d, 1
Ltmp2219:
	mov	qword ptr [rsp], rax
	mov	esi, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hd00cebf084920e92E
Ltmp2220:
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jb	LBB156_14
LBB156_11:
	mov	rdi, qword ptr [rbx + 56]
	mov	rax, qword ptr [rbx + 64]
Ltmp2226:
	call	qword ptr [rax]
Ltmp2227:
	mov	rax, qword ptr [rbx + 64]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB156_14
	mov	rdi, qword ptr [rbx + 56]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB156_14:
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	al, 1
	xchg	byte ptr [rbx + 72], al
	add	rsp, 40
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB156_1:
Ltmp2229:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2230:
	jmp	LBB156_2
LBB156_4:
Ltmp2221:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2222:
LBB156_2:
	ud2
LBB156_15:
Ltmp2228:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 56]
	mov	rsi, qword ptr [rbx + 64]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 56]
	mov	rcx, qword ptr [rbp - 48]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
LBB156_16:
	lea	rdi, [rbp - 32]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB156_6:
Ltmp2223:
Ltmp2224:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2225:
	test	rax, rax
	je	LBB156_8
	mov	qword ptr [rbp - 48], rax
	mov	qword ptr [rbp - 40], rdx
	mov	r14d, 2
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB156_11
	jmp	LBB156_14
LBB156_8:
	mov	r14d, 1
	mov	qword ptr [rbp - 56], r14
	lea	r15, [rbx + 48]
	cmp	qword ptr [rbx + 48], 2
	jae	LBB156_11
	jmp	LBB156_14
LBB156_17:
Ltmp2231:
	mov	r14, rax
	jmp	LBB156_16
Lfunc_end106:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table156:
Lexception106:
	.byte	255
	.byte	155
	.uleb128 Lttbase71-Lttbaseref71
Lttbaseref71:
	.byte	1
	.uleb128 Lcst_end106-Lcst_begin106
Lcst_begin106:
	.uleb128 Ltmp2219-Lfunc_begin106
	.uleb128 Ltmp2220-Ltmp2219
	.uleb128 Ltmp2223-Lfunc_begin106
	.byte	3
	.uleb128 Ltmp2226-Lfunc_begin106
	.uleb128 Ltmp2227-Ltmp2226
	.uleb128 Ltmp2228-Lfunc_begin106
	.byte	0
	.uleb128 Ltmp2229-Lfunc_begin106
	.uleb128 Ltmp2230-Ltmp2229
	.uleb128 Ltmp2231-Lfunc_begin106
	.byte	0
	.uleb128 Ltmp2221-Lfunc_begin106
	.uleb128 Ltmp2222-Ltmp2221
	.uleb128 Ltmp2223-Lfunc_begin106
	.byte	3
	.uleb128 Ltmp2222-Lfunc_begin106
	.uleb128 Ltmp2224-Ltmp2222
	.byte	0
	.byte	0
	.uleb128 Ltmp2224-Lfunc_begin106
	.uleb128 Ltmp2225-Ltmp2224
	.uleb128 Ltmp2231-Lfunc_begin106
	.byte	0
Lcst_end106:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase71:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hc23691182f8b6340E:
Lfunc_begin107:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception107
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 640
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 240], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 208], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movdqa	xmmword ptr [rsp + 192], xmm1
	movq	r15, xmm1
	test	r15, r15
	je	LBB157_1
	mov	rbx, rdi
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 176], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 160], xmm0
	mov	r14, qword ptr [rdi + 296]
Ltmp2232:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2233:
	test	rax, rax
	je	LBB157_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB157_7
	pshufd	xmm0, xmmword ptr [rsp + 192], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 56], r15
	mov	qword ptr [rsp + 64], rax
	movaps	xmm0, xmmword ptr [rsp + 240]
	movups	xmmword ptr [rsp + 72], xmm0
	movaps	xmm0, xmmword ptr [rsp + 224]
	movups	xmmword ptr [rsp + 88], xmm0
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 104], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 120], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 136], xmm0
	mov	qword ptr [rsp + 152], r14
Ltmp2234:
	lea	rdi, [rsp + 256]
	lea	rsi, [rsp + 56]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17hdfa8584ced223de9E
Ltmp2235:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movaps	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmm4, xmmword ptr [rsp + 320]
	movaps	xmm5, xmmword ptr [rsp + 336]
	mov	rax, qword ptr [rsp + 352]
	mov	rcx, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 56], rcx
	mov	rcx, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 64], rcx
	mov	rcx, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 72], rcx
	movaps	xmmword ptr [rsp + 448], xmm0
	movdqa	xmmword ptr [rsp + 464], xmm1
	movaps	xmmword ptr [rsp + 496], xmm3
	movaps	xmmword ptr [rsp + 480], xmm2
	movaps	xmmword ptr [rsp + 528], xmm5
	movaps	xmmword ptr [rsp + 512], xmm4
	mov	qword ptr [rsp + 544], rax
	mov	rax, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 56]
	mov	rcx, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 560], rcx
	mov	qword ptr [rsp + 552], rax
	mov	eax, 1
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jb	LBB157_16
LBB157_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2243:
	call	qword ptr [rax]
Ltmp2244:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB157_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB157_16:
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp2246:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2247:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB157_1:
Ltmp2248:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2249:
	jmp	LBB157_2
LBB157_5:
Ltmp2238:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2239:
	jmp	LBB157_2
LBB157_7:
Ltmp2236:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2237:
LBB157_2:
	ud2
LBB157_18:
Ltmp2245:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB157_19
LBB157_8:
Ltmp2240:
Ltmp2241:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2242:
	mov	qword ptr [rsp + 392], rax
	mov	qword ptr [rsp + 400], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jae	LBB157_13
	jmp	LBB157_16
LBB157_20:
Ltmp2250:
	mov	r14, rax
LBB157_19:
	lea	rdi, [rsp + 256]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end107:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table157:
Lexception107:
	.byte	255
	.byte	155
	.uleb128 Lttbase72-Lttbaseref72
Lttbaseref72:
	.byte	1
	.uleb128 Lcst_end107-Lcst_begin107
Lcst_begin107:
	.uleb128 Ltmp2232-Lfunc_begin107
	.uleb128 Ltmp2235-Ltmp2232
	.uleb128 Ltmp2240-Lfunc_begin107
	.byte	3
	.uleb128 Ltmp2243-Lfunc_begin107
	.uleb128 Ltmp2244-Ltmp2243
	.uleb128 Ltmp2245-Lfunc_begin107
	.byte	0
	.uleb128 Ltmp2244-Lfunc_begin107
	.uleb128 Ltmp2246-Ltmp2244
	.byte	0
	.byte	0
	.uleb128 Ltmp2246-Lfunc_begin107
	.uleb128 Ltmp2249-Ltmp2246
	.uleb128 Ltmp2250-Lfunc_begin107
	.byte	0
	.uleb128 Ltmp2238-Lfunc_begin107
	.uleb128 Ltmp2237-Ltmp2238
	.uleb128 Ltmp2240-Lfunc_begin107
	.byte	3
	.uleb128 Ltmp2237-Lfunc_begin107
	.uleb128 Ltmp2241-Ltmp2237
	.byte	0
	.byte	0
	.uleb128 Ltmp2241-Lfunc_begin107
	.uleb128 Ltmp2242-Ltmp2241
	.uleb128 Ltmp2250-Lfunc_begin107
	.byte	0
	.uleb128 Ltmp2242-Lfunc_begin107
	.uleb128 Lfunc_end107-Ltmp2242
	.byte	0
	.byte	0
Lcst_end107:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase72:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hc400b65a151bed27E:
Lfunc_begin108:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception108
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB158_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp2251:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2252:
	test	rax, rax
	je	LBB158_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB158_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp2253:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9495025b2b50f61eE
Ltmp2254:
LBB158_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB158_9
LBB158_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp2262:
	call	qword ptr [rax]
Ltmp2263:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB158_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB158_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp2265:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2266:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB158_11:
Ltmp2267:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2268:
	jmp	LBB158_14
LBB158_12:
Ltmp2257:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2258:
	jmp	LBB158_14
LBB158_13:
Ltmp2255:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2256:
LBB158_14:
	ud2
LBB158_15:
Ltmp2264:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB158_21
LBB158_16:
Ltmp2259:
Ltmp2260:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2261:
	test	rax, rax
	je	LBB158_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB158_6
	jmp	LBB158_9
LBB158_20:
Ltmp2269:
	mov	r14, rax
LBB158_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end108:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table158:
Lexception108:
	.byte	255
	.byte	155
	.uleb128 Lttbase73-Lttbaseref73
Lttbaseref73:
	.byte	1
	.uleb128 Lcst_end108-Lcst_begin108
Lcst_begin108:
	.uleb128 Ltmp2251-Lfunc_begin108
	.uleb128 Ltmp2254-Ltmp2251
	.uleb128 Ltmp2259-Lfunc_begin108
	.byte	3
	.uleb128 Ltmp2262-Lfunc_begin108
	.uleb128 Ltmp2263-Ltmp2262
	.uleb128 Ltmp2264-Lfunc_begin108
	.byte	0
	.uleb128 Ltmp2265-Lfunc_begin108
	.uleb128 Ltmp2268-Ltmp2265
	.uleb128 Ltmp2269-Lfunc_begin108
	.byte	0
	.uleb128 Ltmp2257-Lfunc_begin108
	.uleb128 Ltmp2256-Ltmp2257
	.uleb128 Ltmp2259-Lfunc_begin108
	.byte	3
	.uleb128 Ltmp2260-Lfunc_begin108
	.uleb128 Ltmp2261-Ltmp2260
	.uleb128 Ltmp2269-Lfunc_begin108
	.byte	0
	.uleb128 Ltmp2261-Lfunc_begin108
	.uleb128 Lfunc_end108-Ltmp2261
	.byte	0
	.byte	0
Lcst_end108:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase73:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hc535d949fabe1eecE:
Lfunc_begin109:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception109
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB159_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp2270:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2271:
	test	rax, rax
	je	LBB159_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB159_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp2272:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h041385a07b035670E
Ltmp2273:
LBB159_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB159_9
LBB159_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp2281:
	call	qword ptr [rax]
Ltmp2282:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB159_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB159_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp2284:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2285:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB159_11:
Ltmp2286:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2287:
	jmp	LBB159_14
LBB159_12:
Ltmp2276:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2277:
	jmp	LBB159_14
LBB159_13:
Ltmp2274:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2275:
LBB159_14:
	ud2
LBB159_15:
Ltmp2283:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB159_21
LBB159_16:
Ltmp2278:
Ltmp2279:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2280:
	test	rax, rax
	je	LBB159_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB159_6
	jmp	LBB159_9
LBB159_20:
Ltmp2288:
	mov	r14, rax
LBB159_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end109:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table159:
Lexception109:
	.byte	255
	.byte	155
	.uleb128 Lttbase74-Lttbaseref74
Lttbaseref74:
	.byte	1
	.uleb128 Lcst_end109-Lcst_begin109
Lcst_begin109:
	.uleb128 Ltmp2270-Lfunc_begin109
	.uleb128 Ltmp2273-Ltmp2270
	.uleb128 Ltmp2278-Lfunc_begin109
	.byte	3
	.uleb128 Ltmp2281-Lfunc_begin109
	.uleb128 Ltmp2282-Ltmp2281
	.uleb128 Ltmp2283-Lfunc_begin109
	.byte	0
	.uleb128 Ltmp2284-Lfunc_begin109
	.uleb128 Ltmp2287-Ltmp2284
	.uleb128 Ltmp2288-Lfunc_begin109
	.byte	0
	.uleb128 Ltmp2276-Lfunc_begin109
	.uleb128 Ltmp2275-Ltmp2276
	.uleb128 Ltmp2278-Lfunc_begin109
	.byte	3
	.uleb128 Ltmp2279-Lfunc_begin109
	.uleb128 Ltmp2280-Ltmp2279
	.uleb128 Ltmp2288-Lfunc_begin109
	.byte	0
	.uleb128 Ltmp2280-Lfunc_begin109
	.uleb128 Lfunc_end109-Ltmp2280
	.byte	0
	.byte	0
Lcst_end109:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase74:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hcc144b7baeda931fE:
Lfunc_begin110:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception110
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 128]
	movdqu	xmm0, xmmword ptr [rdi + 144]
	pxor	xmm2, xmm2
	movdqu	xmmword ptr [rdi + 128], xmm2
	movq	rax, xmm1
	test	rax, rax
	je	LBB160_1
	mov	rbx, rdi
	pshufd	xmm1, xmm1, 78
	movq	rcx, xmm1
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB160_4
	mov	rax, qword ptr [rbx + 176]
	movdqu	xmm1, xmmword ptr [rbx + 160]
	movq	rcx, xmm1
	pshufd	xmm1, xmm1, 78
	movq	rdx, xmm1
	movq	rdi, xmm0
	movq	xmm1, rdx
	movq	xmm2, rcx
	punpcklqdq	xmm2, xmm1
	pshufd	xmm1, xmm2, 78
	palignr	xmm2, xmm0, 8
	mov	rcx, qword ptr [rdi]
	mov	r8, qword ptr [rdi + 8]
	movq	qword ptr [rsp + 248], xmm1
	movdqu	xmmword ptr [rsp + 232], xmm2
Ltmp2289:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 232]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hce15a800f10f4e33E
Ltmp2290:
	movdqa	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movdqa	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB160_13
LBB160_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2296:
	call	qword ptr [rax]
Ltmp2297:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB160_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB160_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 184], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB160_1:
Ltmp2299:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2300:
	jmp	LBB160_2
LBB160_4:
Ltmp2291:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2292:
LBB160_2:
	ud2
LBB160_14:
Ltmp2298:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movaps	xmm3, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movdqa	xmmword ptr [rbx], xmm0
LBB160_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB160_5:
Ltmp2293:
Ltmp2294:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2295:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB160_10
	jmp	LBB160_13
LBB160_16:
Ltmp2301:
	mov	r14, rax
	jmp	LBB160_15
Lfunc_end110:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table160:
Lexception110:
	.byte	255
	.byte	155
	.uleb128 Lttbase75-Lttbaseref75
Lttbaseref75:
	.byte	1
	.uleb128 Lcst_end110-Lcst_begin110
Lcst_begin110:
	.uleb128 Ltmp2289-Lfunc_begin110
	.uleb128 Ltmp2290-Ltmp2289
	.uleb128 Ltmp2293-Lfunc_begin110
	.byte	3
	.uleb128 Ltmp2296-Lfunc_begin110
	.uleb128 Ltmp2297-Ltmp2296
	.uleb128 Ltmp2298-Lfunc_begin110
	.byte	0
	.uleb128 Ltmp2299-Lfunc_begin110
	.uleb128 Ltmp2300-Ltmp2299
	.uleb128 Ltmp2301-Lfunc_begin110
	.byte	0
	.uleb128 Ltmp2291-Lfunc_begin110
	.uleb128 Ltmp2292-Ltmp2291
	.uleb128 Ltmp2293-Lfunc_begin110
	.byte	3
	.uleb128 Ltmp2292-Lfunc_begin110
	.uleb128 Ltmp2294-Ltmp2292
	.byte	0
	.byte	0
	.uleb128 Ltmp2294-Lfunc_begin110
	.uleb128 Ltmp2295-Ltmp2294
	.uleb128 Ltmp2301-Lfunc_begin110
	.byte	0
Lcst_end110:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase75:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hd23e8ab73b0a4946E:
Lfunc_begin111:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception111
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm3, xmmword ptr [rdi + 128]
	movdqu	xmm2, xmmword ptr [rdi + 144]
	movups	xmm0, xmmword ptr [rdi + 192]
	movdqu	xmm1, xmmword ptr [rdi + 208]
	pxor	xmm4, xmm4
	movdqu	xmmword ptr [rdi + 128], xmm4
	movq	rax, xmm3
	test	rax, rax
	je	LBB161_1
	mov	rbx, rdi
	pshufd	xmm3, xmm3, 78
	movq	rcx, xmm3
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB161_4
	movdqu	xmm3, xmmword ptr [rbx + 160]
	movdqu	xmm4, xmmword ptr [rbx + 176]
	pshufd	xmm5, xmm1, 78
	movq	rax, xmm5
	movq	rdx, xmm2
	pshufd	xmm5, xmm4, 78
	palignr	xmm4, xmm3, 8
	palignr	xmm3, xmm2, 8
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	movq	qword ptr [rsp + 224], xmm5
	movdqu	xmmword ptr [rsp + 208], xmm4
	movdqu	xmmword ptr [rsp + 192], xmm3
	movq	qword ptr [rsp + 248], xmm1
	movups	xmmword ptr [rsp + 232], xmm0
Ltmp2302:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 192]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h2eb6b78daa809218E
Ltmp2303:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movdqa	xmm3, xmmword ptr [rsp + 304]
	movdqa	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movaps	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB161_13
LBB161_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2309:
	call	qword ptr [rax]
Ltmp2310:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB161_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB161_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 224], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB161_1:
Ltmp2312:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2313:
	jmp	LBB161_2
LBB161_4:
Ltmp2304:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2305:
LBB161_2:
	ud2
LBB161_14:
Ltmp2311:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movdqa	xmm3, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movaps	xmmword ptr [rbx], xmm0
LBB161_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB161_5:
Ltmp2306:
Ltmp2307:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2308:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB161_10
	jmp	LBB161_13
LBB161_16:
Ltmp2314:
	mov	r14, rax
	jmp	LBB161_15
Lfunc_end111:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table161:
Lexception111:
	.byte	255
	.byte	155
	.uleb128 Lttbase76-Lttbaseref76
Lttbaseref76:
	.byte	1
	.uleb128 Lcst_end111-Lcst_begin111
Lcst_begin111:
	.uleb128 Ltmp2302-Lfunc_begin111
	.uleb128 Ltmp2303-Ltmp2302
	.uleb128 Ltmp2306-Lfunc_begin111
	.byte	3
	.uleb128 Ltmp2309-Lfunc_begin111
	.uleb128 Ltmp2310-Ltmp2309
	.uleb128 Ltmp2311-Lfunc_begin111
	.byte	0
	.uleb128 Ltmp2312-Lfunc_begin111
	.uleb128 Ltmp2313-Ltmp2312
	.uleb128 Ltmp2314-Lfunc_begin111
	.byte	0
	.uleb128 Ltmp2304-Lfunc_begin111
	.uleb128 Ltmp2305-Ltmp2304
	.uleb128 Ltmp2306-Lfunc_begin111
	.byte	3
	.uleb128 Ltmp2305-Lfunc_begin111
	.uleb128 Ltmp2307-Ltmp2305
	.byte	0
	.byte	0
	.uleb128 Ltmp2307-Lfunc_begin111
	.uleb128 Ltmp2308-Ltmp2307
	.uleb128 Ltmp2314-Lfunc_begin111
	.byte	0
Lcst_end111:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase76:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hd5d385bbaeefbaddE:
Lfunc_begin112:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception112
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 640
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 240], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 208], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movdqa	xmmword ptr [rsp + 192], xmm1
	movq	r15, xmm1
	test	r15, r15
	je	LBB162_1
	mov	rbx, rdi
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 176], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 160], xmm0
	mov	r14, qword ptr [rdi + 296]
Ltmp2315:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2316:
	test	rax, rax
	je	LBB162_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB162_7
	pshufd	xmm0, xmmword ptr [rsp + 192], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 56], r15
	mov	qword ptr [rsp + 64], rax
	movaps	xmm0, xmmword ptr [rsp + 240]
	movups	xmmword ptr [rsp + 72], xmm0
	movaps	xmm0, xmmword ptr [rsp + 224]
	movups	xmmword ptr [rsp + 88], xmm0
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 104], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 120], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 136], xmm0
	mov	qword ptr [rsp + 152], r14
Ltmp2317:
	lea	rdi, [rsp + 256]
	lea	rsi, [rsp + 56]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17he54d9e491b91f7a1E
Ltmp2318:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movaps	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmm4, xmmword ptr [rsp + 320]
	movaps	xmm5, xmmword ptr [rsp + 336]
	mov	rax, qword ptr [rsp + 352]
	mov	rcx, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 56], rcx
	mov	rcx, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 64], rcx
	mov	rcx, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 72], rcx
	movaps	xmmword ptr [rsp + 448], xmm0
	movdqa	xmmword ptr [rsp + 464], xmm1
	movaps	xmmword ptr [rsp + 496], xmm3
	movaps	xmmword ptr [rsp + 480], xmm2
	movaps	xmmword ptr [rsp + 528], xmm5
	movaps	xmmword ptr [rsp + 512], xmm4
	mov	qword ptr [rsp + 544], rax
	mov	rax, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 56]
	mov	rcx, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 560], rcx
	mov	qword ptr [rsp + 552], rax
	mov	eax, 1
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jb	LBB162_16
LBB162_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2326:
	call	qword ptr [rax]
Ltmp2327:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB162_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB162_16:
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp2329:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2330:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB162_1:
Ltmp2331:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2332:
	jmp	LBB162_2
LBB162_5:
Ltmp2321:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2322:
	jmp	LBB162_2
LBB162_7:
Ltmp2319:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2320:
LBB162_2:
	ud2
LBB162_18:
Ltmp2328:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB162_19
LBB162_8:
Ltmp2323:
Ltmp2324:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2325:
	mov	qword ptr [rsp + 392], rax
	mov	qword ptr [rsp + 400], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jae	LBB162_13
	jmp	LBB162_16
LBB162_20:
Ltmp2333:
	mov	r14, rax
LBB162_19:
	lea	rdi, [rsp + 256]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end112:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table162:
Lexception112:
	.byte	255
	.byte	155
	.uleb128 Lttbase77-Lttbaseref77
Lttbaseref77:
	.byte	1
	.uleb128 Lcst_end112-Lcst_begin112
Lcst_begin112:
	.uleb128 Ltmp2315-Lfunc_begin112
	.uleb128 Ltmp2318-Ltmp2315
	.uleb128 Ltmp2323-Lfunc_begin112
	.byte	3
	.uleb128 Ltmp2326-Lfunc_begin112
	.uleb128 Ltmp2327-Ltmp2326
	.uleb128 Ltmp2328-Lfunc_begin112
	.byte	0
	.uleb128 Ltmp2327-Lfunc_begin112
	.uleb128 Ltmp2329-Ltmp2327
	.byte	0
	.byte	0
	.uleb128 Ltmp2329-Lfunc_begin112
	.uleb128 Ltmp2332-Ltmp2329
	.uleb128 Ltmp2333-Lfunc_begin112
	.byte	0
	.uleb128 Ltmp2321-Lfunc_begin112
	.uleb128 Ltmp2320-Ltmp2321
	.uleb128 Ltmp2323-Lfunc_begin112
	.byte	3
	.uleb128 Ltmp2320-Lfunc_begin112
	.uleb128 Ltmp2324-Ltmp2320
	.byte	0
	.byte	0
	.uleb128 Ltmp2324-Lfunc_begin112
	.uleb128 Ltmp2325-Ltmp2324
	.uleb128 Ltmp2333-Lfunc_begin112
	.byte	0
	.uleb128 Ltmp2325-Lfunc_begin112
	.uleb128 Lfunc_end112-Ltmp2325
	.byte	0
	.byte	0
Lcst_end112:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase77:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hd925ce92ade76618E:
Lfunc_begin113:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception113
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 640
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 240], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 208], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movdqa	xmmword ptr [rsp + 192], xmm1
	movq	r15, xmm1
	test	r15, r15
	je	LBB163_1
	mov	rbx, rdi
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 176], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 160], xmm0
	mov	r14, qword ptr [rdi + 296]
Ltmp2334:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2335:
	test	rax, rax
	je	LBB163_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB163_7
	pshufd	xmm0, xmmword ptr [rsp + 192], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 56], r15
	mov	qword ptr [rsp + 64], rax
	movaps	xmm0, xmmword ptr [rsp + 240]
	movups	xmmword ptr [rsp + 72], xmm0
	movaps	xmm0, xmmword ptr [rsp + 224]
	movups	xmmword ptr [rsp + 88], xmm0
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 104], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 120], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 136], xmm0
	mov	qword ptr [rsp + 152], r14
Ltmp2336:
	lea	rdi, [rsp + 256]
	lea	rsi, [rsp + 56]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h216555e91046cbb2E
Ltmp2337:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movaps	xmm2, xmmword ptr [rsp + 288]
	movaps	xmm3, xmmword ptr [rsp + 304]
	movaps	xmm4, xmmword ptr [rsp + 320]
	movaps	xmm5, xmmword ptr [rsp + 336]
	mov	rax, qword ptr [rsp + 352]
	mov	rcx, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 56], rcx
	mov	rcx, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 64], rcx
	mov	rcx, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 72], rcx
	movaps	xmmword ptr [rsp + 448], xmm0
	movdqa	xmmword ptr [rsp + 464], xmm1
	movaps	xmmword ptr [rsp + 496], xmm3
	movaps	xmmword ptr [rsp + 480], xmm2
	movaps	xmmword ptr [rsp + 528], xmm5
	movaps	xmmword ptr [rsp + 512], xmm4
	mov	qword ptr [rsp + 544], rax
	mov	rax, qword ptr [rsp + 72]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 56]
	mov	rcx, qword ptr [rsp + 64]
	mov	qword ptr [rsp + 560], rcx
	mov	qword ptr [rsp + 552], rax
	mov	eax, 1
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jb	LBB163_16
LBB163_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2345:
	call	qword ptr [rax]
Ltmp2346:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB163_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB163_16:
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp2348:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2349:
	lea	rsp, [rbp - 24]
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB163_1:
Ltmp2350:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2351:
	jmp	LBB163_2
LBB163_5:
Ltmp2340:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 256]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2341:
	jmp	LBB163_2
LBB163_7:
Ltmp2338:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2339:
LBB163_2:
	ud2
LBB163_18:
Ltmp2347:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 384]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB163_19
LBB163_8:
Ltmp2342:
Ltmp2343:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2344:
	mov	qword ptr [rsp + 392], rax
	mov	qword ptr [rsp + 400], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 384], rax
	cmp	qword ptr [rbx], 2
	jae	LBB163_13
	jmp	LBB163_16
LBB163_20:
Ltmp2352:
	mov	r14, rax
LBB163_19:
	lea	rdi, [rsp + 256]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end113:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table163:
Lexception113:
	.byte	255
	.byte	155
	.uleb128 Lttbase78-Lttbaseref78
Lttbaseref78:
	.byte	1
	.uleb128 Lcst_end113-Lcst_begin113
Lcst_begin113:
	.uleb128 Ltmp2334-Lfunc_begin113
	.uleb128 Ltmp2337-Ltmp2334
	.uleb128 Ltmp2342-Lfunc_begin113
	.byte	3
	.uleb128 Ltmp2345-Lfunc_begin113
	.uleb128 Ltmp2346-Ltmp2345
	.uleb128 Ltmp2347-Lfunc_begin113
	.byte	0
	.uleb128 Ltmp2346-Lfunc_begin113
	.uleb128 Ltmp2348-Ltmp2346
	.byte	0
	.byte	0
	.uleb128 Ltmp2348-Lfunc_begin113
	.uleb128 Ltmp2351-Ltmp2348
	.uleb128 Ltmp2352-Lfunc_begin113
	.byte	0
	.uleb128 Ltmp2340-Lfunc_begin113
	.uleb128 Ltmp2339-Ltmp2340
	.uleb128 Ltmp2342-Lfunc_begin113
	.byte	3
	.uleb128 Ltmp2339-Lfunc_begin113
	.uleb128 Ltmp2343-Ltmp2339
	.byte	0
	.byte	0
	.uleb128 Ltmp2343-Lfunc_begin113
	.uleb128 Ltmp2344-Ltmp2343
	.uleb128 Ltmp2352-Lfunc_begin113
	.byte	0
	.uleb128 Ltmp2344-Lfunc_begin113
	.uleb128 Lfunc_end113-Ltmp2344
	.byte	0
	.byte	0
Lcst_end113:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase78:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hd9c9e8c61484fe82E:
Lfunc_begin114:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception114
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 192], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 176], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 160], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 96], xmm0
	movups	xmm0, xmmword ptr [rdi + 312]
	movaps	xmmword ptr [rsp + 144], xmm0
	movups	xmm0, xmmword ptr [rdi + 296]
	movaps	xmmword ptr [rsp + 80], xmm0
	movups	xmm0, xmmword ptr [rdi + 344]
	movaps	xmmword ptr [rsp + 128], xmm0
	movups	xmm0, xmmword ptr [rdi + 328]
	movaps	xmmword ptr [rsp + 64], xmm0
	mov	rax, qword ptr [rdi + 376]
	mov	qword ptr [rsp + 272], rax
	mov	rax, qword ptr [rdi + 368]
	mov	qword ptr [rsp + 264], rax
	mov	rax, qword ptr [rdi + 360]
	mov	qword ptr [rsp + 256], rax
	movdqa	xmmword ptr [rsp + 112], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB164_1
	mov	rbx, rdi
	mov	rax, qword ptr [rsp + 272]
	mov	qword ptr [rsp + 248], rax
	mov	rcx, qword ptr [rsp + 256]
	mov	rdx, qword ptr [rsp + 264]
	mov	qword ptr [rsp + 240], rdx
	mov	qword ptr [rsp + 232], rcx
	mov	qword ptr [rsp + 56], rax
	mov	qword ptr [rsp + 48], rdx
	mov	qword ptr [rsp + 40], rcx
Ltmp2353:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2354:
	test	rax, rax
	je	LBB164_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB164_7
	pshufd	xmm0, xmmword ptr [rsp + 112], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 456], r14
	mov	qword ptr [rsp + 464], rax
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 472], xmm0
	movaps	xmm0, xmmword ptr [rsp + 192]
	movups	xmmword ptr [rsp + 488], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 504], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movups	xmmword ptr [rsp + 520], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 536], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movups	xmmword ptr [rsp + 552], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movups	xmmword ptr [rsp + 568], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movups	xmmword ptr [rsp + 584], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movups	xmmword ptr [rsp + 600], xmm0
	mov	rax, qword ptr [rsp + 40]
	mov	rcx, qword ptr [rsp + 48]
	mov	qword ptr [rsp + 616], rax
	mov	qword ptr [rsp + 624], rcx
	mov	rax, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 632], rax
Ltmp2355:
	lea	rdi, [rsp + 640]
	lea	rsi, [rsp + 456]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h9890762a6a4004c5E
Ltmp2356:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movdqa	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	movaps	xmm4, xmmword ptr [rsp + 704]
	movaps	xmm5, xmmword ptr [rsp + 720]
	movaps	xmm6, xmmword ptr [rsp + 736]
	movaps	xmm7, xmmword ptr [rsp + 752]
	movaps	xmmword ptr [rsp + 320], xmm0
	movdqa	xmmword ptr [rsp + 336], xmm1
	movaps	xmmword ptr [rsp + 368], xmm3
	movaps	xmmword ptr [rsp + 352], xmm2
	movaps	xmmword ptr [rsp + 400], xmm5
	movaps	xmmword ptr [rsp + 384], xmm4
	movaps	xmmword ptr [rsp + 432], xmm7
	movaps	xmmword ptr [rsp + 416], xmm6
	mov	eax, 1
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jb	LBB164_16
LBB164_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2364:
	call	qword ptr [rax]
Ltmp2365:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB164_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB164_16:
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp2367:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2368:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB164_1:
Ltmp2369:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2370:
	jmp	LBB164_2
LBB164_5:
Ltmp2359:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 456]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2360:
	jmp	LBB164_2
LBB164_7:
Ltmp2357:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2358:
LBB164_2:
	ud2
LBB164_18:
Ltmp2366:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB164_19
LBB164_8:
Ltmp2361:
Ltmp2362:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2363:
	mov	qword ptr [rsp + 264], rax
	mov	qword ptr [rsp + 272], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jae	LBB164_13
	jmp	LBB164_16
LBB164_20:
Ltmp2371:
	mov	r14, rax
LBB164_19:
	lea	rdi, [rsp + 456]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end114:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table164:
Lexception114:
	.byte	255
	.byte	155
	.uleb128 Lttbase79-Lttbaseref79
Lttbaseref79:
	.byte	1
	.uleb128 Lcst_end114-Lcst_begin114
Lcst_begin114:
	.uleb128 Ltmp2353-Lfunc_begin114
	.uleb128 Ltmp2356-Ltmp2353
	.uleb128 Ltmp2361-Lfunc_begin114
	.byte	3
	.uleb128 Ltmp2364-Lfunc_begin114
	.uleb128 Ltmp2365-Ltmp2364
	.uleb128 Ltmp2366-Lfunc_begin114
	.byte	0
	.uleb128 Ltmp2365-Lfunc_begin114
	.uleb128 Ltmp2367-Ltmp2365
	.byte	0
	.byte	0
	.uleb128 Ltmp2367-Lfunc_begin114
	.uleb128 Ltmp2370-Ltmp2367
	.uleb128 Ltmp2371-Lfunc_begin114
	.byte	0
	.uleb128 Ltmp2359-Lfunc_begin114
	.uleb128 Ltmp2358-Ltmp2359
	.uleb128 Ltmp2361-Lfunc_begin114
	.byte	3
	.uleb128 Ltmp2358-Lfunc_begin114
	.uleb128 Ltmp2362-Ltmp2358
	.byte	0
	.byte	0
	.uleb128 Ltmp2362-Lfunc_begin114
	.uleb128 Ltmp2363-Ltmp2362
	.uleb128 Ltmp2371-Lfunc_begin114
	.byte	0
	.uleb128 Ltmp2363-Lfunc_begin114
	.uleb128 Lfunc_end114-Ltmp2363
	.byte	0
	.byte	0
Lcst_end114:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase79:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hdece5c6b42c6eff4E:
Lfunc_begin115:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception115
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 384
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm3, xmmword ptr [rdi + 128]
	movdqu	xmm2, xmmword ptr [rdi + 144]
	movups	xmm0, xmmword ptr [rdi + 192]
	movdqu	xmm1, xmmword ptr [rdi + 208]
	pxor	xmm4, xmm4
	movdqu	xmmword ptr [rdi + 128], xmm4
	movq	rax, xmm3
	test	rax, rax
	je	LBB165_1
	mov	rbx, rdi
	pshufd	xmm3, xmm3, 78
	movq	rcx, xmm3
	mov	rsi, qword ptr [rax]
	sub	rsi, qword ptr [rcx]
	jb	LBB165_4
	movdqu	xmm3, xmmword ptr [rbx + 160]
	movdqu	xmm4, xmmword ptr [rbx + 176]
	pshufd	xmm5, xmm1, 78
	movq	rax, xmm5
	movq	rdx, xmm2
	pshufd	xmm5, xmm4, 78
	palignr	xmm4, xmm3, 8
	palignr	xmm3, xmm2, 8
	mov	rcx, qword ptr [rdx]
	mov	r8, qword ptr [rdx + 8]
	movq	qword ptr [rsp + 224], xmm5
	movdqu	xmmword ptr [rsp + 208], xmm4
	movdqu	xmmword ptr [rsp + 192], xmm3
	movq	qword ptr [rsp + 248], xmm1
	movups	xmmword ptr [rsp + 232], xmm0
Ltmp2372:
	mov	qword ptr [rsp], rax
	lea	rdi, [rsp + 256]
	lea	r9, [rsp + 192]
	mov	edx, 1
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h134d0549b874d7b0E
Ltmp2373:
	movaps	xmm0, xmmword ptr [rsp + 256]
	movdqa	xmm1, xmmword ptr [rsp + 272]
	movdqa	xmm2, xmmword ptr [rsp + 288]
	movdqa	xmm3, xmmword ptr [rsp + 304]
	movdqa	xmmword ptr [rsp + 176], xmm3
	movdqa	xmmword ptr [rsp + 160], xmm2
	movdqa	xmmword ptr [rsp + 144], xmm1
	movaps	xmmword ptr [rsp + 128], xmm0
	mov	eax, 1
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jb	LBB165_13
LBB165_10:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2379:
	call	qword ptr [rax]
Ltmp2380:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB165_13
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB165_13:
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	mov	rax, qword ptr [rsp + 64]
	mov	rcx, qword ptr [rsp + 72]
	movaps	xmm0, xmmword ptr [rsp + 80]
	movaps	xmm1, xmmword ptr [rsp + 96]
	movaps	xmm2, xmmword ptr [rsp + 112]
	movaps	xmmword ptr [rbx + 48], xmm2
	movaps	xmmword ptr [rbx + 32], xmm1
	movaps	xmmword ptr [rbx + 16], xmm0
	mov	qword ptr [rbx], rax
	mov	qword ptr [rbx + 8], rcx
	mov	al, 1
	xchg	byte ptr [rbx + 224], al
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB165_1:
Ltmp2382:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2383:
	jmp	LBB165_2
LBB165_4:
Ltmp2374:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_7]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2375:
LBB165_2:
	ud2
LBB165_14:
Ltmp2381:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	movaps	xmm0, xmmword ptr [rsp + 176]
	movaps	xmmword ptr [rbx + 112], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movaps	xmmword ptr [rbx + 96], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movaps	xmmword ptr [rbx + 80], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movaps	xmmword ptr [rbx + 64], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movdqa	xmm1, xmmword ptr [rsp + 80]
	movdqa	xmm2, xmmword ptr [rsp + 96]
	movdqa	xmm3, xmmword ptr [rsp + 112]
	movdqa	xmmword ptr [rbx + 48], xmm3
	movdqa	xmmword ptr [rbx + 32], xmm2
	movdqa	xmmword ptr [rbx + 16], xmm1
	movaps	xmmword ptr [rbx], xmm0
LBB165_15:
	lea	rdi, [rsp + 56]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
LBB165_5:
Ltmp2376:
Ltmp2377:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2378:
	mov	qword ptr [rsp + 72], rax
	mov	qword ptr [rsp + 80], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 64], rax
	cmp	qword ptr [rbx], 2
	jae	LBB165_10
	jmp	LBB165_13
LBB165_16:
Ltmp2384:
	mov	r14, rax
	jmp	LBB165_15
Lfunc_end115:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table165:
Lexception115:
	.byte	255
	.byte	155
	.uleb128 Lttbase80-Lttbaseref80
Lttbaseref80:
	.byte	1
	.uleb128 Lcst_end115-Lcst_begin115
Lcst_begin115:
	.uleb128 Ltmp2372-Lfunc_begin115
	.uleb128 Ltmp2373-Ltmp2372
	.uleb128 Ltmp2376-Lfunc_begin115
	.byte	3
	.uleb128 Ltmp2379-Lfunc_begin115
	.uleb128 Ltmp2380-Ltmp2379
	.uleb128 Ltmp2381-Lfunc_begin115
	.byte	0
	.uleb128 Ltmp2382-Lfunc_begin115
	.uleb128 Ltmp2383-Ltmp2382
	.uleb128 Ltmp2384-Lfunc_begin115
	.byte	0
	.uleb128 Ltmp2374-Lfunc_begin115
	.uleb128 Ltmp2375-Ltmp2374
	.uleb128 Ltmp2376-Lfunc_begin115
	.byte	3
	.uleb128 Ltmp2375-Lfunc_begin115
	.uleb128 Ltmp2377-Ltmp2375
	.byte	0
	.byte	0
	.uleb128 Ltmp2377-Lfunc_begin115
	.uleb128 Ltmp2378-Ltmp2377
	.uleb128 Ltmp2384-Lfunc_begin115
	.byte	0
Lcst_end115:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase80:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17he496b4ca6e2ccdffE:
Lfunc_begin116:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception116
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB166_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp2385:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2386:
	test	rax, rax
	je	LBB166_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB166_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp2387:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h0e4d76409498170dE
Ltmp2388:
LBB166_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB166_9
LBB166_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp2396:
	call	qword ptr [rax]
Ltmp2397:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB166_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB166_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp2399:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2400:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB166_11:
Ltmp2401:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2402:
	jmp	LBB166_14
LBB166_12:
Ltmp2391:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2392:
	jmp	LBB166_14
LBB166_13:
Ltmp2389:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2390:
LBB166_14:
	ud2
LBB166_15:
Ltmp2398:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB166_21
LBB166_16:
Ltmp2393:
Ltmp2394:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2395:
	test	rax, rax
	je	LBB166_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB166_6
	jmp	LBB166_9
LBB166_20:
Ltmp2403:
	mov	r14, rax
LBB166_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end116:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table166:
Lexception116:
	.byte	255
	.byte	155
	.uleb128 Lttbase81-Lttbaseref81
Lttbaseref81:
	.byte	1
	.uleb128 Lcst_end116-Lcst_begin116
Lcst_begin116:
	.uleb128 Ltmp2385-Lfunc_begin116
	.uleb128 Ltmp2388-Ltmp2385
	.uleb128 Ltmp2393-Lfunc_begin116
	.byte	3
	.uleb128 Ltmp2396-Lfunc_begin116
	.uleb128 Ltmp2397-Ltmp2396
	.uleb128 Ltmp2398-Lfunc_begin116
	.byte	0
	.uleb128 Ltmp2399-Lfunc_begin116
	.uleb128 Ltmp2402-Ltmp2399
	.uleb128 Ltmp2403-Lfunc_begin116
	.byte	0
	.uleb128 Ltmp2391-Lfunc_begin116
	.uleb128 Ltmp2390-Ltmp2391
	.uleb128 Ltmp2393-Lfunc_begin116
	.byte	3
	.uleb128 Ltmp2394-Lfunc_begin116
	.uleb128 Ltmp2395-Ltmp2394
	.uleb128 Ltmp2403-Lfunc_begin116
	.byte	0
	.uleb128 Ltmp2395-Lfunc_begin116
	.uleb128 Lfunc_end116-Ltmp2395
	.byte	0
	.byte	0
Lcst_end116:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase81:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hf08f2de095c3873eE:
Lfunc_begin117:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception117
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	rbx
	sub	rsp, 232
	.cfi_offset rbx, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	movdqu	xmm1, xmmword ptr [rdi + 8]
	movups	xmm0, xmmword ptr [rdi + 24]
	movaps	xmmword ptr [rbp - 224], xmm0
	movups	xmm0, xmmword ptr [rdi + 40]
	movaps	xmmword ptr [rbp - 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 56]
	movaps	xmmword ptr [rbp - 192], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 8], xmm0
	mov	rax, qword ptr [rdi + 88]
	mov	qword ptr [rbp - 144], rax
	mov	rax, qword ptr [rdi + 80]
	mov	qword ptr [rbp - 152], rax
	mov	rax, qword ptr [rdi + 72]
	mov	qword ptr [rbp - 160], rax
	movdqa	xmmword ptr [rbp - 176], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB167_11
	mov	rbx, rdi
	mov	rax, qword ptr [rbp - 144]
	mov	qword ptr [rbp - 232], rax
	mov	rcx, qword ptr [rbp - 160]
	mov	rdx, qword ptr [rbp - 152]
	mov	qword ptr [rbp - 240], rdx
	mov	qword ptr [rbp - 248], rcx
	mov	qword ptr [rbp - 56], rax
	mov	qword ptr [rbp - 64], rdx
	mov	qword ptr [rbp - 72], rcx
Ltmp2404:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2405:
	test	rax, rax
	je	LBB167_12
	mov	rsi, qword ptr [rax]
	test	rsi, rsi
	je	LBB167_13
	pshufd	xmm0, xmmword ptr [rbp - 176], 78
	movq	rax, xmm0
	mov	qword ptr [rbp - 160], r14
	mov	qword ptr [rbp - 152], rax
	movaps	xmm0, xmmword ptr [rbp - 224]
	movups	xmmword ptr [rbp - 144], xmm0
	movaps	xmm0, xmmword ptr [rbp - 208]
	movups	xmmword ptr [rbp - 128], xmm0
	movaps	xmm0, xmmword ptr [rbp - 192]
	movups	xmmword ptr [rbp - 112], xmm0
	mov	rax, qword ptr [rbp - 72]
	mov	rcx, qword ptr [rbp - 64]
	mov	qword ptr [rbp - 96], rax
	mov	qword ptr [rbp - 88], rcx
	mov	rax, qword ptr [rbp - 56]
	mov	qword ptr [rbp - 80], rax
Ltmp2406:
	lea	rdi, [rbp - 160]
	mov	edx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h3290a287d572be01E
Ltmp2407:
LBB167_5:
	mov	eax, 1
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jb	LBB167_9
LBB167_6:
	mov	rdi, qword ptr [rbx + 104]
	mov	rax, qword ptr [rbx + 112]
Ltmp2415:
	call	qword ptr [rax]
Ltmp2416:
	mov	rax, qword ptr [rbx + 112]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB167_9
	mov	rdi, qword ptr [rbx + 104]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB167_9:
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	mov	rdi, qword ptr [rbx]
Ltmp2418:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2419:
	add	rsp, 232
	pop	rbx
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB167_11:
Ltmp2420:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2421:
	jmp	LBB167_14
LBB167_12:
Ltmp2410:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rbp - 160]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2411:
	jmp	LBB167_14
LBB167_13:
Ltmp2408:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2409:
LBB167_14:
	ud2
LBB167_15:
Ltmp2417:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 104]
	mov	rsi, qword ptr [rbx + 112]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	mov	rax, qword ptr [rbp - 32]
	mov	qword ptr [r15 + 16], rax
	mov	rax, qword ptr [rbp - 48]
	mov	rcx, qword ptr [rbp - 40]
	mov	qword ptr [r15 + 8], rcx
	mov	qword ptr [r15], rax
	jmp	LBB167_21
LBB167_16:
Ltmp2412:
Ltmp2413:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2414:
	test	rax, rax
	je	LBB167_5
	mov	qword ptr [rbp - 40], rax
	mov	qword ptr [rbp - 32], rdx
	mov	eax, 2
	mov	qword ptr [rbp - 48], rax
	lea	r15, [rbx + 96]
	cmp	qword ptr [rbx + 96], 2
	jae	LBB167_6
	jmp	LBB167_9
LBB167_20:
Ltmp2422:
	mov	r14, rax
LBB167_21:
	lea	rdi, [rbp - 160]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end117:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table167:
Lexception117:
	.byte	255
	.byte	155
	.uleb128 Lttbase82-Lttbaseref82
Lttbaseref82:
	.byte	1
	.uleb128 Lcst_end117-Lcst_begin117
Lcst_begin117:
	.uleb128 Ltmp2404-Lfunc_begin117
	.uleb128 Ltmp2407-Ltmp2404
	.uleb128 Ltmp2412-Lfunc_begin117
	.byte	3
	.uleb128 Ltmp2415-Lfunc_begin117
	.uleb128 Ltmp2416-Ltmp2415
	.uleb128 Ltmp2417-Lfunc_begin117
	.byte	0
	.uleb128 Ltmp2418-Lfunc_begin117
	.uleb128 Ltmp2421-Ltmp2418
	.uleb128 Ltmp2422-Lfunc_begin117
	.byte	0
	.uleb128 Ltmp2410-Lfunc_begin117
	.uleb128 Ltmp2409-Ltmp2410
	.uleb128 Ltmp2412-Lfunc_begin117
	.byte	3
	.uleb128 Ltmp2413-Lfunc_begin117
	.uleb128 Ltmp2414-Ltmp2413
	.uleb128 Ltmp2422-Lfunc_begin117
	.byte	0
	.uleb128 Ltmp2414-Lfunc_begin117
	.uleb128 Lfunc_end117-Ltmp2414
	.byte	0
	.byte	0
Lcst_end117:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase82:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN83_$LT$rayon_core..job..StackJob$LT$L$C$F$C$R$GT$$u20$as$u20$rayon_core..job..Job$GT$7execute17hfbc9ad0e01ed6d55E:
Lfunc_begin118:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception118
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	and	rsp, -64
	sub	rsp, 832
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	movdqu	xmm1, xmmword ptr [rdi + 200]
	movups	xmm0, xmmword ptr [rdi + 216]
	movaps	xmmword ptr [rsp + 208], xmm0
	movups	xmm0, xmmword ptr [rdi + 232]
	movaps	xmmword ptr [rsp + 192], xmm0
	movups	xmm0, xmmword ptr [rdi + 248]
	movaps	xmmword ptr [rsp + 176], xmm0
	xorps	xmm0, xmm0
	movups	xmmword ptr [rdi + 200], xmm0
	movups	xmm0, xmmword ptr [rdi + 280]
	movaps	xmmword ptr [rsp + 160], xmm0
	movups	xmm0, xmmword ptr [rdi + 264]
	movaps	xmmword ptr [rsp + 96], xmm0
	movups	xmm0, xmmword ptr [rdi + 312]
	movaps	xmmword ptr [rsp + 144], xmm0
	movups	xmm0, xmmword ptr [rdi + 296]
	movaps	xmmword ptr [rsp + 80], xmm0
	movups	xmm0, xmmword ptr [rdi + 344]
	movaps	xmmword ptr [rsp + 128], xmm0
	movups	xmm0, xmmword ptr [rdi + 328]
	movaps	xmmword ptr [rsp + 64], xmm0
	mov	rax, qword ptr [rdi + 376]
	mov	qword ptr [rsp + 272], rax
	mov	rax, qword ptr [rdi + 368]
	mov	qword ptr [rsp + 264], rax
	mov	rax, qword ptr [rdi + 360]
	mov	qword ptr [rsp + 256], rax
	movdqa	xmmword ptr [rsp + 112], xmm1
	movq	r14, xmm1
	test	r14, r14
	je	LBB168_1
	mov	rbx, rdi
	mov	rax, qword ptr [rsp + 272]
	mov	qword ptr [rsp + 248], rax
	mov	rcx, qword ptr [rsp + 256]
	mov	rdx, qword ptr [rsp + 264]
	mov	qword ptr [rsp + 240], rdx
	mov	qword ptr [rsp + 232], rcx
	mov	qword ptr [rsp + 56], rax
	mov	qword ptr [rsp + 48], rdx
	mov	qword ptr [rsp + 40], rcx
Ltmp2423:
	call	__ZN10rayon_core8registry19WORKER_THREAD_STATE7__getit17h230ff8824e5456e0E
Ltmp2424:
	test	rax, rax
	je	LBB168_5
	mov	rdx, qword ptr [rax]
	test	rdx, rdx
	je	LBB168_7
	pshufd	xmm0, xmmword ptr [rsp + 112], 78
	movq	rax, xmm0
	mov	qword ptr [rsp + 456], r14
	mov	qword ptr [rsp + 464], rax
	movaps	xmm0, xmmword ptr [rsp + 208]
	movups	xmmword ptr [rsp + 472], xmm0
	movaps	xmm0, xmmword ptr [rsp + 192]
	movups	xmmword ptr [rsp + 488], xmm0
	movaps	xmm0, xmmword ptr [rsp + 176]
	movups	xmmword ptr [rsp + 504], xmm0
	movaps	xmm0, xmmword ptr [rsp + 96]
	movups	xmmword ptr [rsp + 520], xmm0
	movaps	xmm0, xmmword ptr [rsp + 160]
	movups	xmmword ptr [rsp + 536], xmm0
	movaps	xmm0, xmmword ptr [rsp + 80]
	movups	xmmword ptr [rsp + 552], xmm0
	movaps	xmm0, xmmword ptr [rsp + 144]
	movups	xmmword ptr [rsp + 568], xmm0
	movaps	xmm0, xmmword ptr [rsp + 64]
	movups	xmmword ptr [rsp + 584], xmm0
	movaps	xmm0, xmmword ptr [rsp + 128]
	movups	xmmword ptr [rsp + 600], xmm0
	mov	rax, qword ptr [rsp + 40]
	mov	rcx, qword ptr [rsp + 48]
	mov	qword ptr [rsp + 616], rax
	mov	qword ptr [rsp + 624], rcx
	mov	rax, qword ptr [rsp + 56]
	mov	qword ptr [rsp + 632], rax
Ltmp2425:
	lea	rdi, [rsp + 640]
	lea	rsi, [rsp + 456]
	mov	ecx, 1
	call	__ZN10rayon_core4join12join_context28_$u7b$$u7b$closure$u7d$$u7d$17h4f66ac2b113b268bE
Ltmp2426:
	movaps	xmm0, xmmword ptr [rsp + 640]
	movdqa	xmm1, xmmword ptr [rsp + 656]
	movaps	xmm2, xmmword ptr [rsp + 672]
	movaps	xmm3, xmmword ptr [rsp + 688]
	movaps	xmm4, xmmword ptr [rsp + 704]
	movaps	xmm5, xmmword ptr [rsp + 720]
	movaps	xmm6, xmmword ptr [rsp + 736]
	movaps	xmm7, xmmword ptr [rsp + 752]
	movaps	xmmword ptr [rsp + 320], xmm0
	movdqa	xmmword ptr [rsp + 336], xmm1
	movaps	xmmword ptr [rsp + 368], xmm3
	movaps	xmmword ptr [rsp + 352], xmm2
	movaps	xmmword ptr [rsp + 400], xmm5
	movaps	xmmword ptr [rsp + 384], xmm4
	movaps	xmmword ptr [rsp + 432], xmm7
	movaps	xmmword ptr [rsp + 416], xmm6
	mov	eax, 1
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jb	LBB168_16
LBB168_13:
	mov	rdi, qword ptr [rbx + 8]
	mov	rax, qword ptr [rbx + 16]
Ltmp2434:
	call	qword ptr [rax]
Ltmp2435:
	mov	rax, qword ptr [rbx + 16]
	mov	rsi, qword ptr [rax + 8]
	test	rsi, rsi
	je	LBB168_16
	mov	rdi, qword ptr [rbx + 8]
	mov	rdx, qword ptr [rax + 16]
	call	___rust_dealloc
LBB168_16:
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	mov	rdi, qword ptr [rbx + 192]
Ltmp2437:
	call	__ZN50_$LT$$RF$L$u20$as$u20$rayon_core..latch..Latch$GT$3set17h591af3e7f016fabaE
Ltmp2438:
	lea	rsp, [rbp - 16]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB168_1:
Ltmp2439:
	lea	rdi, [rip + l___unnamed_5]
	lea	rdx, [rip + l___unnamed_26]
	mov	esi, 43
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp2440:
	jmp	LBB168_2
LBB168_5:
Ltmp2429:
	lea	rdi, [rip + l___unnamed_8]
	lea	rcx, [rip + l___unnamed_9]
	lea	r8, [rip + l___unnamed_10]
	lea	rdx, [rsp + 456]
	mov	esi, 70
	call	__ZN4core6result13unwrap_failed17hb5a510096a5fc85fE
Ltmp2430:
	jmp	LBB168_2
LBB168_7:
Ltmp2427:
	lea	rdi, [rip + l___unnamed_27]
	lea	rdx, [rip + l___unnamed_3]
	mov	esi, 54
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2428:
LBB168_2:
	ud2
LBB168_18:
Ltmp2436:
	mov	r14, rax
	mov	rdi, qword ptr [rbx + 8]
	mov	rsi, qword ptr [rbx + 16]
	call	__ZN5alloc5alloc8box_free17h601baa71c821b98cE
	lea	rsi, [rsp + 256]
	mov	edx, 192
	mov	rdi, rbx
	call	_memcpy
	jmp	LBB168_19
LBB168_8:
Ltmp2431:
Ltmp2432:
	mov	rdi, rax
	call	__ZN3std9panicking3try7cleanup17hd895f7beef0a7dadE
Ltmp2433:
	mov	qword ptr [rsp + 264], rax
	mov	qword ptr [rsp + 272], rdx
	mov	eax, 2
	mov	qword ptr [rsp + 256], rax
	cmp	qword ptr [rbx], 2
	jae	LBB168_13
	jmp	LBB168_16
LBB168_20:
Ltmp2441:
	mov	r14, rax
LBB168_19:
	lea	rdi, [rsp + 456]
	call	__ZN4core3ptr13drop_in_place17hb7818da7f8c4942aE
	mov	rdi, r14
	call	__Unwind_Resume
	ud2
Lfunc_end118:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table168:
Lexception118:
	.byte	255
	.byte	155
	.uleb128 Lttbase83-Lttbaseref83
Lttbaseref83:
	.byte	1
	.uleb128 Lcst_end118-Lcst_begin118
Lcst_begin118:
	.uleb128 Ltmp2423-Lfunc_begin118
	.uleb128 Ltmp2426-Ltmp2423
	.uleb128 Ltmp2431-Lfunc_begin118
	.byte	3
	.uleb128 Ltmp2434-Lfunc_begin118
	.uleb128 Ltmp2435-Ltmp2434
	.uleb128 Ltmp2436-Lfunc_begin118
	.byte	0
	.uleb128 Ltmp2435-Lfunc_begin118
	.uleb128 Ltmp2437-Ltmp2435
	.byte	0
	.byte	0
	.uleb128 Ltmp2437-Lfunc_begin118
	.uleb128 Ltmp2440-Ltmp2437
	.uleb128 Ltmp2441-Lfunc_begin118
	.byte	0
	.uleb128 Ltmp2429-Lfunc_begin118
	.uleb128 Ltmp2428-Ltmp2429
	.uleb128 Ltmp2431-Lfunc_begin118
	.byte	3
	.uleb128 Ltmp2428-Lfunc_begin118
	.uleb128 Ltmp2432-Ltmp2428
	.byte	0
	.byte	0
	.uleb128 Ltmp2432-Lfunc_begin118
	.uleb128 Ltmp2433-Ltmp2432
	.uleb128 Ltmp2441-Lfunc_begin118
	.byte	0
	.uleb128 Ltmp2433-Lfunc_begin118
	.uleb128 Lfunc_end118-Ltmp2433
	.byte	0
	.byte	0
Lcst_end118:
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.p2align	2
	.long	0
Lttbase83:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h63401d62711c8837E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	cmp	qword ptr [rdi], 0
	je	LBB169_2
	mov	rax, rdi
	lea	rdx, [rip + l___unnamed_28]
	pop	rbp
	ret
LBB169_2:
	call	__ZN3std7process5abort17h4dccaf05298ce780E
	.cfi_endproc

	.p2align	4, 0x90
__ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h1b070a2551eb2c95E:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r14
	push	rbx
	.cfi_offset rbx, -32
	.cfi_offset r14, -24
	mov	rbx, qword ptr [rdi]
	mov	r14, qword ptr [rdi + 8]
	mov	qword ptr [rdi], 0
	test	rbx, rbx
	je	LBB170_3
	mov	edi, 16
	mov	esi, 8
	call	___rust_alloc
	test	rax, rax
	je	LBB170_4
	mov	qword ptr [rax], rbx
	mov	qword ptr [rax + 8], r14
	lea	rdx, [rip + l___unnamed_28]
	pop	rbx
	pop	r14
	pop	rbp
	ret
LBB170_3:
	call	__ZN3std7process5abort17h4dccaf05298ce780E
LBB170_4:
	mov	edi, 16
	mov	esi, 8
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
	.cfi_endproc

	.section	__TEXT,__literal4,4byte_literals
	.p2align	2
LCPI171_0:
	.long	3212836864
LCPI171_3:
	.long	1092616192
LCPI171_6:
	.long	1077936128
LCPI171_7:
	.long	3225419776
	.section	__TEXT,__literal8,8byte_literals
	.p2align	3
LCPI171_1:
	.quad	-4616189618054758400
LCPI171_5:
	.quad	4621819117588971520
LCPI171_10:
	.quad	4613937818241073152
	.section	__TEXT,__literal16,16byte_literals
	.p2align	4
LCPI171_2:
	.long	1092616192
	.long	1092616192
	.long	1092616192
	.long	1092616192
LCPI171_4:
	.quad	4621819117588971520
	.quad	4621819117588971520
LCPI171_8:
	.long	1077936128
	.long	1077936128
	.long	1077936128
	.long	1077936128
LCPI171_9:
	.quad	4613937818241073152
	.quad	4613937818241073152
	.section	__TEXT,__text,regular,pure_instructions
	.p2align	4, 0x90
__ZN13numerical_lib4main17hc672f9d16e968996E:
Lfunc_begin119:
	.cfi_startproc
	.cfi_personality 155, _rust_eh_personality
	.cfi_lsda 16, Lexception119
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	and	rsp, -64
	mov	eax, 8576
	call	___rust_probestack
	sub	rsp, rax
	.cfi_offset rbx, -56
	.cfi_offset r12, -48
	.cfi_offset r13, -40
	.cfi_offset r14, -32
	.cfi_offset r15, -24
	lea	rax, [rip + l___unnamed_29]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
	call	__ZN4rand10thread_rng17h0e191621d1d50c2aE
	mov	qword ptr [rsp + 1344], rax
	mov	qword ptr [rsp + 520], 4
	mov	qword ptr [rsp + 528], 0
	mov	qword ptr [rsp + 536], 0
	mov	qword ptr [rsp + 464], 4
	mov	qword ptr [rsp + 472], 0
	mov	qword ptr [rsp + 480], 0
	mov	qword ptr [rsp + 440], 8
	mov	qword ptr [rsp + 448], 0
	mov	qword ptr [rsp + 456], 0
	mov	qword ptr [rsp + 552], 8
	mov	qword ptr [rsp + 560], 0
	mov	qword ptr [rsp + 568], 0
	mov	qword ptr [rsp + 864], 1
	mov	qword ptr [rsp + 872], 0
	mov	qword ptr [rsp + 880], 0
	mov	qword ptr [rsp + 888], 1
	mov	qword ptr [rsp + 896], 0
	mov	qword ptr [rsp + 904], 0
	mov	qword ptr [rsp + 912], 2
	mov	qword ptr [rsp + 920], 0
	mov	qword ptr [rsp + 928], 0
	mov	qword ptr [rsp + 936], 2
	mov	qword ptr [rsp + 944], 0
	mov	qword ptr [rsp + 952], 0
	mov	qword ptr [rsp + 600], 4
	mov	qword ptr [rsp + 608], 0
	mov	qword ptr [rsp + 616], 0
	mov	qword ptr [rsp + 744], 4
	mov	qword ptr [rsp + 752], 0
	mov	qword ptr [rsp + 760], 0
	mov	qword ptr [rsp + 624], 8
	mov	qword ptr [rsp + 632], 0
	mov	qword ptr [rsp + 640], 0
	mov	qword ptr [rsp + 768], 8
	mov	qword ptr [rsp + 776], 0
	mov	qword ptr [rsp + 784], 0
	mov	qword ptr [rsp + 960], 1
	mov	qword ptr [rsp + 968], 0
	mov	qword ptr [rsp + 976], 0
	mov	qword ptr [rsp + 984], 1
	mov	qword ptr [rsp + 992], 0
	mov	qword ptr [rsp + 1000], 0
	mov	qword ptr [rsp + 1008], 2
	mov	qword ptr [rsp + 1016], 0
	mov	qword ptr [rsp + 1024], 0
	mov	qword ptr [rsp + 1032], 2
	mov	qword ptr [rsp + 1040], 0
	mov	qword ptr [rsp + 1048], 0
	mov	qword ptr [rsp + 648], 4
	mov	qword ptr [rsp + 656], 0
	mov	qword ptr [rsp + 664], 0
	mov	qword ptr [rsp + 792], 4
	mov	qword ptr [rsp + 800], 0
	mov	qword ptr [rsp + 808], 0
	mov	qword ptr [rsp + 672], 8
	mov	qword ptr [rsp + 680], 0
	mov	qword ptr [rsp + 688], 0
	mov	qword ptr [rsp + 816], 8
	mov	qword ptr [rsp + 824], 0
	mov	qword ptr [rsp + 832], 0
	mov	qword ptr [rsp + 696], 8
	mov	qword ptr [rsp + 704], 0
	mov	qword ptr [rsp + 712], 0
	mov	qword ptr [rsp + 840], 8
	mov	qword ptr [rsp + 848], 0
	mov	qword ptr [rsp + 856], 0
	mov	rax, qword ptr [rsp + 480]
	mov	qword ptr [rsp + 1192], rax
	mov	rax, qword ptr [rsp + 456]
	mov	qword ptr [rsp + 1136], rax
	mov	rax, qword ptr [rsp + 568]
	mov	qword ptr [rsp + 1096], rax
	mov	rax, qword ptr [rsp + 880]
	mov	qword ptr [rsp + 1120], rax
	mov	rax, qword ptr [rsp + 904]
	mov	qword ptr [rsp + 1200], rax
	mov	rax, qword ptr [rsp + 928]
	mov	qword ptr [rsp + 1056], rax
	mov	rax, qword ptr [rsp + 952]
	mov	qword ptr [rsp + 1104], rax
	mov	rax, qword ptr [rsp + 616]
	mov	qword ptr [rsp + 544], rax
	mov	rax, qword ptr [rsp + 760]
	mov	qword ptr [rsp + 512], rax
	mov	rax, qword ptr [rsp + 640]
	mov	qword ptr [rsp + 1072], rax
	mov	rax, qword ptr [rsp + 784]
	mov	qword ptr [rsp + 496], rax
	mov	rax, qword ptr [rsp + 976]
	mov	qword ptr [rsp + 424], rax
	mov	rax, qword ptr [rsp + 1000]
	mov	qword ptr [rsp + 408], rax
	mov	rax, qword ptr [rsp + 1024]
	mov	qword ptr [rsp + 400], rax
	mov	rax, qword ptr [rsp + 1048]
	mov	qword ptr [rsp + 376], rax
	mov	rax, qword ptr [rsp + 664]
	mov	qword ptr [rsp + 360], rax
	mov	rax, qword ptr [rsp + 808]
	mov	qword ptr [rsp + 344], rax
	xor	eax, eax
	mov	qword ptr [rsp + 304], rax
	mov	eax, 100000
	mov	qword ptr [rsp + 1600], rax
	mov	eax, 0
	mov	qword ptr [rsp + 320], rax
	mov	eax, 0
	mov	qword ptr [rsp + 240], rax
	mov	eax, 0
	mov	qword ptr [rsp + 312], rax
	jmp	LBB171_3
	.p2align	4, 0x90
LBB171_1:
	mov	rax, qword ptr [rsp + 840]
	lea	rdi, [r12 + 1]
LBB171_2:
	mov	qword ptr [rsp + 1288], rdi
	mov	rcx, qword ptr [rsp + 1616]
	mov	qword ptr [rax + 8*r12], rcx
	mov	qword ptr [rsp + 304], rdi
	mov	qword ptr [rsp + 320], r9
	mov	qword ptr [rsp + 240], rbx
	mov	qword ptr [rsp + 312], r15
	mov	qword ptr [rsp + 344], r8
	mov	qword ptr [rsp + 360], r14
	mov	qword ptr [rsp + 376], r10
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 400], rax
	mov	qword ptr [rsp + 1128], r14
	mov	r13, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 408], r13
	mov	r12, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 424], r12
	mov	r15, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 496], r15
	mov	r11, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 1072], r11
	mov	r10, qword ptr [rsp + 488]
	mov	rax, r10
	mov	qword ptr [rsp + 512], r10
	mov	r9, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 544], r9
	mov	r14, r8
	mov	r8, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 1104], r8
	mov	rbx, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 1056], rbx
	mov	rdi, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 1200], rdi
	mov	rsi, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 1120], rsi
	mov	rdx, qword ptr [rsp + 1264]
	mov	qword ptr [rsp + 1096], rdx
	mov	rcx, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 1136], rcx
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 1192], rax
	dec	qword ptr [rsp + 1600]
	je	LBB171_409
LBB171_3:
Ltmp2442:
	lea	r12, [rsp + 1344]
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
Ltmp2443:
	mov	r15d, eax
Ltmp2444:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
Ltmp2445:
	mov	r14d, eax
Ltmp2446:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u6417h9d0a14ee39a8aa62E
	mov	qword ptr [rsp + 720], rax
Ltmp2447:
Ltmp2448:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u6417h9d0a14ee39a8aa62E
	mov	qword ptr [rsp + 1128], rax
Ltmp2449:
Ltmp2450:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
	mov	dword ptr [rsp + 736], eax
Ltmp2451:
Ltmp2452:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
	mov	dword ptr [rsp + 1264], eax
Ltmp2453:
Ltmp2454:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
Ltmp2455:
	mov	r13d, eax
Ltmp2456:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
	mov	dword ptr [rsp + 432], eax
Ltmp2457:
Ltmp2458:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
	mov	dword ptr [rsp + 488], eax
Ltmp2459:
Ltmp2460:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
	mov	dword ptr [rsp + 504], eax
Ltmp2461:
Ltmp2462:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u6417h9d0a14ee39a8aa62E
	mov	qword ptr [rsp + 576], rax
Ltmp2463:
Ltmp2464:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u6417h9d0a14ee39a8aa62E
	mov	qword ptr [rsp + 584], rax
Ltmp2465:
Ltmp2466:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
	mov	dword ptr [rsp + 592], eax
Ltmp2467:
Ltmp2468:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
	mov	dword ptr [rsp + 1256], eax
Ltmp2469:
Ltmp2470:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
	mov	dword ptr [rsp + 1272], eax
Ltmp2471:
Ltmp2472:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
	mov	dword ptr [rsp + 1288], eax
Ltmp2473:
Ltmp2474:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
	mov	dword ptr [rsp + 1280], eax
Ltmp2475:
Ltmp2476:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217he0ebfff433fe1810E
	mov	dword ptr [rsp + 1596], eax
Ltmp2477:
Ltmp2478:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u6417h9d0a14ee39a8aa62E
	mov	qword ptr [rsp + 1632], rax
Ltmp2479:
Ltmp2480:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u6417h9d0a14ee39a8aa62E
	mov	qword ptr [rsp + 1624], rax
Ltmp2481:
Ltmp2482:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u6417h9d0a14ee39a8aa62E
Ltmp2483:
	mov	rbx, rax
Ltmp2484:
	mov	rdi, r12
	call	__ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u6417h9d0a14ee39a8aa62E
Ltmp2485:
	mov	dword ptr [rsp + 392], r13d
	mov	qword ptr [rsp + 1608], rbx
	mov	qword ptr [rsp + 1616], rax
	mov	rcx, qword ptr [rsp + 536]
	cmp	rcx, qword ptr [rsp + 528]
	mov	r13, qword ptr [rsp + 1200]
	jne	LBB171_34
	mov	rax, rcx
	inc	rax
	je	LBB171_1798
	lea	rdx, [rcx + rcx]
	cmp	rdx, rax
	cmova	rax, rdx
	xor	esi, esi
	mov	edx, 4
	mul	rdx
	mov	r12, rax
	seto	bl
	setno	dl
	mov	rax, rcx
	test	rcx, rcx
	je	LBB171_29
	mov	rax, qword ptr [rsp + 520]
LBB171_29:
	test	bl, bl
	jne	LBB171_1798
	test	rax, rax
	je	LBB171_35
	lea	rsi, [4*rcx]
	cmp	rsi, r12
	je	LBB171_40
	test	rsi, rsi
	je	LBB171_37
	mov	edx, 4
	mov	rdi, rax
	mov	rcx, r12
	call	___rust_realloc
	test	rax, rax
	mov	rdi, qword ptr [rsp + 1136]
	mov	rdx, qword ptr [rsp + 1192]
	jne	LBB171_41
	jmp	LBB171_1848
	.p2align	4, 0x90
LBB171_34:
	mov	rax, qword ptr [rsp + 520]
	mov	r12, qword ptr [rsp + 320]
	mov	rdi, qword ptr [rsp + 1136]
	mov	rdx, qword ptr [rsp + 1192]
	jmp	LBB171_43
LBB171_35:
	mov	sil, dl
	shl	rsi, 2
	test	r12, r12
	jne	LBB171_39
	mov	rax, rsi
	test	rax, rax
	mov	rdi, qword ptr [rsp + 1136]
	mov	rdx, qword ptr [rsp + 1192]
	jne	LBB171_41
	jmp	LBB171_1848
LBB171_37:
	test	r12, r12
	je	LBB171_391
	mov	esi, 4
LBB171_39:
	mov	rdi, r12
	call	___rust_alloc
LBB171_40:
	test	rax, rax
	mov	rdi, qword ptr [rsp + 1136]
	mov	rdx, qword ptr [rsp + 1192]
	je	LBB171_1848
LBB171_41:
	mov	rcx, qword ptr [rsp + 536]
LBB171_42:
	mov	qword ptr [rsp + 520], rax
	shr	r12, 2
	mov	qword ptr [rsp + 528], r12
	mov	r12, qword ptr [rsp + 320]
LBB171_43:
	and	r15d, 8388607
	or	r15d, 1065353216
	movd	xmm0, r15d
	addss	xmm0, dword ptr [rip + LCPI171_0]
	movss	dword ptr [rax + 4*rcx], xmm0
	inc	qword ptr [rsp + 536]
	cmp	rdx, qword ptr [rsp + 472]
	jne	LBB171_52
	mov	rax, rdx
	inc	rax
	mov	qword ptr [rsp + 336], rax
	je	LBB171_1799
	lea	rax, [rdx + rdx]
	mov	rcx, qword ptr [rsp + 336]
	cmp	rax, rcx
	cmovbe	rax, rcx
	xor	esi, esi
	mov	ecx, 4
	mov	rdi, rdx
	mul	rcx
	mov	rbx, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_47
	mov	rax, qword ptr [rsp + 464]
LBB171_47:
	test	dl, dl
	mov	rdx, qword ptr [rsp + 1192]
	jne	LBB171_1799
	test	rax, rax
	mov	rdi, qword ptr [rsp + 1136]
	je	LBB171_53
	lea	rsi, [4*rdx]
	cmp	rsi, rbx
	je	LBB171_59
	test	rsi, rsi
	je	LBB171_55
	mov	edx, 4
	mov	rdi, rax
	mov	rcx, rbx
	call	___rust_realloc
	jmp	LBB171_58
	.p2align	4, 0x90
LBB171_52:
	mov	rax, qword ptr [rsp + 464]
	lea	rcx, [rdx + 1]
	mov	qword ptr [rsp + 336], rcx
	jmp	LBB171_61
LBB171_53:
	mov	sil, cl
	shl	rsi, 2
	test	rbx, rbx
	jne	LBB171_57
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_60
	jmp	LBB171_1850
LBB171_55:
	test	rbx, rbx
	je	LBB171_392
	mov	esi, 4
LBB171_57:
	mov	rdi, rbx
	call	___rust_alloc
LBB171_58:
	mov	rdx, qword ptr [rsp + 1192]
	mov	rdi, qword ptr [rsp + 1136]
LBB171_59:
	test	rax, rax
	je	LBB171_1850
LBB171_60:
	mov	qword ptr [rsp + 464], rax
	shr	rbx, 2
	mov	qword ptr [rsp + 472], rbx
LBB171_61:
	mov	r9, qword ptr [rsp + 240]
	and	r14d, 8388607
	or	r14d, 1065353216
	movd	xmm0, r14d
	addss	xmm0, dword ptr [rip + LCPI171_0]
	movss	dword ptr [rax + 4*rdx], xmm0
	cmp	rdi, qword ptr [rsp + 448]
	jne	LBB171_70
	mov	rax, rdi
	inc	rax
	mov	qword ptr [rsp + 352], rax
	mov	r14, qword ptr [rsp + 304]
	je	LBB171_1800
	lea	rax, [rdi + rdi]
	mov	rcx, qword ptr [rsp + 352]
	cmp	rax, rcx
	cmovbe	rax, rcx
	xor	esi, esi
	mov	ecx, 8
	mul	rcx
	mov	rbx, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_65
	mov	rax, qword ptr [rsp + 440]
LBB171_65:
	test	dl, dl
	mov	rdi, qword ptr [rsp + 1136]
	jne	LBB171_1800
	test	rax, rax
	mov	qword ptr [rsp + 304], r14
	je	LBB171_71
	lea	rsi, [8*rdi]
	cmp	rsi, rbx
	je	LBB171_77
	test	rsi, rsi
	je	LBB171_73
	mov	edx, 8
	mov	rdi, rax
	mov	rcx, rbx
	call	___rust_realloc
	jmp	LBB171_76
	.p2align	4, 0x90
LBB171_70:
	mov	rax, qword ptr [rsp + 440]
	lea	rcx, [rdi + 1]
	mov	qword ptr [rsp + 352], rcx
	jmp	LBB171_79
LBB171_71:
	mov	sil, cl
	shl	rsi, 3
	test	rbx, rbx
	jne	LBB171_75
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_78
	jmp	LBB171_1851
LBB171_73:
	test	rbx, rbx
	je	LBB171_393
	mov	esi, 8
LBB171_75:
	mov	rdi, rbx
	call	___rust_alloc
LBB171_76:
	mov	rdi, qword ptr [rsp + 1136]
LBB171_77:
	test	rax, rax
	je	LBB171_1851
LBB171_78:
	mov	qword ptr [rsp + 440], rax
	shr	rbx, 3
	mov	qword ptr [rsp + 448], rbx
	mov	r9, qword ptr [rsp + 240]
LBB171_79:
	mov	rdx, qword ptr [rsp + 720]
	mov	qword ptr [rsp + 320], r12
	movabs	rcx, 4503599627370495
	and	rdx, rcx
	movabs	rcx, 4607182418800017408
	or	rdx, rcx
	movq	xmm0, rdx
	addsd	xmm0, qword ptr [rip + LCPI171_1]
	movsd	qword ptr [rax + 8*rdi], xmm0
	mov	rdx, qword ptr [rsp + 1096]
	cmp	rdx, qword ptr [rsp + 560]
	jne	LBB171_88
	mov	r14, rdx
	inc	r14
	je	LBB171_1801
	mov	rdi, qword ptr [rsp + 1096]
	lea	rax, [rdi + rdi]
	cmp	rax, r14
	cmovbe	rax, r14
	xor	esi, esi
	mov	ecx, 8
	mul	rcx
	mov	rbx, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_83
	mov	rax, qword ptr [rsp + 552]
LBB171_83:
	test	dl, dl
	jne	LBB171_1801
	test	rax, rax
	je	LBB171_89
	mov	rcx, qword ptr [rsp + 1096]
	lea	rsi, [8*rcx]
	cmp	rsi, rbx
	je	LBB171_95
	test	rsi, rsi
	je	LBB171_91
	mov	edx, 8
	mov	rdi, rax
	mov	rcx, rbx
	call	___rust_realloc
	jmp	LBB171_94
	.p2align	4, 0x90
LBB171_88:
	mov	rax, qword ptr [rsp + 552]
	lea	r14, [rdx + 1]
	jmp	LBB171_97
LBB171_89:
	mov	sil, cl
	shl	rsi, 3
	test	rbx, rbx
	jne	LBB171_93
	mov	rax, rsi
	jmp	LBB171_94
LBB171_91:
	test	rbx, rbx
	je	LBB171_394
	mov	esi, 8
LBB171_93:
	mov	rdi, rbx
	call	___rust_alloc
LBB171_94:
	mov	rcx, qword ptr [rsp + 1096]
LBB171_95:
	test	rax, rax
	je	LBB171_1852
LBB171_96:
	mov	qword ptr [rsp + 552], rax
	shr	rbx, 3
	mov	qword ptr [rsp + 560], rbx
	mov	r9, qword ptr [rsp + 240]
	mov	rdx, rcx
LBB171_97:
	movabs	rcx, 4503599627370495
	mov	rsi, qword ptr [rsp + 1128]
	and	rsi, rcx
	movabs	rcx, 4607182418800017408
	or	rsi, rcx
	movq	xmm0, rsi
	addsd	xmm0, qword ptr [rip + LCPI171_1]
	movsd	qword ptr [rax + 8*rdx], xmm0
	mov	rsi, qword ptr [rsp + 1120]
	cmp	rsi, qword ptr [rsp + 872]
	jne	LBB171_103
	mov	rbx, rsi
	inc	rbx
	je	LBB171_1853
	lea	r13, [rsi + rsi]
	cmp	r13, rbx
	cmovbe	r13, rbx
	test	rsi, rsi
	mov	qword ptr [rsp + 368], rbx
	je	LBB171_109
	mov	rax, qword ptr [rsp + 864]
	test	rax, rax
	je	LBB171_109
	cmp	r13, rsi
	je	LBB171_112
	mov	edx, 1
	mov	rdi, rax
	mov	rcx, r13
	call	___rust_realloc
	jmp	LBB171_111
	.p2align	4, 0x90
LBB171_103:
	mov	rax, qword ptr [rsp + 864]
	mov	rcx, qword ptr [rsp + 1120]
	inc	rcx
	mov	qword ptr [rsp + 368], rcx
	mov	rsi, qword ptr [rsp + 1120]
	mov	ecx, dword ptr [rsp + 736]
	mov	byte ptr [rax + rsi], cl
	cmp	r13, qword ptr [rsp + 896]
	jne	LBB171_119
LBB171_104:
	mov	rbx, r13
	inc	rbx
	je	LBB171_1854
	mov	rax, r13
	add	r13, r13
	cmp	r13, rbx
	cmovbe	r13, rbx
	test	rax, rax
	mov	rcx, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 384], rbx
	je	LBB171_113
	mov	rax, qword ptr [rsp + 888]
	test	rax, rax
	je	LBB171_113
	cmp	r13, qword ptr [rsp + 1200]
	je	LBB171_116
	mov	edx, 1
	mov	rdi, rax
	mov	rsi, qword ptr [rsp + 1200]
	mov	rcx, r13
	call	___rust_realloc
	jmp	LBB171_115
	.p2align	4, 0x90
LBB171_109:
	test	r13, r13
	je	LBB171_117
	mov	esi, 1
	mov	rdi, r13
	call	___rust_alloc
LBB171_111:
	mov	rsi, qword ptr [rsp + 1120]
LBB171_112:
	test	rax, rax
	jne	LBB171_118
	jmp	LBB171_1890
	.p2align	4, 0x90
LBB171_113:
	test	r13, r13
	je	LBB171_130
	mov	esi, 1
	mov	rdi, r13
	call	___rust_alloc
LBB171_115:
	mov	rcx, qword ptr [rsp + 1056]
LBB171_116:
	test	rax, rax
	jne	LBB171_131
	jmp	LBB171_1891
LBB171_117:
	mov	eax, 1
LBB171_118:
	mov	qword ptr [rsp + 864], rax
	mov	qword ptr [rsp + 872], r13
	mov	r9, qword ptr [rsp + 240]
	mov	r13, qword ptr [rsp + 1200]
	mov	ecx, dword ptr [rsp + 736]
	mov	byte ptr [rax + rsi], cl
	cmp	r13, qword ptr [rsp + 896]
	je	LBB171_104
LBB171_119:
	mov	rax, qword ptr [rsp + 888]
	lea	rcx, [r13 + 1]
	mov	qword ptr [rsp + 384], rcx
	mov	rcx, qword ptr [rsp + 1056]
	mov	edx, dword ptr [rsp + 1264]
	mov	byte ptr [rax + r13], dl
	cmp	rcx, qword ptr [rsp + 920]
	jne	LBB171_132
LBB171_120:
	mov	rbx, rcx
	inc	rbx
	je	LBB171_1802
	mov	rdi, qword ptr [rsp + 1056]
	lea	rsi, [rdi + rdi]
	cmp	rsi, rbx
	mov	r13, rbx
	cmova	r13, rsi
	xor	ecx, ecx
	mov	rax, r13
	add	rax, r13
	setae	dl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_123
	mov	rax, qword ptr [rsp + 912]
LBB171_123:
	add	r13, r13
	jb	LBB171_1802
	test	rax, rax
	mov	qword ptr [rsp + 416], rbx
	je	LBB171_128
	cmp	rsi, r13
	je	LBB171_148
	test	rsi, rsi
	je	LBB171_145
	mov	edx, 2
	mov	rdi, rax
	mov	rcx, r13
	call	___rust_realloc
	test	rax, rax
	jne	LBB171_149
	jmp	LBB171_1855
LBB171_128:
	mov	cl, dl
	add	rcx, rcx
	test	r13, r13
	je	LBB171_143
	mov	rdi, r13
	mov	rsi, rcx
	jmp	LBB171_147
LBB171_130:
	mov	eax, 1
LBB171_131:
	mov	qword ptr [rsp + 888], rax
	mov	qword ptr [rsp + 896], r13
	mov	r9, qword ptr [rsp + 240]
	mov	r13, qword ptr [rsp + 1200]
	mov	edx, dword ptr [rsp + 1264]
	mov	byte ptr [rax + r13], dl
	cmp	rcx, qword ptr [rsp + 920]
	je	LBB171_120
LBB171_132:
	mov	rax, qword ptr [rsp + 912]
	mov	rcx, qword ptr [rsp + 1056]
	inc	rcx
	mov	qword ptr [rsp + 416], rcx
	mov	rcx, qword ptr [rsp + 1056]
	mov	rbx, qword ptr [rsp + 1104]
	mov	edx, dword ptr [rsp + 392]
	mov	word ptr [rax + 2*rcx], dx
	cmp	rbx, qword ptr [rsp + 944]
	jne	LBB171_150
LBB171_133:
	inc	rbx
	je	LBB171_1803
	mov	rdi, qword ptr [rsp + 1104]
	lea	rsi, [rdi + rdi]
	cmp	rsi, rbx
	mov	r13, rbx
	cmova	r13, rsi
	xor	ecx, ecx
	mov	rax, r13
	add	rax, r13
	setae	dl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_136
	mov	rax, qword ptr [rsp + 936]
LBB171_136:
	add	r13, r13
	jb	LBB171_1803
	test	rax, rax
	mov	qword ptr [rsp + 392], rbx
	je	LBB171_141
	cmp	rsi, r13
	je	LBB171_164
	test	rsi, rsi
	je	LBB171_161
	mov	edx, 2
	mov	rdi, rax
	mov	rcx, r13
	call	___rust_realloc
	test	rax, rax
	jne	LBB171_165
	jmp	LBB171_1856
LBB171_141:
	mov	cl, dl
	add	rcx, rcx
	test	r13, r13
	je	LBB171_144
	mov	rdi, r13
	mov	rsi, rcx
	jmp	LBB171_163
LBB171_143:
	mov	rax, rcx
	test	rax, rax
	jne	LBB171_149
	jmp	LBB171_1855
LBB171_144:
	mov	rax, rcx
	test	rax, rax
	jne	LBB171_165
	jmp	LBB171_1856
LBB171_145:
	test	r13, r13
	je	LBB171_395
	mov	esi, 2
	mov	rdi, r13
LBB171_147:
	call	___rust_alloc
LBB171_148:
	test	rax, rax
	je	LBB171_1855
LBB171_149:
	mov	qword ptr [rsp + 912], rax
	shr	r13
	mov	qword ptr [rsp + 920], r13
	mov	r9, qword ptr [rsp + 240]
	mov	rbx, qword ptr [rsp + 1104]
	mov	rcx, qword ptr [rsp + 1056]
	mov	edx, dword ptr [rsp + 392]
	mov	word ptr [rax + 2*rcx], dx
	cmp	rbx, qword ptr [rsp + 944]
	je	LBB171_133
LBB171_150:
	mov	rax, qword ptr [rsp + 936]
	mov	rcx, qword ptr [rsp + 1104]
	inc	rcx
	mov	qword ptr [rsp + 392], rcx
	mov	rcx, qword ptr [rsp + 1104]
	mov	rbx, qword ptr [rsp + 544]
	mov	edx, dword ptr [rsp + 432]
	mov	word ptr [rax + 2*rcx], dx
	cmp	rbx, qword ptr [rsp + 608]
	jne	LBB171_166
LBB171_151:
	inc	rbx
	je	LBB171_1804
	mov	rdi, qword ptr [rsp + 544]
	lea	rax, [rdi + rdi]
	cmp	rax, rbx
	cmovbe	rax, rbx
	xor	esi, esi
	mov	ecx, 4
	mul	rcx
	mov	r13, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_154
	mov	rax, qword ptr [rsp + 600]
LBB171_154:
	test	dl, dl
	jne	LBB171_1804
	test	rax, rax
	mov	qword ptr [rsp + 432], rbx
	je	LBB171_159
	mov	rcx, qword ptr [rsp + 544]
	lea	rsi, [4*rcx]
	cmp	rsi, r13
	je	LBB171_170
	test	rsi, rsi
	je	LBB171_167
	mov	edx, 4
	mov	rdi, rax
	mov	rcx, r13
	call	___rust_realloc
	test	rax, rax
	jne	LBB171_171
	jmp	LBB171_1858
LBB171_159:
	mov	sil, cl
	shl	rsi, 2
	test	r13, r13
	jne	LBB171_169
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_171
	jmp	LBB171_1858
LBB171_161:
	test	r13, r13
	je	LBB171_396
	mov	esi, 2
	mov	rdi, r13
LBB171_163:
	call	___rust_alloc
LBB171_164:
	test	rax, rax
	je	LBB171_1856
LBB171_165:
	mov	qword ptr [rsp + 936], rax
	shr	r13
	mov	qword ptr [rsp + 944], r13
	mov	r9, qword ptr [rsp + 240]
	mov	rbx, qword ptr [rsp + 544]
	mov	rcx, qword ptr [rsp + 1104]
	mov	edx, dword ptr [rsp + 432]
	mov	word ptr [rax + 2*rcx], dx
	cmp	rbx, qword ptr [rsp + 608]
	je	LBB171_151
LBB171_166:
	mov	rax, qword ptr [rsp + 600]
	lea	rcx, [rbx + 1]
	mov	qword ptr [rsp + 432], rcx
	mov	rcx, qword ptr [rsp + 1072]
	jmp	LBB171_172
LBB171_167:
	test	r13, r13
	je	LBB171_397
	mov	esi, 4
LBB171_169:
	mov	rdi, r13
	call	___rust_alloc
LBB171_170:
	test	rax, rax
	je	LBB171_1858
LBB171_171:
	mov	qword ptr [rsp + 600], rax
	shr	r13, 2
	mov	qword ptr [rsp + 608], r13
	mov	r9, qword ptr [rsp + 240]
	mov	rcx, qword ptr [rsp + 1072]
	mov	rbx, qword ptr [rsp + 544]
LBB171_172:
	mov	edx, dword ptr [rsp + 488]
	mov	dword ptr [rax + 4*rbx], edx
	mov	rbx, qword ptr [rsp + 512]
	cmp	rbx, qword ptr [rsp + 752]
	jne	LBB171_181
	inc	rbx
	je	LBB171_1805
	mov	rdi, qword ptr [rsp + 512]
	lea	rax, [rdi + rdi]
	cmp	rax, rbx
	cmovbe	rax, rbx
	xor	esi, esi
	mov	ecx, 4
	mul	rcx
	mov	r13, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_176
	mov	rax, qword ptr [rsp + 744]
LBB171_176:
	test	dl, dl
	jne	LBB171_1805
	test	rax, rax
	mov	qword ptr [rsp + 488], rbx
	je	LBB171_190
	mov	rcx, qword ptr [rsp + 512]
	lea	rsi, [4*rcx]
	cmp	rsi, r13
	je	LBB171_197
	test	rsi, rsi
	je	LBB171_194
	mov	edx, 4
	mov	rdi, rax
	mov	rcx, r13
	call	___rust_realloc
	test	rax, rax
	jne	LBB171_198
	jmp	LBB171_1859
	.p2align	4, 0x90
LBB171_181:
	mov	rsi, rbx
	mov	rax, qword ptr [rsp + 744]
	lea	rdx, [rbx + 1]
	mov	qword ptr [rsp + 488], rdx
	mov	edx, dword ptr [rsp + 504]
	mov	dword ptr [rax + 4*rsi], edx
	cmp	rcx, qword ptr [rsp + 632]
	jne	LBB171_199
LBB171_182:
	mov	rbx, rcx
	inc	rbx
	je	LBB171_1806
	mov	rdi, qword ptr [rsp + 1072]
	lea	rax, [rdi + rdi]
	cmp	rax, rbx
	cmovbe	rax, rbx
	xor	esi, esi
	mov	ecx, 8
	mul	rcx
	mov	r13, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_185
	mov	rax, qword ptr [rsp + 624]
LBB171_185:
	test	dl, dl
	jne	LBB171_1806
	test	rax, rax
	mov	qword ptr [rsp + 504], rbx
	je	LBB171_192
	mov	rcx, qword ptr [rsp + 1072]
	lea	rsi, [8*rcx]
	cmp	rsi, r13
	je	LBB171_204
	test	rsi, rsi
	je	LBB171_200
	mov	edx, 8
	mov	rdi, rax
	mov	rcx, r13
	call	___rust_realloc
	jmp	LBB171_203
LBB171_190:
	mov	sil, cl
	shl	rsi, 2
	test	r13, r13
	jne	LBB171_196
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_198
	jmp	LBB171_1859
LBB171_192:
	mov	sil, cl
	shl	rsi, 3
	test	r13, r13
	jne	LBB171_202
	mov	rax, rsi
	jmp	LBB171_203
LBB171_194:
	test	r13, r13
	je	LBB171_398
	mov	esi, 4
LBB171_196:
	mov	rdi, r13
	call	___rust_alloc
LBB171_197:
	test	rax, rax
	je	LBB171_1859
LBB171_198:
	mov	qword ptr [rsp + 744], rax
	shr	r13, 2
	mov	qword ptr [rsp + 752], r13
	mov	r9, qword ptr [rsp + 240]
	mov	rcx, qword ptr [rsp + 1072]
	mov	rsi, qword ptr [rsp + 512]
	mov	edx, dword ptr [rsp + 504]
	mov	dword ptr [rax + 4*rsi], edx
	cmp	rcx, qword ptr [rsp + 632]
	je	LBB171_182
LBB171_199:
	mov	rax, qword ptr [rsp + 624]
	lea	rdx, [rcx + 1]
	mov	qword ptr [rsp + 504], rdx
	jmp	LBB171_206
LBB171_200:
	test	r13, r13
	je	LBB171_399
	mov	esi, 8
LBB171_202:
	mov	rdi, r13
	call	___rust_alloc
LBB171_203:
	mov	rcx, qword ptr [rsp + 1072]
LBB171_204:
	test	rax, rax
	je	LBB171_1862
LBB171_205:
	mov	qword ptr [rsp + 624], rax
	shr	r13, 3
	mov	qword ptr [rsp + 632], r13
	mov	r9, qword ptr [rsp + 240]
LBB171_206:
	mov	rdx, qword ptr [rsp + 576]
	mov	qword ptr [rax + 8*rcx], rdx
	mov	rdi, qword ptr [rsp + 496]
	cmp	rdi, qword ptr [rsp + 776]
	jne	LBB171_215
	mov	rbx, rdi
	inc	rbx
	je	LBB171_1807
	lea	rax, [rdi + rdi]
	cmp	rax, rbx
	cmovbe	rax, rbx
	xor	esi, esi
	mov	ecx, 8
	mul	rcx
	mov	r13, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_210
	mov	rax, qword ptr [rsp + 768]
LBB171_210:
	test	dl, dl
	jne	LBB171_1807
	test	rax, rax
	mov	qword ptr [rsp + 576], rbx
	je	LBB171_216
	lea	rsi, [8*rdi]
	cmp	rsi, r13
	je	LBB171_221
	test	rsi, rsi
	je	LBB171_218
	mov	edx, 8
	mov	rdi, rax
	mov	rcx, r13
	call	___rust_realloc
	test	rax, rax
	jne	LBB171_222
	jmp	LBB171_1863
	.p2align	4, 0x90
LBB171_215:
	mov	rax, qword ptr [rsp + 768]
	lea	rcx, [rdi + 1]
	mov	qword ptr [rsp + 576], rcx
	jmp	LBB171_223
LBB171_216:
	mov	sil, cl
	shl	rsi, 3
	test	r13, r13
	jne	LBB171_220
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_222
	jmp	LBB171_1863
LBB171_218:
	test	r13, r13
	je	LBB171_400
	mov	esi, 8
LBB171_220:
	mov	rdi, r13
	call	___rust_alloc
LBB171_221:
	test	rax, rax
	je	LBB171_1863
LBB171_222:
	mov	qword ptr [rsp + 768], rax
	shr	r13, 3
	mov	qword ptr [rsp + 776], r13
	mov	r9, qword ptr [rsp + 240]
	mov	rdi, qword ptr [rsp + 496]
LBB171_223:
	mov	rcx, qword ptr [rsp + 584]
	mov	qword ptr [rax + 8*rdi], rcx
	mov	rax, qword ptr [rsp + 424]
	cmp	rax, qword ptr [rsp + 968]
	jne	LBB171_229
	mov	rbx, rax
	inc	rbx
	je	LBB171_1865
	lea	r13, [rax + rax]
	cmp	r13, rbx
	cmovbe	r13, rbx
	test	rax, rax
	mov	qword ptr [rsp + 584], rbx
	je	LBB171_230
	mov	rax, qword ptr [rsp + 960]
	test	rax, rax
	je	LBB171_230
	cmp	r13, qword ptr [rsp + 424]
	je	LBB171_232
	mov	edx, 1
	mov	rdi, rax
	mov	rsi, qword ptr [rsp + 424]
	mov	rcx, r13
	call	___rust_realloc
	test	rax, rax
	jne	LBB171_234
	jmp	LBB171_1893
	.p2align	4, 0x90
LBB171_229:
	mov	rcx, rax
	mov	rax, qword ptr [rsp + 960]
	lea	rdx, [rcx + 1]
	mov	qword ptr [rsp + 584], rdx
	jmp	LBB171_235
	.p2align	4, 0x90
LBB171_230:
	test	r13, r13
	je	LBB171_233
	mov	esi, 1
	mov	rdi, r13
	call	___rust_alloc
LBB171_232:
	test	rax, rax
	jne	LBB171_234
	jmp	LBB171_1893
LBB171_233:
	mov	eax, 1
LBB171_234:
	mov	qword ptr [rsp + 960], rax
	mov	qword ptr [rsp + 968], r13
	mov	r9, qword ptr [rsp + 240]
	mov	rcx, qword ptr [rsp + 424]
LBB171_235:
	mov	edx, dword ptr [rsp + 592]
	mov	byte ptr [rax + rcx], dl
	mov	rax, qword ptr [rsp + 408]
	cmp	rax, qword ptr [rsp + 992]
	jne	LBB171_241
	mov	rbx, rax
	inc	rbx
	je	LBB171_1866
	lea	r13, [rax + rax]
	cmp	r13, rbx
	cmovbe	r13, rbx
	test	rax, rax
	mov	qword ptr [rsp + 592], rbx
	je	LBB171_242
	mov	rax, qword ptr [rsp + 984]
	test	rax, rax
	je	LBB171_242
	cmp	r13, qword ptr [rsp + 408]
	je	LBB171_244
	mov	edx, 1
	mov	rdi, rax
	mov	rsi, qword ptr [rsp + 408]
	mov	rcx, r13
	call	___rust_realloc
	test	rax, rax
	jne	LBB171_246
	jmp	LBB171_1895
	.p2align	4, 0x90
LBB171_241:
	mov	rcx, rax
	mov	rax, qword ptr [rsp + 984]
	lea	rdx, [rcx + 1]
	mov	qword ptr [rsp + 592], rdx
	jmp	LBB171_247
	.p2align	4, 0x90
LBB171_242:
	test	r13, r13
	je	LBB171_245
	mov	esi, 1
	mov	rdi, r13
	call	___rust_alloc
LBB171_244:
	test	rax, rax
	jne	LBB171_246
	jmp	LBB171_1895
LBB171_245:
	mov	eax, 1
LBB171_246:
	mov	qword ptr [rsp + 984], rax
	mov	qword ptr [rsp + 992], r13
	mov	r9, qword ptr [rsp + 240]
	mov	rcx, qword ptr [rsp + 408]
LBB171_247:
	mov	edx, dword ptr [rsp + 1256]
	mov	byte ptr [rax + rcx], dl
	mov	rdi, qword ptr [rsp + 400]
	cmp	rdi, qword ptr [rsp + 1016]
	jne	LBB171_256
	mov	rax, rdi
	inc	rax
	mov	qword ptr [rsp + 736], rax
	je	LBB171_1808
	lea	rsi, [rdi + rdi]
	mov	rbx, qword ptr [rsp + 736]
	cmp	rsi, rbx
	cmova	rbx, rsi
	xor	ecx, ecx
	mov	rax, rbx
	add	rax, rbx
	setae	dl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_251
	mov	rax, qword ptr [rsp + 1008]
LBB171_251:
	add	rbx, rbx
	jb	LBB171_1808
	test	rax, rax
	je	LBB171_257
	cmp	rsi, rbx
	je	LBB171_263
	test	rsi, rsi
	je	LBB171_260
	mov	edx, 2
	mov	rdi, rax
	mov	rcx, rbx
	call	___rust_realloc
	test	rax, rax
	jne	LBB171_264
	jmp	LBB171_1867
	.p2align	4, 0x90
LBB171_256:
	mov	rax, qword ptr [rsp + 1008]
	lea	rcx, [rdi + 1]
	mov	qword ptr [rsp + 736], rcx
	jmp	LBB171_265
LBB171_257:
	mov	cl, dl
	add	rcx, rcx
	test	rbx, rbx
	je	LBB171_259
	mov	rdi, rbx
	mov	rsi, rcx
	jmp	LBB171_262
LBB171_259:
	mov	rax, rcx
	test	rax, rax
	jne	LBB171_264
	jmp	LBB171_1867
LBB171_260:
	test	rbx, rbx
	je	LBB171_401
	mov	esi, 2
	mov	rdi, rbx
LBB171_262:
	call	___rust_alloc
LBB171_263:
	test	rax, rax
	je	LBB171_1867
LBB171_264:
	mov	qword ptr [rsp + 1008], rax
	shr	rbx
	mov	qword ptr [rsp + 1016], rbx
	mov	r9, qword ptr [rsp + 240]
	mov	rdi, qword ptr [rsp + 400]
LBB171_265:
	mov	ecx, dword ptr [rsp + 1272]
	mov	word ptr [rax + 2*rdi], cx
	mov	rdi, qword ptr [rsp + 376]
	cmp	rdi, qword ptr [rsp + 1040]
	jne	LBB171_274
	mov	rax, rdi
	inc	rax
	mov	qword ptr [rsp + 720], rax
	je	LBB171_1809
	lea	rsi, [rdi + rdi]
	mov	rbx, qword ptr [rsp + 720]
	cmp	rsi, rbx
	cmova	rbx, rsi
	xor	ecx, ecx
	mov	rax, rbx
	add	rax, rbx
	setae	dl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_269
	mov	rax, qword ptr [rsp + 1032]
LBB171_269:
	add	rbx, rbx
	jb	LBB171_1809
	test	rax, rax
	je	LBB171_275
	cmp	rsi, rbx
	je	LBB171_281
	test	rsi, rsi
	je	LBB171_278
	mov	edx, 2
	mov	rdi, rax
	mov	rcx, rbx
	call	___rust_realloc
	test	rax, rax
	jne	LBB171_282
	jmp	LBB171_1868
	.p2align	4, 0x90
LBB171_274:
	mov	rax, qword ptr [rsp + 1032]
	lea	rcx, [rdi + 1]
	mov	qword ptr [rsp + 720], rcx
	jmp	LBB171_283
LBB171_275:
	mov	cl, dl
	add	rcx, rcx
	test	rbx, rbx
	je	LBB171_277
	mov	rdi, rbx
	mov	rsi, rcx
	jmp	LBB171_280
LBB171_277:
	mov	rax, rcx
	test	rax, rax
	jne	LBB171_282
	jmp	LBB171_1868
LBB171_278:
	test	rbx, rbx
	je	LBB171_402
	mov	esi, 2
	mov	rdi, rbx
LBB171_280:
	call	___rust_alloc
LBB171_281:
	test	rax, rax
	je	LBB171_1868
LBB171_282:
	mov	qword ptr [rsp + 1032], rax
	shr	rbx
	mov	qword ptr [rsp + 1040], rbx
	mov	r9, qword ptr [rsp + 240]
	mov	rdi, qword ptr [rsp + 376]
LBB171_283:
	mov	ecx, dword ptr [rsp + 1288]
	mov	word ptr [rax + 2*rdi], cx
	mov	rdi, qword ptr [rsp + 360]
	cmp	rdi, qword ptr [rsp + 656]
	jne	LBB171_292
	mov	rax, rdi
	inc	rax
	mov	qword ptr [rsp + 1128], rax
	je	LBB171_1810
	lea	rax, [rdi + rdi]
	mov	rcx, qword ptr [rsp + 1128]
	cmp	rax, rcx
	cmovbe	rax, rcx
	xor	esi, esi
	mov	ecx, 4
	mul	rcx
	mov	rbx, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_287
	mov	rax, qword ptr [rsp + 648]
LBB171_287:
	test	dl, dl
	jne	LBB171_1810
	test	rax, rax
	je	LBB171_293
	lea	rsi, [4*rdi]
	cmp	rsi, rbx
	je	LBB171_298
	test	rsi, rsi
	je	LBB171_295
	mov	edx, 4
	mov	rdi, rax
	mov	rcx, rbx
	call	___rust_realloc
	test	rax, rax
	jne	LBB171_299
	jmp	LBB171_1870
	.p2align	4, 0x90
LBB171_292:
	mov	rax, qword ptr [rsp + 648]
	lea	rcx, [rdi + 1]
	mov	qword ptr [rsp + 1128], rcx
	jmp	LBB171_300
LBB171_293:
	mov	sil, cl
	shl	rsi, 2
	test	rbx, rbx
	jne	LBB171_297
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_299
	jmp	LBB171_1870
LBB171_295:
	test	rbx, rbx
	je	LBB171_403
	mov	esi, 4
LBB171_297:
	mov	rdi, rbx
	call	___rust_alloc
LBB171_298:
	test	rax, rax
	je	LBB171_1870
LBB171_299:
	mov	qword ptr [rsp + 648], rax
	shr	rbx, 2
	mov	qword ptr [rsp + 656], rbx
	mov	r9, qword ptr [rsp + 240]
	mov	rdi, qword ptr [rsp + 360]
LBB171_300:
	mov	ecx, dword ptr [rsp + 1280]
	mov	dword ptr [rax + 4*rdi], ecx
	mov	rcx, qword ptr [rsp + 344]
	cmp	rcx, qword ptr [rsp + 800]
	jne	LBB171_309
	mov	r8, rcx
	inc	r8
	je	LBB171_1811
	mov	rdi, qword ptr [rsp + 344]
	lea	rax, [rdi + rdi]
	cmp	rax, r8
	cmovbe	rax, r8
	xor	esi, esi
	mov	ecx, 4
	mul	rcx
	mov	rbx, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_304
	mov	rax, qword ptr [rsp + 792]
LBB171_304:
	test	dl, dl
	jne	LBB171_1811
	test	rax, rax
	je	LBB171_310
	mov	rcx, qword ptr [rsp + 344]
	lea	rsi, [4*rcx]
	cmp	rsi, rbx
	je	LBB171_317
	mov	r12, r8
	test	rsi, rsi
	je	LBB171_313
	mov	edx, 4
	mov	rdi, rax
	mov	rcx, rbx
	call	___rust_realloc
	jmp	LBB171_316
	.p2align	4, 0x90
LBB171_309:
	mov	rax, qword ptr [rsp + 792]
	lea	r8, [rcx + 1]
	jmp	LBB171_319
LBB171_310:
	mov	sil, cl
	shl	rsi, 2
	test	rbx, rbx
	je	LBB171_312
	mov	rdi, rbx
	mov	r12, r8
	jmp	LBB171_315
LBB171_312:
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_318
	jmp	LBB171_1871
LBB171_313:
	test	rbx, rbx
	je	LBB171_404
	mov	esi, 4
	mov	rdi, rbx
LBB171_315:
	call	___rust_alloc
LBB171_316:
	mov	r8, r12
LBB171_317:
	test	rax, rax
	je	LBB171_1871
LBB171_318:
	mov	qword ptr [rsp + 792], rax
	shr	rbx, 2
	mov	qword ptr [rsp + 800], rbx
	mov	r9, qword ptr [rsp + 240]
	mov	rcx, qword ptr [rsp + 344]
LBB171_319:
	mov	edx, dword ptr [rsp + 1596]
	mov	dword ptr [rax + 4*rcx], edx
	mov	rcx, qword ptr [rsp + 312]
	cmp	rcx, qword ptr [rsp + 680]
	jne	LBB171_328
	mov	r15, rcx
	inc	r15
	je	LBB171_1812
	mov	rdi, qword ptr [rsp + 312]
	lea	rax, [rdi + rdi]
	cmp	rax, r15
	cmovbe	rax, r15
	xor	esi, esi
	mov	ecx, 8
	mul	rcx
	mov	rbx, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_323
	mov	rax, qword ptr [rsp + 672]
LBB171_323:
	test	dl, dl
	jne	LBB171_1812
	test	rax, rax
	je	LBB171_329
	mov	rcx, qword ptr [rsp + 312]
	lea	rsi, [8*rcx]
	cmp	rsi, rbx
	je	LBB171_336
	mov	r12, r8
	test	rsi, rsi
	je	LBB171_332
	mov	edx, 8
	mov	rdi, rax
	mov	rcx, rbx
	call	___rust_realloc
	jmp	LBB171_335
	.p2align	4, 0x90
LBB171_328:
	mov	rax, qword ptr [rsp + 672]
	lea	r15, [rcx + 1]
	jmp	LBB171_338
LBB171_329:
	mov	sil, cl
	shl	rsi, 3
	test	rbx, rbx
	je	LBB171_331
	mov	rdi, rbx
	mov	r12, r8
	jmp	LBB171_334
LBB171_331:
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_337
	jmp	LBB171_1874
LBB171_332:
	test	rbx, rbx
	je	LBB171_405
	mov	esi, 8
	mov	rdi, rbx
LBB171_334:
	call	___rust_alloc
LBB171_335:
	mov	r8, r12
LBB171_336:
	test	rax, rax
	je	LBB171_1874
LBB171_337:
	mov	qword ptr [rsp + 672], rax
	shr	rbx, 3
	mov	qword ptr [rsp + 680], rbx
	mov	r9, qword ptr [rsp + 240]
	mov	rcx, qword ptr [rsp + 312]
LBB171_338:
	mov	qword ptr [rsp + 1264], r14
	mov	rdx, qword ptr [rsp + 1632]
	mov	qword ptr [rax + 8*rcx], rdx
	cmp	r9, qword ptr [rsp + 824]
	jne	LBB171_347
	mov	rbx, r9
	inc	rbx
	mov	r12, qword ptr [rsp + 320]
	je	LBB171_1813
	mov	rdi, qword ptr [rsp + 240]
	lea	rax, [rdi + rdi]
	cmp	rax, rbx
	cmovbe	rax, rbx
	xor	esi, esi
	mov	ecx, 8
	mul	rcx
	mov	r13, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_342
	mov	rax, qword ptr [rsp + 816]
LBB171_342:
	test	dl, dl
	jne	LBB171_1813
	test	rax, rax
	je	LBB171_348
	mov	rcx, qword ptr [rsp + 240]
	lea	rsi, [8*rcx]
	cmp	rsi, r13
	je	LBB171_354
	test	rsi, rsi
	je	LBB171_350
	mov	edx, 8
	mov	rdi, rax
	mov	rcx, r13
	mov	r14, r8
	call	___rust_realloc
	jmp	LBB171_353
	.p2align	4, 0x90
LBB171_347:
	mov	rax, qword ptr [rsp + 816]
	lea	rbx, [r9 + 1]
	mov	r12, qword ptr [rsp + 320]
	jmp	LBB171_356
LBB171_348:
	mov	sil, cl
	shl	rsi, 3
	test	r13, r13
	jne	LBB171_352
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_355
	jmp	LBB171_1877
LBB171_350:
	test	r13, r13
	je	LBB171_406
	mov	esi, 8
LBB171_352:
	mov	rdi, r13
	mov	r14, r8
	call	___rust_alloc
LBB171_353:
	mov	r8, r14
LBB171_354:
	test	rax, rax
	je	LBB171_1877
LBB171_355:
	mov	qword ptr [rsp + 816], rax
	shr	r13, 3
	mov	qword ptr [rsp + 824], r13
	mov	r9, qword ptr [rsp + 240]
LBB171_356:
	mov	rcx, qword ptr [rsp + 1624]
	mov	qword ptr [rax + 8*r9], rcx
	cmp	r12, qword ptr [rsp + 704]
	mov	qword ptr [rsp + 1256], r15
	jne	LBB171_365
	mov	r9, r12
	inc	r9
	mov	r12, qword ptr [rsp + 304]
	mov	r10, qword ptr [rsp + 720]
	je	LBB171_1814
	mov	rdi, qword ptr [rsp + 320]
	lea	rax, [rdi + rdi]
	cmp	rax, r9
	cmovbe	rax, r9
	xor	esi, esi
	mov	ecx, 8
	mul	rcx
	mov	r14, rax
	seto	dl
	setno	cl
	mov	rax, rdi
	test	rdi, rdi
	je	LBB171_360
	mov	rax, qword ptr [rsp + 696]
LBB171_360:
	test	dl, dl
	jne	LBB171_1814
	test	rax, rax
	je	LBB171_366
	mov	rcx, qword ptr [rsp + 320]
	lea	rsi, [8*rcx]
	cmp	rsi, r14
	je	LBB171_372
	mov	qword ptr [rsp + 720], r10
	mov	r13, r9
	test	rsi, rsi
	je	LBB171_369
	mov	edx, 8
	mov	rdi, rax
	mov	rcx, r14
	mov	r15, r8
	call	___rust_realloc
	jmp	LBB171_371
	.p2align	4, 0x90
LBB171_365:
	mov	rax, qword ptr [rsp + 696]
	mov	rcx, r12
	lea	r9, [r12 + 1]
	mov	r12, qword ptr [rsp + 304]
	mov	r10, qword ptr [rsp + 720]
	jmp	LBB171_374
LBB171_366:
	mov	sil, cl
	shl	rsi, 3
	test	r14, r14
	je	LBB171_368
	mov	rdi, r14
	mov	qword ptr [rsp + 240], r8
	mov	r13, r9
	mov	r15, r10
	call	___rust_alloc
	mov	r10, r15
	mov	r9, r13
	mov	r8, qword ptr [rsp + 240]
	mov	r15, qword ptr [rsp + 1256]
	test	rax, rax
	jne	LBB171_373
	jmp	LBB171_1879
LBB171_368:
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_373
	jmp	LBB171_1879
LBB171_369:
	test	r14, r14
	je	LBB171_407
	mov	esi, 8
	mov	rdi, r14
	mov	r15, r8
	call	___rust_alloc
LBB171_371:
	mov	r8, r15
	mov	r15, qword ptr [rsp + 1256]
	mov	r9, r13
	mov	r10, qword ptr [rsp + 720]
LBB171_372:
	test	rax, rax
	je	LBB171_1879
LBB171_373:
	mov	qword ptr [rsp + 696], rax
	shr	r14, 3
	mov	qword ptr [rsp + 704], r14
	mov	rcx, qword ptr [rsp + 320]
LBB171_374:
	mov	rdx, qword ptr [rsp + 1608]
	mov	qword ptr [rax + 8*rcx], rdx
	cmp	r12, qword ptr [rsp + 848]
	mov	r14, qword ptr [rsp + 1128]
	mov	qword ptr [rsp + 1272], r9
	mov	qword ptr [rsp + 720], r10
	mov	qword ptr [rsp + 1280], rbx
	jne	LBB171_1
	mov	r15, qword ptr [rsp + 736]
	mov	rdi, r12
	inc	rdi
	je	LBB171_1815
	lea	rax, [r12 + r12]
	cmp	rax, rdi
	cmovbe	rax, rdi
	xor	esi, esi
	mov	ecx, 8
	mul	rcx
	mov	r13, rax
	seto	dl
	setno	cl
	mov	rax, r12
	test	r12, r12
	je	LBB171_378
	mov	rax, qword ptr [rsp + 840]
LBB171_378:
	test	dl, dl
	jne	LBB171_1815
	test	rax, rax
	je	LBB171_383
	lea	rsi, [8*r12]
	cmp	rsi, r13
	je	LBB171_389
	mov	qword ptr [rsp + 240], r8
	test	rsi, rsi
	je	LBB171_386
	mov	edx, 8
	mov	rbx, rdi
	mov	rdi, rax
	mov	rcx, r13
	call	___rust_realloc
	jmp	LBB171_388
LBB171_383:
	mov	sil, cl
	shl	rsi, 3
	test	r13, r13
	je	LBB171_385
	mov	qword ptr [rsp + 1288], rdi
	mov	rdi, r13
	mov	qword ptr [rsp + 240], r8
	call	___rust_alloc
	mov	rdi, qword ptr [rsp + 1288]
	mov	r10, qword ptr [rsp + 720]
	mov	r9, qword ptr [rsp + 1272]
	mov	r8, qword ptr [rsp + 240]
	test	rax, rax
	jne	LBB171_390
	jmp	LBB171_1880
LBB171_385:
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_390
	jmp	LBB171_1880
LBB171_386:
	test	r13, r13
	je	LBB171_408
	mov	esi, 8
	mov	rbx, rdi
	mov	rdi, r13
	call	___rust_alloc
LBB171_388:
	mov	rdi, rbx
	mov	r8, qword ptr [rsp + 240]
	mov	rbx, qword ptr [rsp + 1280]
	mov	r9, qword ptr [rsp + 1272]
	mov	r10, qword ptr [rsp + 720]
LBB171_389:
	test	rax, rax
	je	LBB171_1880
LBB171_390:
	mov	qword ptr [rsp + 840], rax
	shr	r13, 3
	mov	qword ptr [rsp + 848], r13
	mov	r15, qword ptr [rsp + 1256]
	jmp	LBB171_2
LBB171_391:
	mov	eax, 4
	mov	rdi, qword ptr [rsp + 1136]
	mov	rdx, qword ptr [rsp + 1192]
	jmp	LBB171_42
LBB171_392:
	mov	eax, 4
	jmp	LBB171_60
LBB171_393:
	mov	eax, 8
	jmp	LBB171_78
LBB171_394:
	mov	eax, 8
	jmp	LBB171_96
LBB171_395:
	mov	eax, 2
	jmp	LBB171_149
LBB171_396:
	mov	eax, 2
	jmp	LBB171_165
LBB171_397:
	mov	eax, 4
	jmp	LBB171_171
LBB171_398:
	mov	eax, 4
	jmp	LBB171_198
LBB171_399:
	mov	eax, 8
	jmp	LBB171_205
LBB171_400:
	mov	eax, 8
	jmp	LBB171_222
LBB171_401:
	mov	eax, 2
	jmp	LBB171_264
LBB171_402:
	mov	eax, 2
	jmp	LBB171_282
LBB171_403:
	mov	eax, 4
	jmp	LBB171_299
LBB171_404:
	mov	eax, 4
	mov	r8, r12
	jmp	LBB171_318
LBB171_405:
	mov	eax, 8
	mov	r8, r12
	jmp	LBB171_337
LBB171_406:
	mov	eax, 8
	jmp	LBB171_355
LBB171_407:
	mov	eax, 8
	mov	r9, r13
	mov	r10, qword ptr [rsp + 720]
	jmp	LBB171_373
LBB171_408:
	mov	eax, 8
	mov	r8, qword ptr [rsp + 240]
	mov	rbx, qword ptr [rsp + 1280]
	mov	r9, qword ptr [rsp + 1272]
	mov	r10, qword ptr [rsp + 720]
	jmp	LBB171_390
LBB171_409:
	mov	qword ptr [rsp + 480], rax
	mov	qword ptr [rsp + 456], rcx
	mov	qword ptr [rsp + 568], rdx
	mov	qword ptr [rsp + 880], rsi
	mov	qword ptr [rsp + 904], rdi
	mov	qword ptr [rsp + 928], rbx
	mov	qword ptr [rsp + 952], r8
	mov	qword ptr [rsp + 616], r9
	mov	qword ptr [rsp + 760], r10
	mov	qword ptr [rsp + 640], r11
	mov	qword ptr [rsp + 784], r15
	mov	qword ptr [rsp + 976], r12
	mov	qword ptr [rsp + 1000], r13
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 720]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 1128]
	mov	qword ptr [rsp + 664], rax
	mov	qword ptr [rsp + 808], r14
	mov	rax, qword ptr [rsp + 1256]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 1280]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 1272]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 1288]
	mov	qword ptr [rsp + 856], rax
	lea	rax, [rip + l___unnamed_31]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2487:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2488:
Ltmp2489:
	lea	rdi, [rsp + 8424]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2490:
	mov	rsi, qword ptr [rsp + 536]
	mov	eax, esi
	and	eax, 15
	mov	rbx, rsi
	sub	rbx, rax
	jb	LBB171_1897
	cmp	rsi, rbx
	jb	LBB171_1898
	mov	r15, qword ptr [rsp + 520]
	mov	qword ptr [rsp + 256], 16
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rbx
	test	rbx, rbx
	je	LBB171_415
	mov	r14, rbx
	dec	r14
	shr	r14, 4
	inc	r14
	jmp	LBB171_416
LBB171_415:
	xor	r14d, r14d
LBB171_416:
Ltmp2491:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2492:
	mov	qword ptr [rsp + 128], 16
	mov	qword ptr [rsp + 136], r15
	mov	qword ptr [rsp + 144], rbx
Ltmp2493:
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 128]
	mov	r8d, 1
	mov	rsi, r14
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h9345e3cb89fa4930E
Ltmp2494:
Ltmp2495:
	lea	rdi, [rsp + 8472]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2496:
	lea	rax, [rip + l___unnamed_32]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2497:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2498:
Ltmp2499:
	lea	rdi, [rsp + 1656]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2500:
	mov	rax, qword ptr [rsp + 536]
	cmp	rax, qword ptr [rsp + 480]
	jne	LBB171_1899
	test	rax, rax
	je	LBB171_437
	mov	rcx, qword ptr [rsp + 520]
	mov	rdx, qword ptr [rsp + 464]
	cmp	rax, 7
	jbe	LBB171_426
	lea	rsi, [rdx + 4*rax]
	cmp	rcx, rsi
	jae	LBB171_431
	lea	rsi, [rcx + 4*rax]
	cmp	rdx, rsi
	jae	LBB171_431
LBB171_426:
	xor	esi, esi
LBB171_427:
	mov	rdi, rsi
	test	al, 1
	je	LBB171_429
	mov	rdi, rsi
	or	rdi, 1
	mov	r8d, dword ptr [rcx + 4*rsi]
	mov	ebx, dword ptr [rdx + 4*rsi]
	mov	dword ptr [rcx + 4*rsi], ebx
	mov	dword ptr [rdx + 4*rsi], r8d
LBB171_429:
	or	rsi, 1
	cmp	rax, rsi
	je	LBB171_437
	.p2align	4, 0x90
LBB171_430:
	mov	esi, dword ptr [rcx + 4*rdi]
	mov	ebx, dword ptr [rdx + 4*rdi]
	mov	dword ptr [rcx + 4*rdi], ebx
	mov	dword ptr [rdx + 4*rdi], esi
	mov	esi, dword ptr [rcx + 4*rdi + 4]
	mov	ebx, dword ptr [rdx + 4*rdi + 4]
	mov	dword ptr [rcx + 4*rdi + 4], ebx
	mov	dword ptr [rdx + 4*rdi + 4], esi
	add	rdi, 2
	cmp	rax, rdi
	jne	LBB171_430
	jmp	LBB171_437
LBB171_431:
	mov	rsi, rax
	and	rsi, -8
	lea	rdi, [rsi - 8]
	mov	rbx, rdi
	shr	rbx, 3
	inc	rbx
	mov	r8d, ebx
	and	r8d, 1
	test	rdi, rdi
	je	LBB171_1782
	sub	rbx, r8
	xor	edi, edi
	.p2align	4, 0x90
LBB171_433:
	movups	xmm0, xmmword ptr [rcx + 4*rdi]
	movups	xmm1, xmmword ptr [rcx + 4*rdi + 16]
	movups	xmm2, xmmword ptr [rdx + 4*rdi]
	movups	xmm3, xmmword ptr [rdx + 4*rdi + 16]
	movups	xmmword ptr [rcx + 4*rdi], xmm2
	movups	xmmword ptr [rcx + 4*rdi + 16], xmm3
	movups	xmmword ptr [rdx + 4*rdi], xmm0
	movups	xmmword ptr [rdx + 4*rdi + 16], xmm1
	movupd	xmm0, xmmword ptr [rcx + 4*rdi + 32]
	movdqu	xmm1, xmmword ptr [rcx + 4*rdi + 48]
	movups	xmm2, xmmword ptr [rdx + 4*rdi + 32]
	movups	xmm3, xmmword ptr [rdx + 4*rdi + 48]
	movups	xmmword ptr [rcx + 4*rdi + 32], xmm2
	movups	xmmword ptr [rcx + 4*rdi + 48], xmm3
	movupd	xmmword ptr [rdx + 4*rdi + 32], xmm0
	movdqu	xmmword ptr [rdx + 4*rdi + 48], xmm1
	add	rdi, 16
	add	rbx, -2
	jne	LBB171_433
	test	r8, r8
	je	LBB171_436
LBB171_435:
	movupd	xmm0, xmmword ptr [rcx + 4*rdi]
	movdqu	xmm1, xmmword ptr [rcx + 4*rdi + 16]
	movups	xmm2, xmmword ptr [rdx + 4*rdi]
	movups	xmm3, xmmword ptr [rdx + 4*rdi + 16]
	movups	xmmword ptr [rcx + 4*rdi], xmm2
	movups	xmmword ptr [rcx + 4*rdi + 16], xmm3
	movupd	xmmword ptr [rdx + 4*rdi], xmm0
	movdqu	xmmword ptr [rdx + 4*rdi + 16], xmm1
LBB171_436:
	cmp	rax, rsi
	jne	LBB171_427
LBB171_437:
Ltmp2503:
	lea	rdi, [rsp + 1704]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2504:
	mov	eax, dword ptr [rsp + 1744]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 1736]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 1728]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 1720]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 1704]
	mov	rcx, qword ptr [rsp + 1712]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 1696]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 1688]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 1680]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 1672]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 1656]
	mov	rcx, qword ptr [rsp + 1664]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2505:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2506:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2507:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2508:
	lea	rax, [rip + l___unnamed_34]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2509:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2510:
Ltmp2511:
	lea	rdi, [rsp + 1752]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2512:
	mov	rax, qword ptr [rsp + 456]
	cmp	rax, qword ptr [rsp + 568]
	jne	LBB171_1900
	test	rax, rax
	je	LBB171_458
	mov	rcx, qword ptr [rsp + 440]
	mov	rdx, qword ptr [rsp + 552]
	cmp	rax, 3
	jbe	LBB171_447
	lea	rsi, [rdx + 8*rax]
	cmp	rcx, rsi
	jae	LBB171_452
	lea	rsi, [rcx + 8*rax]
	cmp	rdx, rsi
	jae	LBB171_452
LBB171_447:
	xor	esi, esi
LBB171_448:
	mov	rdi, rsi
	test	al, 1
	je	LBB171_450
	mov	rdi, rsi
	or	rdi, 1
	mov	r8, qword ptr [rcx + 8*rsi]
	mov	rbx, qword ptr [rdx + 8*rsi]
	mov	qword ptr [rcx + 8*rsi], rbx
	mov	qword ptr [rdx + 8*rsi], r8
LBB171_450:
	or	rsi, 1
	cmp	rax, rsi
	je	LBB171_458
	.p2align	4, 0x90
LBB171_451:
	mov	rsi, qword ptr [rcx + 8*rdi]
	mov	rbx, qword ptr [rdx + 8*rdi]
	mov	qword ptr [rcx + 8*rdi], rbx
	mov	qword ptr [rdx + 8*rdi], rsi
	mov	rsi, qword ptr [rcx + 8*rdi + 8]
	mov	rbx, qword ptr [rdx + 8*rdi + 8]
	mov	qword ptr [rcx + 8*rdi + 8], rbx
	mov	qword ptr [rdx + 8*rdi + 8], rsi
	add	rdi, 2
	cmp	rax, rdi
	jne	LBB171_451
	jmp	LBB171_458
LBB171_452:
	mov	rsi, rax
	and	rsi, -4
	lea	rdi, [rsi - 4]
	mov	rbx, rdi
	shr	rbx, 2
	inc	rbx
	mov	r8d, ebx
	and	r8d, 1
	test	rdi, rdi
	je	LBB171_1783
	sub	rbx, r8
	xor	edi, edi
	.p2align	4, 0x90
LBB171_454:
	movups	xmm0, xmmword ptr [rcx + 8*rdi]
	movups	xmm1, xmmword ptr [rcx + 8*rdi + 16]
	movups	xmm2, xmmword ptr [rdx + 8*rdi]
	movups	xmm3, xmmword ptr [rdx + 8*rdi + 16]
	movups	xmmword ptr [rcx + 8*rdi], xmm2
	movups	xmmword ptr [rcx + 8*rdi + 16], xmm3
	movups	xmmword ptr [rdx + 8*rdi], xmm0
	movups	xmmword ptr [rdx + 8*rdi + 16], xmm1
	movupd	xmm0, xmmword ptr [rcx + 8*rdi + 32]
	movdqu	xmm1, xmmword ptr [rcx + 8*rdi + 48]
	movups	xmm2, xmmword ptr [rdx + 8*rdi + 32]
	movups	xmm3, xmmword ptr [rdx + 8*rdi + 48]
	movups	xmmword ptr [rcx + 8*rdi + 32], xmm2
	movups	xmmword ptr [rcx + 8*rdi + 48], xmm3
	movupd	xmmword ptr [rdx + 8*rdi + 32], xmm0
	movdqu	xmmword ptr [rdx + 8*rdi + 48], xmm1
	add	rdi, 8
	add	rbx, -2
	jne	LBB171_454
	test	r8, r8
	je	LBB171_457
LBB171_456:
	movupd	xmm0, xmmword ptr [rcx + 8*rdi]
	movdqu	xmm1, xmmword ptr [rcx + 8*rdi + 16]
	movups	xmm2, xmmword ptr [rdx + 8*rdi]
	movups	xmm3, xmmword ptr [rdx + 8*rdi + 16]
	movups	xmmword ptr [rcx + 8*rdi], xmm2
	movups	xmmword ptr [rcx + 8*rdi + 16], xmm3
	movupd	xmmword ptr [rdx + 8*rdi], xmm0
	movdqu	xmmword ptr [rdx + 8*rdi + 16], xmm1
LBB171_457:
	cmp	rax, rsi
	jne	LBB171_448
LBB171_458:
Ltmp2515:
	lea	rdi, [rsp + 1800]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2516:
	mov	eax, dword ptr [rsp + 1840]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 1832]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 1824]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 1816]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 1800]
	mov	rcx, qword ptr [rsp + 1808]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 1792]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 1784]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 1776]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 1768]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 1752]
	mov	rcx, qword ptr [rsp + 1760]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2517:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2518:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2519:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2520:
	lea	rax, [rip + l___unnamed_35]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2521:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2522:
Ltmp2523:
	lea	rdi, [rsp + 1848]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2524:
	mov	rdi, qword ptr [rsp + 536]
	xor	eax, eax
	mov	rcx, rdi
	.p2align	4, 0x90
LBB171_464:
	test	rcx, rcx
	je	LBB171_1794
	mov	rdx, rax
	or	rdx, 1
	cmp	rdx, rdi
	je	LBB171_1794
	mov	rdx, rax
	or	rdx, 2
	cmp	rdx, rdi
	je	LBB171_1794
	mov	rdx, rax
	or	rdx, 3
	cmp	rdx, rdi
	je	LBB171_1794
	mov	rdx, rax
	or	rdx, 4
	cmp	rdx, rdi
	je	LBB171_1794
	mov	rdx, rax
	or	rdx, 5
	cmp	rdx, rdi
	je	LBB171_1794
	mov	rdx, rax
	or	rdx, 6
	cmp	rdx, rdi
	je	LBB171_1794
	mov	rdx, rax
	or	rdx, 7
	cmp	rdx, rdi
	je	LBB171_1794
	add	rax, 8
	add	rcx, -8
	cmp	rax, 100000
	jne	LBB171_464
Ltmp2525:
	lea	rdi, [rsp + 1896]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2526:
	mov	eax, dword ptr [rsp + 1936]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 1928]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 1920]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 1912]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 1896]
	mov	rcx, qword ptr [rsp + 1904]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 1888]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 1880]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 1872]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 1864]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 1848]
	mov	rcx, qword ptr [rsp + 1856]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2527:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2528:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2529:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2530:
	lea	rax, [rip + l___unnamed_36]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2531:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2532:
Ltmp2533:
	lea	rdi, [rsp + 1944]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2534:
	mov	rsi, qword ptr [rsp + 536]
	mov	eax, esi
	and	eax, 15
	mov	rbx, rsi
	sub	rbx, rax
	jb	LBB171_1901
	cmp	rsi, rbx
	jb	LBB171_1902
	mov	r15, qword ptr [rsp + 520]
	mov	qword ptr [rsp + 256], 16
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rbx
	test	rbx, rbx
	je	LBB171_482
	mov	r14, rbx
	dec	r14
	shr	r14, 4
	inc	r14
	jmp	LBB171_483
LBB171_482:
	xor	r14d, r14d
LBB171_483:
Ltmp2535:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2536:
	mov	qword ptr [rsp + 128], 16
	mov	qword ptr [rsp + 136], r15
	mov	qword ptr [rsp + 144], rbx
Ltmp2537:
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 128]
	mov	r8d, 1
	mov	rsi, r14
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h9345e3cb89fa4930E
Ltmp2538:
Ltmp2539:
	lea	rdi, [rsp + 1992]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2540:
	mov	eax, dword ptr [rsp + 2032]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 2024]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 2016]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 2008]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 1992]
	mov	rcx, qword ptr [rsp + 2000]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 1984]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 1976]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 1968]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 1960]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 1944]
	mov	rcx, qword ptr [rsp + 1952]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2541:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2542:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2543:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2544:
	lea	rax, [rip + l___unnamed_37]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2545:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2546:
Ltmp2547:
	lea	rdi, [rsp + 2040]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2548:
	mov	rsi, qword ptr [rsp + 456]
	mov	eax, esi
	and	eax, 7
	mov	rbx, rsi
	sub	rbx, rax
	jb	LBB171_1903
	cmp	rsi, rbx
	jb	LBB171_1904
	mov	r15, qword ptr [rsp + 440]
	mov	qword ptr [rsp + 256], 8
	mov	qword ptr [rsp + 264], r15
	mov	qword ptr [rsp + 272], rbx
	test	rbx, rbx
	je	LBB171_494
	mov	r14, rbx
	dec	r14
	shr	r14, 3
	inc	r14
	jmp	LBB171_495
LBB171_494:
	xor	r14d, r14d
LBB171_495:
Ltmp2549:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2550:
	mov	qword ptr [rsp + 128], 8
	mov	qword ptr [rsp + 136], r15
	mov	qword ptr [rsp + 144], rbx
Ltmp2551:
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 128]
	mov	r8d, 1
	mov	rsi, r14
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h8bebf2fbcff93f77E
Ltmp2552:
Ltmp2553:
	lea	rdi, [rsp + 2088]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2554:
	mov	eax, dword ptr [rsp + 2128]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 2120]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 2112]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 2104]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 2088]
	mov	rcx, qword ptr [rsp + 2096]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 2080]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 2072]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 2064]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 2056]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 2040]
	mov	rcx, qword ptr [rsp + 2048]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2555:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2556:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2557:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2558:
	lea	rax, [rip + l___unnamed_38]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2559:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2560:
Ltmp2561:
	lea	rdi, [rsp + 2136]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2562:
Ltmp2563:
	lea	rdi, [rsp + 2184]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2564:
	mov	eax, dword ptr [rsp + 2224]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 2216]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 2208]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 2200]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 2184]
	mov	rcx, qword ptr [rsp + 2192]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 2176]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 2168]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 2160]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 2152]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 2136]
	mov	rcx, qword ptr [rsp + 2144]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2565:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2566:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2567:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2568:
	lea	rax, [rip + l___unnamed_39]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2569:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2570:
Ltmp2571:
	lea	rdi, [rsp + 2232]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2572:
Ltmp2573:
	lea	rdi, [rsp + 2280]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2574:
	mov	eax, dword ptr [rsp + 2320]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 2312]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 2304]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 2296]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 2280]
	mov	rcx, qword ptr [rsp + 2288]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 2272]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 2264]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 2256]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 2248]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 2232]
	mov	rcx, qword ptr [rsp + 2240]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2575:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2576:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2577:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2578:
	lea	rax, [rip + l___unnamed_40]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2579:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2580:
Ltmp2581:
	lea	rdi, [rsp + 2328]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2582:
	mov	r14, qword ptr [rsp + 616]
	mov	ebx, r14d
	and	ebx, 15
	mov	r12, r14
	sub	r12, rbx
	jb	LBB171_1905
	cmp	r14, r12
	jb	LBB171_1906
	mov	r13, qword ptr [rsp + 600]
	mov	qword ptr [rsp + 256], 16
	mov	qword ptr [rsp + 264], r13
	mov	qword ptr [rsp + 272], r12
	test	r12, r12
	je	LBB171_516
	lea	r15, [r12 - 1]
	shr	r15, 4
	inc	r15
	jmp	LBB171_517
LBB171_516:
	xor	r15d, r15d
LBB171_517:
Ltmp2583:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2584:
	mov	qword ptr [rsp + 128], 16
	mov	qword ptr [rsp + 136], r13
	mov	qword ptr [rsp + 144], r12
Ltmp2585:
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 128]
	mov	r8d, 1
	mov	rsi, r15
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h1013a109747a48f3E
Ltmp2586:
	test	rbx, rbx
	je	LBB171_524
	cmp	r12, r14
	jae	LBB171_524
	movdqa	xmm0, xmmword ptr [rsp + 96]
	movdqa	xmm1, xmmword ptr [rsp + 112]
	paddd	xmm0, xmmword ptr [rsp + 64]
	paddd	xmm1, xmmword ptr [rsp + 80]
	paddd	xmm1, xmm0
	pshufd	xmm0, xmm1, 78
	paddd	xmm0, xmm1
	pshufd	xmm1, xmm0, 229
	paddd	xmm1, xmm0
	movd	eax, xmm1
	neg	rbx
	lea	rcx, [r13 + 4*r14]
	.p2align	4, 0x90
LBB171_522:
	add	eax, dword ptr [rcx + 4*rbx]
	jb	LBB171_1881
	inc	rbx
	jne	LBB171_522
LBB171_524:
Ltmp2587:
	lea	rdi, [rsp + 2376]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2588:
	mov	eax, dword ptr [rsp + 2416]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 2408]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 2400]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 2392]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 2376]
	mov	rcx, qword ptr [rsp + 2384]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 2368]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 2360]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 2352]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 2344]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 2328]
	mov	rcx, qword ptr [rsp + 2336]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2589:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2590:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2591:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2592:
	lea	rax, [rip + l___unnamed_41]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2593:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2594:
Ltmp2595:
	lea	rdi, [rsp + 2424]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2596:
	mov	r14, qword ptr [rsp + 640]
	mov	r13d, r14d
	and	r13d, 7
	mov	r15, r14
	sub	r15, r13
	jb	LBB171_1907
	cmp	r14, r15
	jb	LBB171_1908
	mov	r12, qword ptr [rsp + 624]
	mov	qword ptr [rsp + 256], 8
	mov	qword ptr [rsp + 264], r12
	mov	qword ptr [rsp + 272], r15
	test	r15, r15
	je	LBB171_533
	lea	rbx, [r15 - 1]
	shr	rbx, 3
	inc	rbx
	jmp	LBB171_534
LBB171_533:
	xor	ebx, ebx
LBB171_534:
Ltmp2597:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2598:
	mov	qword ptr [rsp + 128], 8
	mov	qword ptr [rsp + 136], r12
	mov	qword ptr [rsp + 144], r15
Ltmp2599:
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 128]
	mov	r8d, 1
	mov	rsi, rbx
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf8f8293b3b524e6eE
Ltmp2600:
	test	r13, r13
	je	LBB171_551
	cmp	r15, r14
	jae	LBB171_551
	movdqa	xmm0, xmmword ptr [rsp + 96]
	movdqa	xmm1, xmmword ptr [rsp + 112]
	paddq	xmm0, xmmword ptr [rsp + 64]
	paddq	xmm1, xmmword ptr [rsp + 80]
	paddq	xmm1, xmm0
	pshufd	xmm0, xmm1, 78
	paddq	xmm0, xmm1
	movq	rax, xmm0
	add	rax, qword ptr [r12 + 8*r15]
	jb	LBB171_1909
	lea	rcx, [r15 + 1]
	cmp	rcx, r14
	je	LBB171_551
	add	rax, qword ptr [r12 + 8*r15 + 8]
	jb	LBB171_1909
	lea	rcx, [r15 + 2]
	cmp	rcx, r14
	je	LBB171_551
	add	rax, qword ptr [r12 + 8*r15 + 16]
	jb	LBB171_1909
	lea	rcx, [r15 + 3]
	cmp	rcx, r14
	je	LBB171_551
	add	rax, qword ptr [r12 + 8*r15 + 24]
	jb	LBB171_1909
	lea	rcx, [r15 + 4]
	cmp	rcx, r14
	je	LBB171_551
	add	rax, qword ptr [r12 + 8*r15 + 32]
	jb	LBB171_1909
	lea	rcx, [r15 + 5]
	cmp	rcx, r14
	je	LBB171_551
	add	rax, qword ptr [r12 + 8*r15 + 40]
	jb	LBB171_1909
	mov	rcx, r15
	add	rcx, 6
	cmp	rcx, r14
	je	LBB171_551
	add	rax, qword ptr [r12 + 8*r15 + 48]
	jb	LBB171_1909
LBB171_551:
Ltmp2601:
	lea	rdi, [rsp + 2472]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2602:
	mov	eax, dword ptr [rsp + 2512]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 2504]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 2496]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 2488]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 2472]
	mov	rcx, qword ptr [rsp + 2480]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 2464]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 2456]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 2448]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 2440]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 2424]
	mov	rcx, qword ptr [rsp + 2432]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2603:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2604:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2605:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2606:
	lea	rax, [rip + l___unnamed_42]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2607:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2608:
Ltmp2609:
	lea	rdi, [rsp + 2520]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2610:
Ltmp2611:
	lea	rdi, [rsp + 2568]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2612:
	mov	eax, dword ptr [rsp + 2608]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 2600]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 2592]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 2584]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 2568]
	mov	rcx, qword ptr [rsp + 2576]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 2560]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 2552]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 2544]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 2536]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 2520]
	mov	rcx, qword ptr [rsp + 2528]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2613:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2614:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2615:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2616:
	lea	rax, [rip + l___unnamed_43]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2617:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2618:
Ltmp2619:
	lea	rdi, [rsp + 2616]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2620:
Ltmp2621:
	lea	rdi, [rsp + 2664]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2622:
	mov	eax, dword ptr [rsp + 2704]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 2696]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 2688]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 2680]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 2664]
	mov	rcx, qword ptr [rsp + 2672]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 2656]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 2648]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 2640]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 2632]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 2616]
	mov	rcx, qword ptr [rsp + 2624]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2623:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2624:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2625:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2626:
	lea	rax, [rip + l___unnamed_44]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2627:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2628:
Ltmp2629:
	lea	rdi, [rsp + 2712]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2630:
	mov	r14, qword ptr [rsp + 664]
	mov	ebx, r14d
	and	ebx, 15
	mov	r12, r14
	sub	r12, rbx
	jb	LBB171_1910
	cmp	r14, r12
	jb	LBB171_1911
	mov	r13, qword ptr [rsp + 648]
	mov	qword ptr [rsp + 256], 16
	mov	qword ptr [rsp + 264], r13
	mov	qword ptr [rsp + 272], r12
	test	r12, r12
	je	LBB171_570
	lea	r15, [r12 - 1]
	shr	r15, 4
	inc	r15
	jmp	LBB171_571
LBB171_570:
	xor	r15d, r15d
LBB171_571:
Ltmp2631:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2632:
	mov	qword ptr [rsp + 128], 16
	mov	qword ptr [rsp + 136], r13
	mov	qword ptr [rsp + 144], r12
Ltmp2633:
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 128]
	mov	r8d, 1
	mov	rsi, r15
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7e7cdc163fa85702E
Ltmp2634:
	test	rbx, rbx
	je	LBB171_578
	cmp	r12, r14
	jae	LBB171_578
	movdqa	xmm0, xmmword ptr [rsp + 96]
	movdqa	xmm1, xmmword ptr [rsp + 112]
	paddd	xmm0, xmmword ptr [rsp + 64]
	paddd	xmm1, xmmword ptr [rsp + 80]
	paddd	xmm1, xmm0
	pshufd	xmm0, xmm1, 78
	paddd	xmm0, xmm1
	pshufd	xmm1, xmm0, 229
	paddd	xmm1, xmm0
	movd	eax, xmm1
	neg	rbx
	lea	rcx, [r13 + 4*r14]
	.p2align	4, 0x90
LBB171_576:
	add	eax, dword ptr [rcx + 4*rbx]
	jo	LBB171_1882
	inc	rbx
	jne	LBB171_576
LBB171_578:
Ltmp2635:
	lea	rdi, [rsp + 2760]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2636:
	mov	eax, dword ptr [rsp + 2800]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 2792]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 2784]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 2776]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 2760]
	mov	rcx, qword ptr [rsp + 2768]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 2752]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 2744]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 2736]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 2728]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 2712]
	mov	rcx, qword ptr [rsp + 2720]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2637:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2638:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2639:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2640:
	lea	rax, [rip + l___unnamed_45]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2641:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2642:
Ltmp2643:
	lea	rdi, [rsp + 2808]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2644:
	mov	r14, qword ptr [rsp + 688]
	mov	r13d, r14d
	and	r13d, 7
	mov	r15, r14
	sub	r15, r13
	jb	LBB171_1912
	cmp	r14, r15
	jb	LBB171_1913
	mov	r12, qword ptr [rsp + 672]
	mov	qword ptr [rsp + 256], 8
	mov	qword ptr [rsp + 264], r12
	mov	qword ptr [rsp + 272], r15
	test	r15, r15
	je	LBB171_587
	lea	rbx, [r15 - 1]
	shr	rbx, 3
	inc	rbx
	jmp	LBB171_588
LBB171_587:
	xor	ebx, ebx
LBB171_588:
Ltmp2645:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2646:
	mov	qword ptr [rsp + 128], 8
	mov	qword ptr [rsp + 136], r12
	mov	qword ptr [rsp + 144], r15
Ltmp2647:
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 128]
	mov	r8d, 1
	mov	rsi, rbx
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h88562aaf0f422f1dE
Ltmp2648:
	test	r13, r13
	je	LBB171_605
	cmp	r15, r14
	jae	LBB171_605
	movdqa	xmm0, xmmword ptr [rsp + 96]
	movdqa	xmm1, xmmword ptr [rsp + 112]
	paddq	xmm0, xmmword ptr [rsp + 64]
	paddq	xmm1, xmmword ptr [rsp + 80]
	paddq	xmm1, xmm0
	pshufd	xmm0, xmm1, 78
	paddq	xmm0, xmm1
	movq	rax, xmm0
	add	rax, qword ptr [r12 + 8*r15]
	jo	LBB171_1914
	lea	rcx, [r15 + 1]
	cmp	rcx, r14
	je	LBB171_605
	add	rax, qword ptr [r12 + 8*r15 + 8]
	jo	LBB171_1914
	lea	rcx, [r15 + 2]
	cmp	rcx, r14
	je	LBB171_605
	add	rax, qword ptr [r12 + 8*r15 + 16]
	jo	LBB171_1914
	lea	rcx, [r15 + 3]
	cmp	rcx, r14
	je	LBB171_605
	add	rax, qword ptr [r12 + 8*r15 + 24]
	jo	LBB171_1914
	lea	rcx, [r15 + 4]
	cmp	rcx, r14
	je	LBB171_605
	add	rax, qword ptr [r12 + 8*r15 + 32]
	jo	LBB171_1914
	lea	rcx, [r15 + 5]
	cmp	rcx, r14
	je	LBB171_605
	add	rax, qword ptr [r12 + 8*r15 + 40]
	jo	LBB171_1914
	mov	rcx, r15
	add	rcx, 6
	cmp	rcx, r14
	je	LBB171_605
	add	rax, qword ptr [r12 + 8*r15 + 48]
	jo	LBB171_1914
LBB171_605:
Ltmp2649:
	lea	rdi, [rsp + 2856]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2650:
	mov	eax, dword ptr [rsp + 2896]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 2888]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 2880]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 2872]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 2856]
	mov	rcx, qword ptr [rsp + 2864]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 2848]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 2840]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 2832]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 2824]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 2808]
	mov	rcx, qword ptr [rsp + 2816]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2651:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2652:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2653:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2654:
	lea	rax, [rip + l___unnamed_46]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2655:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2656:
Ltmp2657:
	lea	rdi, [rsp + 2904]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2658:
	mov	r14, qword ptr [rsp + 712]
	mov	r13d, r14d
	and	r13d, 7
	mov	r15, r14
	sub	r15, r13
	jb	LBB171_1915
	cmp	r14, r15
	jb	LBB171_1916
	mov	r12, qword ptr [rsp + 696]
	mov	qword ptr [rsp + 256], 8
	mov	qword ptr [rsp + 264], r12
	mov	qword ptr [rsp + 272], r15
	test	r15, r15
	je	LBB171_614
	lea	rbx, [r15 - 1]
	shr	rbx, 3
	inc	rbx
	jmp	LBB171_615
LBB171_614:
	xor	ebx, ebx
LBB171_615:
Ltmp2659:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2660:
	mov	qword ptr [rsp + 128], 8
	mov	qword ptr [rsp + 136], r12
	mov	qword ptr [rsp + 144], r15
Ltmp2661:
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 128]
	mov	r8d, 1
	mov	rsi, rbx
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hce15a800f10f4e33E
Ltmp2662:
	test	r13, r13
	je	LBB171_632
	cmp	r15, r14
	jae	LBB171_632
	movdqa	xmm0, xmmword ptr [rsp + 96]
	movdqa	xmm1, xmmword ptr [rsp + 112]
	paddq	xmm0, xmmword ptr [rsp + 64]
	paddq	xmm1, xmmword ptr [rsp + 80]
	paddq	xmm1, xmm0
	pshufd	xmm0, xmm1, 78
	paddq	xmm0, xmm1
	movq	rax, xmm0
	add	rax, qword ptr [r12 + 8*r15]
	jb	LBB171_1917
	lea	rcx, [r15 + 1]
	cmp	rcx, r14
	je	LBB171_632
	add	rax, qword ptr [r12 + 8*r15 + 8]
	jb	LBB171_1917
	lea	rcx, [r15 + 2]
	cmp	rcx, r14
	je	LBB171_632
	add	rax, qword ptr [r12 + 8*r15 + 16]
	jb	LBB171_1917
	lea	rcx, [r15 + 3]
	cmp	rcx, r14
	je	LBB171_632
	add	rax, qword ptr [r12 + 8*r15 + 24]
	jb	LBB171_1917
	lea	rcx, [r15 + 4]
	cmp	rcx, r14
	je	LBB171_632
	add	rax, qword ptr [r12 + 8*r15 + 32]
	jb	LBB171_1917
	lea	rcx, [r15 + 5]
	cmp	rcx, r14
	je	LBB171_632
	add	rax, qword ptr [r12 + 8*r15 + 40]
	jb	LBB171_1917
	mov	rcx, r15
	add	rcx, 6
	cmp	rcx, r14
	je	LBB171_632
	add	rax, qword ptr [r12 + 8*r15 + 48]
	jb	LBB171_1917
LBB171_632:
Ltmp2663:
	lea	rdi, [rsp + 2952]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2664:
	mov	eax, dword ptr [rsp + 2992]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 2984]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 2976]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 2968]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 2952]
	mov	rcx, qword ptr [rsp + 2960]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 2944]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 2936]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 2928]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 2920]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 2904]
	mov	rcx, qword ptr [rsp + 2912]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2665:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2666:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2667:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2668:
	lea	rax, [rip + l___unnamed_47]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2669:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2670:
Ltmp2671:
	lea	rdi, [rsp + 3000]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2672:
	mov	rdi, qword ptr [rsp + 536]
	mov	rsi, qword ptr [rsp + 480]
	mov	rcx, rdi
	neg	rcx
	mov	rax, -1
	.p2align	4, 0x90
LBB171_638:
	cmp	rax, 99999
	je	LBB171_642
	lea	rdx, [rcx + rax]
	cmp	rdx, -1
	je	LBB171_1816
	inc	rax
	cmp	rsi, rax
	jne	LBB171_638
Ltmp2673:
	lea	rdx, [rip + l___unnamed_48]
	mov	rdi, rax
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp2674:
	jmp	LBB171_1796
LBB171_642:
Ltmp2677:
	lea	rdi, [rsp + 3048]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2678:
	mov	eax, dword ptr [rsp + 3088]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 3080]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 3072]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 3064]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 3048]
	mov	rcx, qword ptr [rsp + 3056]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 3040]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 3032]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 3024]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 3016]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 3000]
	mov	rcx, qword ptr [rsp + 3008]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2679:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2680:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2681:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2682:
	lea	rax, [rip + l___unnamed_49]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2683:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2684:
Ltmp2685:
	lea	rdi, [rsp + 3096]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2686:
	mov	r14, qword ptr [rsp + 536]
	cmp	r14, qword ptr [rsp + 480]
	jne	LBB171_1918
	mov	eax, r14d
	and	eax, 15
	mov	r15, r14
	sub	r15, rax
	jb	LBB171_1919
	cmp	r14, r15
	jb	LBB171_1920
	mov	r13, qword ptr [rsp + 520]
	mov	r12, qword ptr [rsp + 464]
	mov	qword ptr [rsp + 1144], 16
	mov	qword ptr [rsp + 1152], r13
	mov	qword ptr [rsp + 1160], r15
	mov	qword ptr [rsp + 1168], 16
	mov	qword ptr [rsp + 1176], r12
	mov	qword ptr [rsp + 1184], r14
	test	r15, r15
	je	LBB171_653
	mov	rbx, r15
	dec	rbx
	shr	rbx, 4
	inc	rbx
	test	r14, r14
	je	LBB171_654
LBB171_652:
	lea	rax, [r14 - 1]
	shr	rax, 4
	inc	rax
	jmp	LBB171_655
LBB171_653:
	xor	ebx, ebx
	test	r14, r14
	jne	LBB171_652
LBB171_654:
	xor	eax, eax
LBB171_655:
	cmp	rbx, rax
	cmova	rbx, rax
	mov	qword ptr [rsp + 1208], rbx
	lea	rax, [rsp + 1144]
	mov	qword ptr [rsp + 1216], rax
	mov	qword ptr [rsp + 1224], 16
	mov	qword ptr [rsp + 1232], r12
	mov	qword ptr [rsp + 1240], r14
	mov	qword ptr [rsp + 256], 16
	mov	qword ptr [rsp + 264], r13
	mov	qword ptr [rsp + 272], r15
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 280], rcx
	mov	qword ptr [rsp + 288], rbx
	mov	qword ptr [rsp + 296], rax
Ltmp2689:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2690:
	mov	qword ptr [rsp + 64], 16
	mov	qword ptr [rsp + 72], r13
	mov	qword ptr [rsp + 80], r15
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 88], rcx
	mov	qword ptr [rsp + 96], 16
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp + 120], rcx
Ltmp2691:
	lea	rcx, [rsp + 1144]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 128]
	lea	r9, [rsp + 64]
	mov	r8d, 1
	mov	rsi, rbx
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17ha2f99a0eebe114e4E
Ltmp2692:
Ltmp2693:
	lea	rdi, [rsp + 3144]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2694:
	mov	eax, dword ptr [rsp + 3184]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 3176]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 3168]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 3160]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 3144]
	mov	rcx, qword ptr [rsp + 3152]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 3136]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 3128]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 3120]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 3112]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 3096]
	mov	rcx, qword ptr [rsp + 3104]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2695:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2696:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2697:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2698:
	lea	rax, [rip + l___unnamed_50]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2699:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2700:
Ltmp2701:
	lea	rdi, [rsp + 3192]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2702:
	mov	r14, qword ptr [rsp + 456]
	cmp	r14, qword ptr [rsp + 568]
	jne	LBB171_1921
	mov	eax, r14d
	and	eax, 7
	mov	r15, r14
	sub	r15, rax
	jb	LBB171_1922
	cmp	r14, r15
	jb	LBB171_1923
	mov	r13, qword ptr [rsp + 440]
	mov	r12, qword ptr [rsp + 552]
	mov	qword ptr [rsp + 1144], 8
	mov	qword ptr [rsp + 1152], r13
	mov	qword ptr [rsp + 1160], r15
	mov	qword ptr [rsp + 1168], 8
	mov	qword ptr [rsp + 1176], r12
	mov	qword ptr [rsp + 1184], r14
	test	r15, r15
	je	LBB171_668
	mov	rbx, r15
	dec	rbx
	shr	rbx, 3
	inc	rbx
	test	r14, r14
	je	LBB171_669
LBB171_667:
	lea	rax, [r14 - 1]
	shr	rax, 3
	inc	rax
	jmp	LBB171_670
LBB171_668:
	xor	ebx, ebx
	test	r14, r14
	jne	LBB171_667
LBB171_669:
	xor	eax, eax
LBB171_670:
	cmp	rbx, rax
	cmova	rbx, rax
	mov	qword ptr [rsp + 1208], rbx
	lea	rax, [rsp + 1144]
	mov	qword ptr [rsp + 1216], rax
	mov	qword ptr [rsp + 1224], 8
	mov	qword ptr [rsp + 1232], r12
	mov	qword ptr [rsp + 1240], r14
	mov	qword ptr [rsp + 256], 8
	mov	qword ptr [rsp + 264], r13
	mov	qword ptr [rsp + 272], r15
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 280], rcx
	mov	qword ptr [rsp + 288], rbx
	mov	qword ptr [rsp + 296], rax
Ltmp2705:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2706:
	mov	qword ptr [rsp + 64], 8
	mov	qword ptr [rsp + 72], r13
	mov	qword ptr [rsp + 80], r15
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 88], rcx
	mov	qword ptr [rsp + 96], 8
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp + 120], rcx
Ltmp2707:
	lea	rcx, [rsp + 1144]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 128]
	lea	r9, [rsp + 64]
	mov	r8d, 1
	mov	rsi, rbx
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h88adf7442447d004E
Ltmp2708:
Ltmp2709:
	lea	rdi, [rsp + 3240]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2710:
	mov	eax, dword ptr [rsp + 3280]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 3272]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 3264]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 3256]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 3240]
	mov	rcx, qword ptr [rsp + 3248]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 3232]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 3224]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 3216]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 3208]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 3192]
	mov	rcx, qword ptr [rsp + 3200]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2711:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2712:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2713:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2714:
	lea	rax, [rip + l___unnamed_51]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2715:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2716:
Ltmp2717:
	lea	rdi, [rsp + 3288]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2718:
Ltmp2719:
	lea	rdi, [rsp + 3336]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2720:
	mov	eax, dword ptr [rsp + 3376]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 3368]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 3360]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 3352]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 3336]
	mov	rcx, qword ptr [rsp + 3344]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 3328]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 3320]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 3312]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 3304]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 3288]
	mov	rcx, qword ptr [rsp + 3296]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2721:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2722:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2723:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2724:
	lea	rax, [rip + l___unnamed_52]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2725:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2726:
Ltmp2727:
	lea	rdi, [rsp + 3384]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2728:
Ltmp2729:
	lea	rdi, [rsp + 3432]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2730:
	mov	eax, dword ptr [rsp + 3472]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 3464]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 3456]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 3448]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 3432]
	mov	rcx, qword ptr [rsp + 3440]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 3424]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 3416]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 3408]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 3400]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 3384]
	mov	rcx, qword ptr [rsp + 3392]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2731:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2732:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2733:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2734:
	lea	rax, [rip + l___unnamed_53]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2735:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2736:
Ltmp2737:
	lea	rdi, [rsp + 3480]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2738:
	mov	r12, qword ptr [rsp + 616]
	cmp	r12, qword ptr [rsp + 760]
	jne	LBB171_1924
	mov	ebx, r12d
	and	ebx, 15
	mov	r14, r12
	sub	r14, rbx
	jb	LBB171_1925
	cmp	r12, r14
	jb	LBB171_1926
	mov	rcx, qword ptr [rsp + 600]
	mov	r13, qword ptr [rsp + 744]
	mov	qword ptr [rsp + 1144], 16
	mov	qword ptr [rsp + 1152], rcx
	mov	qword ptr [rsp + 1160], r14
	mov	qword ptr [rsp + 1168], 16
	mov	qword ptr [rsp + 1176], r13
	mov	qword ptr [rsp + 1184], r12
	test	r14, r14
	je	LBB171_693
	lea	r15, [r14 - 1]
	shr	r15, 4
	inc	r15
	test	r12, r12
	je	LBB171_694
LBB171_692:
	lea	rax, [r12 - 1]
	shr	rax, 4
	inc	rax
	jmp	LBB171_695
LBB171_693:
	xor	r15d, r15d
	test	r12, r12
	jne	LBB171_692
LBB171_694:
	xor	eax, eax
LBB171_695:
	cmp	r15, rax
	cmova	r15, rax
	mov	qword ptr [rsp + 1208], r15
	lea	rax, [rsp + 1144]
	mov	qword ptr [rsp + 1216], rax
	mov	qword ptr [rsp + 1224], 16
	mov	qword ptr [rsp + 1232], r13
	mov	qword ptr [rsp + 1240], r12
	mov	qword ptr [rsp + 256], 16
	mov	qword ptr [rsp + 264], rcx
	mov	qword ptr [rsp + 272], r14
	mov	qword ptr [rsp + 240], rcx
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 280], rcx
	mov	qword ptr [rsp + 288], r15
	mov	qword ptr [rsp + 296], rax
Ltmp2741:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2742:
	mov	qword ptr [rsp + 64], 16
	mov	rcx, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 80], r14
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 88], rcx
	mov	qword ptr [rsp + 96], 16
	mov	qword ptr [rsp + 104], r13
	mov	qword ptr [rsp + 112], r12
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp + 120], rcx
Ltmp2743:
	lea	rcx, [rsp + 1144]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 128]
	lea	r9, [rsp + 64]
	mov	r8d, 1
	mov	rsi, r15
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h0ffe93cfb7fb0572E
Ltmp2744:
	mov	rax, r13
	mov	r13, qword ptr [rsp + 240]
	test	rbx, rbx
	je	LBB171_704
	cmp	r14, r12
	jae	LBB171_704
	movdqa	xmm0, xmmword ptr [rsp + 160]
	paddd	xmm0, xmmword ptr [rsp + 128]
	movdqa	xmm1, xmmword ptr [rsp + 176]
	paddd	xmm1, xmmword ptr [rsp + 144]
	paddd	xmm1, xmm0
	pshufd	xmm0, xmm1, 78
	paddd	xmm0, xmm1
	pshufd	xmm1, xmm0, 229
	paddd	xmm1, xmm0
	movd	ecx, xmm1
	lea	r8, [rax + 4*r12]
	neg	rbx
	lea	rsi, [r13 + 4*r12]
	.p2align	4, 0x90
LBB171_700:
	mov	rdi, r12
	add	rdi, rbx
	jae	LBB171_1883
	mov	eax, dword ptr [rsi + 4*rbx]
	mul	dword ptr [r8 + 4*rbx]
	jo	LBB171_1884
	add	ecx, eax
	jb	LBB171_1885
	inc	rbx
	jne	LBB171_700
LBB171_704:
Ltmp2747:
	lea	rdi, [rsp + 3528]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2748:
	mov	eax, dword ptr [rsp + 3568]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 3560]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 3552]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 3544]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 3528]
	mov	rcx, qword ptr [rsp + 3536]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 3520]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 3512]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 3504]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 3496]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 3480]
	mov	rcx, qword ptr [rsp + 3488]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2749:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2750:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2751:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2752:
	lea	rax, [rip + l___unnamed_54]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2753:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2754:
Ltmp2755:
	lea	rdi, [rsp + 3576]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2756:
	mov	r14, qword ptr [rsp + 640]
	cmp	r14, qword ptr [rsp + 784]
	jne	LBB171_1927
	mov	eax, r14d
	and	eax, 7
	mov	r15, r14
	sub	r15, rax
	jb	LBB171_1928
	cmp	r14, r15
	jb	LBB171_1929
	mov	r13, qword ptr [rsp + 624]
	mov	r12, qword ptr [rsp + 768]
	mov	qword ptr [rsp + 1144], 8
	mov	qword ptr [rsp + 1152], r13
	mov	qword ptr [rsp + 1160], r15
	mov	qword ptr [rsp + 1168], 8
	mov	qword ptr [rsp + 1176], r12
	mov	qword ptr [rsp + 1184], r14
	test	r15, r15
	je	LBB171_715
	lea	rbx, [r15 - 1]
	shr	rbx, 3
	inc	rbx
	mov	qword ptr [rsp + 240], rax
	test	r14, r14
	je	LBB171_716
LBB171_714:
	lea	rax, [r14 - 1]
	shr	rax, 3
	inc	rax
	jmp	LBB171_717
LBB171_715:
	xor	ebx, ebx
	mov	qword ptr [rsp + 240], rax
	test	r14, r14
	jne	LBB171_714
LBB171_716:
	xor	eax, eax
LBB171_717:
	cmp	rbx, rax
	cmova	rbx, rax
	mov	qword ptr [rsp + 1208], rbx
	lea	rax, [rsp + 1144]
	mov	qword ptr [rsp + 1216], rax
	mov	qword ptr [rsp + 1224], 8
	mov	qword ptr [rsp + 1232], r12
	mov	qword ptr [rsp + 1240], r14
	mov	qword ptr [rsp + 256], 8
	mov	qword ptr [rsp + 264], r13
	mov	qword ptr [rsp + 272], r15
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 280], rcx
	mov	qword ptr [rsp + 288], rbx
	mov	qword ptr [rsp + 296], rax
Ltmp2759:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2760:
	mov	qword ptr [rsp + 64], 8
	mov	qword ptr [rsp + 72], r13
	mov	qword ptr [rsp + 80], r15
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 88], rcx
	mov	qword ptr [rsp + 96], 8
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp + 120], rcx
Ltmp2761:
	lea	rcx, [rsp + 1144]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 128]
	lea	r9, [rsp + 64]
	mov	r8d, 1
	mov	rsi, rbx
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h134d0549b874d7b0E
Ltmp2762:
	cmp	qword ptr [rsp + 240], 0
	je	LBB171_747
	cmp	r15, r14
	jae	LBB171_747
	mov	rax, qword ptr [r13 + 8*r15]
	mul	qword ptr [r12 + 8*r15]
	jo	LBB171_1930
	movdqa	xmm0, xmmword ptr [rsp + 160]
	paddq	xmm0, xmmword ptr [rsp + 128]
	movdqa	xmm1, xmmword ptr [rsp + 176]
	paddq	xmm1, xmmword ptr [rsp + 144]
	paddq	xmm1, xmm0
	pshufd	xmm0, xmm1, 78
	paddq	xmm0, xmm1
	movq	rcx, xmm0
	add	rcx, rax
	jb	LBB171_1931
	lea	rdi, [r15 + 1]
	cmp	rdi, r14
	je	LBB171_747
	cmp	r14, rdi
	jbe	LBB171_1967
	mov	rax, qword ptr [r13 + 8*r15 + 8]
	mul	qword ptr [r12 + 8*r15 + 8]
	jo	LBB171_1930
	add	rcx, rax
	jb	LBB171_1931
	lea	rdi, [r15 + 2]
	cmp	rdi, r14
	je	LBB171_747
	cmp	r14, rdi
	jbe	LBB171_1967
	mov	rax, qword ptr [r13 + 8*r15 + 16]
	mul	qword ptr [r12 + 8*r15 + 16]
	jo	LBB171_1930
	add	rcx, rax
	jb	LBB171_1931
	lea	rdi, [r15 + 3]
	cmp	rdi, r14
	je	LBB171_747
	cmp	r14, rdi
	jbe	LBB171_1967
	mov	rax, qword ptr [r13 + 8*r15 + 24]
	mul	qword ptr [r12 + 8*r15 + 24]
	jo	LBB171_1930
	add	rcx, rax
	jb	LBB171_1931
	lea	rdi, [r15 + 4]
	cmp	rdi, r14
	je	LBB171_747
	cmp	r14, rdi
	jbe	LBB171_1967
	mov	rax, qword ptr [r13 + 8*r15 + 32]
	mul	qword ptr [r12 + 8*r15 + 32]
	jo	LBB171_1930
	add	rcx, rax
	jb	LBB171_1931
	lea	rdi, [r15 + 5]
	cmp	rdi, r14
	je	LBB171_747
	cmp	r14, rdi
	jbe	LBB171_1967
	mov	rax, qword ptr [r13 + 8*r15 + 40]
	mul	qword ptr [r12 + 8*r15 + 40]
	jo	LBB171_1930
	add	rcx, rax
	jb	LBB171_1931
	mov	rdi, r15
	add	rdi, 6
	cmp	rdi, r14
	je	LBB171_747
	cmp	r14, rdi
	jbe	LBB171_1967
	mov	rax, qword ptr [r13 + 8*r15 + 48]
	mul	qword ptr [r12 + 8*r15 + 48]
	jo	LBB171_1930
	add	rcx, rax
	jb	LBB171_1931
LBB171_747:
Ltmp2765:
	lea	rdi, [rsp + 3624]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2766:
	mov	eax, dword ptr [rsp + 3664]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 3656]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 3648]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 3640]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 3624]
	mov	rcx, qword ptr [rsp + 3632]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 3616]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 3608]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 3600]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 3592]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 3576]
	mov	rcx, qword ptr [rsp + 3584]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2767:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2768:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2769:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2770:
	lea	rax, [rip + l___unnamed_55]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2771:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2772:
Ltmp2773:
	lea	rdi, [rsp + 3672]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2774:
Ltmp2775:
	lea	rdi, [rsp + 3720]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2776:
	mov	eax, dword ptr [rsp + 3760]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 3752]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 3744]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 3736]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 3720]
	mov	rcx, qword ptr [rsp + 3728]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 3712]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 3704]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 3696]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 3688]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 3672]
	mov	rcx, qword ptr [rsp + 3680]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2777:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2778:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2779:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2780:
	lea	rax, [rip + l___unnamed_56]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2781:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2782:
Ltmp2783:
	lea	rdi, [rsp + 3768]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2784:
Ltmp2785:
	lea	rdi, [rsp + 3816]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2786:
	mov	eax, dword ptr [rsp + 3856]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 3848]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 3840]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 3832]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 3816]
	mov	rcx, qword ptr [rsp + 3824]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 3808]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 3800]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 3792]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 3784]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 3768]
	mov	rcx, qword ptr [rsp + 3776]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2787:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2788:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2789:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2790:
	lea	rax, [rip + l___unnamed_57]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2791:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2792:
Ltmp2793:
	lea	rdi, [rsp + 3864]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2794:
	mov	r12, qword ptr [rsp + 664]
	cmp	r12, qword ptr [rsp + 808]
	jne	LBB171_1932
	mov	ebx, r12d
	and	ebx, 15
	mov	r14, r12
	sub	r14, rbx
	jb	LBB171_1933
	cmp	r12, r14
	jb	LBB171_1934
	mov	rcx, qword ptr [rsp + 648]
	mov	r13, qword ptr [rsp + 792]
	mov	qword ptr [rsp + 1144], 16
	mov	qword ptr [rsp + 1152], rcx
	mov	qword ptr [rsp + 1160], r14
	mov	qword ptr [rsp + 1168], 16
	mov	qword ptr [rsp + 1176], r13
	mov	qword ptr [rsp + 1184], r12
	test	r14, r14
	je	LBB171_768
	lea	r15, [r14 - 1]
	shr	r15, 4
	inc	r15
	test	r12, r12
	je	LBB171_769
LBB171_767:
	lea	rax, [r12 - 1]
	shr	rax, 4
	inc	rax
	jmp	LBB171_770
LBB171_768:
	xor	r15d, r15d
	test	r12, r12
	jne	LBB171_767
LBB171_769:
	xor	eax, eax
LBB171_770:
	cmp	r15, rax
	cmova	r15, rax
	mov	qword ptr [rsp + 1208], r15
	lea	rax, [rsp + 1144]
	mov	qword ptr [rsp + 1216], rax
	mov	qword ptr [rsp + 1224], 16
	mov	qword ptr [rsp + 1232], r13
	mov	qword ptr [rsp + 1240], r12
	mov	qword ptr [rsp + 256], 16
	mov	qword ptr [rsp + 264], rcx
	mov	qword ptr [rsp + 272], r14
	mov	qword ptr [rsp + 240], rcx
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 280], rcx
	mov	qword ptr [rsp + 288], r15
	mov	qword ptr [rsp + 296], rax
Ltmp2797:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2798:
	mov	qword ptr [rsp + 64], 16
	mov	rcx, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 80], r14
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 88], rcx
	mov	qword ptr [rsp + 96], 16
	mov	qword ptr [rsp + 104], r13
	mov	qword ptr [rsp + 112], r12
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp + 120], rcx
Ltmp2799:
	lea	rcx, [rsp + 1144]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 128]
	lea	r9, [rsp + 64]
	mov	r8d, 1
	mov	rsi, r15
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h0d59b9077151e637E
Ltmp2800:
	mov	rcx, r13
	mov	r13, qword ptr [rsp + 240]
	test	rbx, rbx
	je	LBB171_779
	cmp	r14, r12
	jae	LBB171_779
	movdqa	xmm0, xmmword ptr [rsp + 160]
	paddd	xmm0, xmmword ptr [rsp + 128]
	movdqa	xmm1, xmmword ptr [rsp + 176]
	paddd	xmm1, xmmword ptr [rsp + 144]
	paddd	xmm1, xmm0
	pshufd	xmm0, xmm1, 78
	paddd	xmm0, xmm1
	pshufd	xmm1, xmm0, 229
	paddd	xmm1, xmm0
	movd	eax, xmm1
	lea	rcx, [rcx + 4*r12]
	neg	rbx
	lea	rdx, [r13 + 4*r12]
	.p2align	4, 0x90
LBB171_775:
	mov	rdi, r12
	add	rdi, rbx
	jae	LBB171_1886
	mov	esi, dword ptr [rdx + 4*rbx]
	imul	esi, dword ptr [rcx + 4*rbx]
	jo	LBB171_1887
	add	eax, esi
	jo	LBB171_1888
	inc	rbx
	jne	LBB171_775
LBB171_779:
Ltmp2803:
	lea	rdi, [rsp + 3912]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2804:
	mov	eax, dword ptr [rsp + 3952]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 3944]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 3936]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 3928]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 3912]
	mov	rcx, qword ptr [rsp + 3920]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 3904]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 3896]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 3888]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 3880]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 3864]
	mov	rcx, qword ptr [rsp + 3872]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2805:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2806:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2807:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2808:
	lea	rax, [rip + l___unnamed_58]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2809:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2810:
Ltmp2811:
	lea	rdi, [rsp + 3960]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2812:
	mov	r14, qword ptr [rsp + 688]
	cmp	r14, qword ptr [rsp + 832]
	jne	LBB171_1935
	mov	eax, r14d
	and	eax, 7
	mov	r15, r14
	sub	r15, rax
	jb	LBB171_1936
	cmp	r14, r15
	jb	LBB171_1937
	mov	r12, qword ptr [rsp + 672]
	mov	r13, qword ptr [rsp + 816]
	mov	qword ptr [rsp + 1144], 8
	mov	qword ptr [rsp + 1152], r12
	mov	qword ptr [rsp + 1160], r15
	mov	qword ptr [rsp + 1168], 8
	mov	qword ptr [rsp + 1176], r13
	mov	qword ptr [rsp + 1184], r14
	test	r15, r15
	je	LBB171_790
	lea	rbx, [r15 - 1]
	shr	rbx, 3
	inc	rbx
	test	r14, r14
	mov	qword ptr [rsp + 240], rax
	je	LBB171_791
LBB171_789:
	lea	rax, [r14 - 1]
	shr	rax, 3
	inc	rax
	jmp	LBB171_792
LBB171_790:
	xor	ebx, ebx
	test	r14, r14
	mov	qword ptr [rsp + 240], rax
	jne	LBB171_789
LBB171_791:
	xor	eax, eax
LBB171_792:
	cmp	rbx, rax
	cmova	rbx, rax
	mov	qword ptr [rsp + 1208], rbx
	lea	rax, [rsp + 1144]
	mov	qword ptr [rsp + 1216], rax
	mov	qword ptr [rsp + 1224], 8
	mov	qword ptr [rsp + 1232], r13
	mov	qword ptr [rsp + 1240], r14
	mov	qword ptr [rsp + 256], 8
	mov	qword ptr [rsp + 264], r12
	mov	qword ptr [rsp + 272], r15
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 280], rcx
	mov	qword ptr [rsp + 288], rbx
	mov	qword ptr [rsp + 296], rax
Ltmp2815:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2816:
	mov	qword ptr [rsp + 64], 8
	mov	qword ptr [rsp + 72], r12
	mov	qword ptr [rsp + 80], r15
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 88], rcx
	mov	qword ptr [rsp + 96], 8
	mov	qword ptr [rsp + 104], r13
	mov	qword ptr [rsp + 112], r14
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp + 120], rcx
Ltmp2817:
	lea	rcx, [rsp + 1144]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 128]
	lea	r9, [rsp + 64]
	mov	r8d, 1
	mov	rsi, rbx
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h08cd0410494d8951E
Ltmp2818:
	cmp	qword ptr [rsp + 240], 0
	je	LBB171_822
	cmp	r15, r14
	jae	LBB171_822
	mov	rcx, qword ptr [r12 + 8*r15]
	imul	rcx, qword ptr [r13 + 8*r15]
	jo	LBB171_1938
	movdqa	xmm0, xmmword ptr [rsp + 160]
	paddq	xmm0, xmmword ptr [rsp + 128]
	movdqa	xmm1, xmmword ptr [rsp + 176]
	paddq	xmm1, xmmword ptr [rsp + 144]
	paddq	xmm1, xmm0
	pshufd	xmm0, xmm1, 78
	paddq	xmm0, xmm1
	movq	rax, xmm0
	add	rax, rcx
	jo	LBB171_1939
	lea	rdi, [r15 + 1]
	cmp	rdi, r14
	je	LBB171_822
	cmp	r14, rdi
	jbe	LBB171_1968
	mov	rcx, qword ptr [r12 + 8*r15 + 8]
	imul	rcx, qword ptr [r13 + 8*r15 + 8]
	jo	LBB171_1938
	add	rax, rcx
	jo	LBB171_1939
	lea	rdi, [r15 + 2]
	cmp	rdi, r14
	je	LBB171_822
	cmp	r14, rdi
	jbe	LBB171_1968
	mov	rcx, qword ptr [r12 + 8*r15 + 16]
	imul	rcx, qword ptr [r13 + 8*r15 + 16]
	jo	LBB171_1938
	add	rax, rcx
	jo	LBB171_1939
	lea	rdi, [r15 + 3]
	cmp	rdi, r14
	je	LBB171_822
	cmp	r14, rdi
	jbe	LBB171_1968
	mov	rcx, qword ptr [r12 + 8*r15 + 24]
	imul	rcx, qword ptr [r13 + 8*r15 + 24]
	jo	LBB171_1938
	add	rax, rcx
	jo	LBB171_1939
	lea	rdi, [r15 + 4]
	cmp	rdi, r14
	je	LBB171_822
	cmp	r14, rdi
	jbe	LBB171_1968
	mov	rcx, qword ptr [r12 + 8*r15 + 32]
	imul	rcx, qword ptr [r13 + 8*r15 + 32]
	jo	LBB171_1938
	add	rax, rcx
	jo	LBB171_1939
	lea	rdi, [r15 + 5]
	cmp	rdi, r14
	je	LBB171_822
	cmp	r14, rdi
	jbe	LBB171_1968
	mov	rcx, qword ptr [r12 + 8*r15 + 40]
	imul	rcx, qword ptr [r13 + 8*r15 + 40]
	jo	LBB171_1938
	add	rax, rcx
	jo	LBB171_1939
	mov	rdi, r15
	add	rdi, 6
	cmp	rdi, r14
	je	LBB171_822
	cmp	r14, rdi
	jbe	LBB171_1968
	mov	rcx, qword ptr [r12 + 8*r15 + 48]
	imul	rcx, qword ptr [r13 + 8*r15 + 48]
	jo	LBB171_1938
	add	rax, rcx
	jo	LBB171_1939
LBB171_822:
Ltmp2821:
	lea	rdi, [rsp + 4008]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2822:
	mov	eax, dword ptr [rsp + 4048]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 4040]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 4032]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 4024]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 4008]
	mov	rcx, qword ptr [rsp + 4016]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 4000]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 3992]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 3984]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 3976]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 3960]
	mov	rcx, qword ptr [rsp + 3968]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2823:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2824:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2825:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2826:
	lea	rax, [rip + l___unnamed_59]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2827:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2828:
Ltmp2829:
	lea	rdi, [rsp + 4056]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2830:
	mov	r14, qword ptr [rsp + 712]
	cmp	r14, qword ptr [rsp + 856]
	jne	LBB171_1940
	mov	eax, r14d
	and	eax, 7
	mov	r15, r14
	sub	r15, rax
	jb	LBB171_1941
	cmp	r14, r15
	jb	LBB171_1942
	mov	r13, qword ptr [rsp + 696]
	mov	r12, qword ptr [rsp + 840]
	mov	qword ptr [rsp + 1144], 8
	mov	qword ptr [rsp + 1152], r13
	mov	qword ptr [rsp + 1160], r15
	mov	qword ptr [rsp + 1168], 8
	mov	qword ptr [rsp + 1176], r12
	mov	qword ptr [rsp + 1184], r14
	test	r15, r15
	je	LBB171_833
	lea	rbx, [r15 - 1]
	shr	rbx, 3
	inc	rbx
	mov	qword ptr [rsp + 240], rax
	test	r14, r14
	je	LBB171_834
LBB171_832:
	lea	rax, [r14 - 1]
	shr	rax, 3
	inc	rax
	jmp	LBB171_835
LBB171_833:
	xor	ebx, ebx
	mov	qword ptr [rsp + 240], rax
	test	r14, r14
	jne	LBB171_832
LBB171_834:
	xor	eax, eax
LBB171_835:
	cmp	rbx, rax
	cmova	rbx, rax
	mov	qword ptr [rsp + 1208], rbx
	lea	rax, [rsp + 1144]
	mov	qword ptr [rsp + 1216], rax
	mov	qword ptr [rsp + 1224], 8
	mov	qword ptr [rsp + 1232], r12
	mov	qword ptr [rsp + 1240], r14
	mov	qword ptr [rsp + 256], 8
	mov	qword ptr [rsp + 264], r13
	mov	qword ptr [rsp + 272], r15
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 280], rcx
	mov	qword ptr [rsp + 288], rbx
	mov	qword ptr [rsp + 296], rax
Ltmp2833:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2834:
	mov	qword ptr [rsp + 64], 8
	mov	qword ptr [rsp + 72], r13
	mov	qword ptr [rsp + 80], r15
	lea	rcx, [rsp + 1208]
	mov	qword ptr [rsp + 88], rcx
	mov	qword ptr [rsp + 96], 8
	mov	qword ptr [rsp + 104], r12
	mov	qword ptr [rsp + 112], r14
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp + 120], rcx
Ltmp2835:
	lea	rcx, [rsp + 1144]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 128]
	lea	r9, [rsp + 64]
	mov	r8d, 1
	mov	rsi, rbx
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h2eb6b78daa809218E
Ltmp2836:
	cmp	qword ptr [rsp + 240], 0
	je	LBB171_865
	cmp	r15, r14
	jae	LBB171_865
	mov	rax, qword ptr [r13 + 8*r15]
	mul	qword ptr [r12 + 8*r15]
	jo	LBB171_1943
	movdqa	xmm0, xmmword ptr [rsp + 160]
	paddq	xmm0, xmmword ptr [rsp + 128]
	movdqa	xmm1, xmmword ptr [rsp + 176]
	paddq	xmm1, xmmword ptr [rsp + 144]
	paddq	xmm1, xmm0
	pshufd	xmm0, xmm1, 78
	paddq	xmm0, xmm1
	movq	rcx, xmm0
	add	rcx, rax
	jb	LBB171_1944
	lea	rdi, [r15 + 1]
	cmp	rdi, r14
	je	LBB171_865
	cmp	r14, rdi
	jbe	LBB171_1969
	mov	rax, qword ptr [r13 + 8*r15 + 8]
	mul	qword ptr [r12 + 8*r15 + 8]
	jo	LBB171_1943
	add	rcx, rax
	jb	LBB171_1944
	lea	rdi, [r15 + 2]
	cmp	rdi, r14
	je	LBB171_865
	cmp	r14, rdi
	jbe	LBB171_1969
	mov	rax, qword ptr [r13 + 8*r15 + 16]
	mul	qword ptr [r12 + 8*r15 + 16]
	jo	LBB171_1943
	add	rcx, rax
	jb	LBB171_1944
	lea	rdi, [r15 + 3]
	cmp	rdi, r14
	je	LBB171_865
	cmp	r14, rdi
	jbe	LBB171_1969
	mov	rax, qword ptr [r13 + 8*r15 + 24]
	mul	qword ptr [r12 + 8*r15 + 24]
	jo	LBB171_1943
	add	rcx, rax
	jb	LBB171_1944
	lea	rdi, [r15 + 4]
	cmp	rdi, r14
	je	LBB171_865
	cmp	r14, rdi
	jbe	LBB171_1969
	mov	rax, qword ptr [r13 + 8*r15 + 32]
	mul	qword ptr [r12 + 8*r15 + 32]
	jo	LBB171_1943
	add	rcx, rax
	jb	LBB171_1944
	lea	rdi, [r15 + 5]
	cmp	rdi, r14
	je	LBB171_865
	cmp	r14, rdi
	jbe	LBB171_1969
	mov	rax, qword ptr [r13 + 8*r15 + 40]
	mul	qword ptr [r12 + 8*r15 + 40]
	jo	LBB171_1943
	add	rcx, rax
	jb	LBB171_1944
	mov	rdi, r15
	add	rdi, 6
	cmp	rdi, r14
	je	LBB171_865
	cmp	r14, rdi
	jbe	LBB171_1969
	mov	rax, qword ptr [r13 + 8*r15 + 48]
	mul	qword ptr [r12 + 8*r15 + 48]
	jo	LBB171_1943
	add	rcx, rax
	jb	LBB171_1944
LBB171_865:
Ltmp2839:
	lea	rdi, [rsp + 4104]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2840:
	mov	eax, dword ptr [rsp + 4144]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 4136]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 4128]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 4120]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 4104]
	mov	rcx, qword ptr [rsp + 4112]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 4096]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 4088]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 4080]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 4072]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 4056]
	mov	rcx, qword ptr [rsp + 4064]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2841:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2842:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2843:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2844:
	lea	rax, [rip + l___unnamed_60]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2845:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2846:
Ltmp2847:
	lea	rdi, [rsp + 4152]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2848:
	mov	rdi, qword ptr [rsp + 536]
	xor	eax, eax
	mov	rcx, rdi
	.p2align	4, 0x90
LBB171_871:
	test	rcx, rcx
	je	LBB171_1795
	mov	rdx, rax
	or	rdx, 1
	cmp	rdx, rdi
	je	LBB171_1795
	mov	rdx, rax
	or	rdx, 2
	cmp	rdx, rdi
	je	LBB171_1795
	mov	rdx, rax
	or	rdx, 3
	cmp	rdx, rdi
	je	LBB171_1795
	mov	rdx, rax
	or	rdx, 4
	cmp	rdx, rdi
	je	LBB171_1795
	mov	rdx, rax
	or	rdx, 5
	cmp	rdx, rdi
	je	LBB171_1795
	mov	rdx, rax
	or	rdx, 6
	cmp	rdx, rdi
	je	LBB171_1795
	mov	rdx, rax
	or	rdx, 7
	cmp	rdx, rdi
	je	LBB171_1795
	add	rax, 8
	add	rcx, -8
	cmp	rax, 100000
	jne	LBB171_871
Ltmp2849:
	lea	rdi, [rsp + 4200]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2850:
	mov	eax, dword ptr [rsp + 4240]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 4232]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 4224]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 4216]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 4200]
	mov	rcx, qword ptr [rsp + 4208]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 4192]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 4184]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 4176]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 4168]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 4152]
	mov	rcx, qword ptr [rsp + 4160]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2851:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2852:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2853:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2854:
	lea	rax, [rip + l___unnamed_61]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2855:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2856:
Ltmp2857:
	lea	rdi, [rsp + 4248]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2858:
	mov	r14, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 536]
	mov	qword ptr [rsp + 1144], 16
	mov	qword ptr [rsp + 1152], r14
	mov	qword ptr [rsp + 1160], rbx
	mov	qword ptr [rsp + 256], 16
	mov	qword ptr [rsp + 264], r14
	mov	qword ptr [rsp + 272], rbx
	test	rbx, rbx
	je	LBB171_887
	lea	r15, [rbx - 1]
	shr	r15, 4
	inc	r15
	jmp	LBB171_888
LBB171_887:
	xor	r15d, r15d
LBB171_888:
Ltmp2859:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2860:
	mov	qword ptr [rsp + 128], 16
	mov	qword ptr [rsp + 136], r14
	mov	qword ptr [rsp + 144], rbx
Ltmp2861:
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp + 8], rcx
	lea	rcx, [rsp + 1144]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 128]
	mov	r8d, 1
	mov	rsi, r15
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7090b48d49163759E
Ltmp2862:
Ltmp2863:
	lea	rdi, [rsp + 4296]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2864:
	mov	eax, dword ptr [rsp + 4336]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 4328]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 4320]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 4312]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 4296]
	mov	rcx, qword ptr [rsp + 4304]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 4288]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 4280]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 4272]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 4264]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 4248]
	mov	rcx, qword ptr [rsp + 4256]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2865:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2866:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2867:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2868:
	lea	rax, [rip + l___unnamed_62]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2869:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2870:
Ltmp2871:
	lea	rdi, [rsp + 4344]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2872:
	mov	r14, qword ptr [rsp + 440]
	mov	rbx, qword ptr [rsp + 456]
	mov	qword ptr [rsp + 1144], 8
	mov	qword ptr [rsp + 1152], r14
	mov	qword ptr [rsp + 1160], rbx
	mov	qword ptr [rsp + 256], 8
	mov	qword ptr [rsp + 264], r14
	mov	qword ptr [rsp + 272], rbx
	test	rbx, rbx
	je	LBB171_897
	lea	r15, [rbx - 1]
	shr	r15, 3
	inc	r15
	jmp	LBB171_898
LBB171_897:
	xor	r15d, r15d
LBB171_898:
Ltmp2873:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp2874:
	mov	qword ptr [rsp + 128], 8
	mov	qword ptr [rsp + 136], r14
	mov	qword ptr [rsp + 144], rbx
Ltmp2875:
	lea	rcx, [rsp + 256]
	mov	qword ptr [rsp + 8], rcx
	lea	rcx, [rsp + 1144]
	mov	qword ptr [rsp], rcx
	lea	rdi, [rsp + 64]
	lea	r9, [rsp + 128]
	mov	r8d, 1
	mov	rsi, r15
	xor	edx, edx
	mov	rcx, rax
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hc0f93965f531a381E
Ltmp2876:
Ltmp2877:
	lea	rdi, [rsp + 4392]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2878:
	mov	eax, dword ptr [rsp + 4432]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 4424]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 4416]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 4408]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 4392]
	mov	rcx, qword ptr [rsp + 4400]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 4384]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 4376]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 4368]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 4360]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 4344]
	mov	rcx, qword ptr [rsp + 4352]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2879:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2880:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2881:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2882:
	lea	rax, [rip + l___unnamed_63]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2883:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2884:
	mov	qword ptr [rsp + 1352], 4
	mov	qword ptr [rsp + 1360], 0
	mov	qword ptr [rsp + 1368], 0
Ltmp2885:
	lea	rdi, [rsp + 4440]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2886:
	mov	r12, qword ptr [rsp + 464]
	mov	r14, qword ptr [rsp + 480]
	mov	r13d, 4
	xor	esi, esi
	mov	r8d, 4
	xor	ebx, ebx
	mov	rax, qword ptr [rsp + 536]
	cmp	rax, rbx
	ja	LBB171_912
	jmp	LBB171_1817
LBB171_906:
	mov	edx, 4
	mov	rcx, r15
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_realloc
LBB171_907:
	movss	xmm0, dword ptr [rsp + 240]
	mov	r8, rax
LBB171_908:
	test	r8, r8
	je	LBB171_1797
LBB171_909:
	mov	qword ptr [rsp + 1352], r8
	shr	r15, 2
	mov	rsi, r15
LBB171_910:
	movss	dword ptr [r8 + 4*rbx], xmm0
	inc	rbx
	cmp	rbx, 100000
	je	LBB171_926
	mov	rax, qword ptr [rsp + 536]
	cmp	rax, rbx
	jbe	LBB171_1817
LBB171_912:
	cmp	r14, rbx
	je	LBB171_1818
	mov	rax, qword ptr [rsp + 520]
	movss	xmm0, dword ptr [rax + 4*rbx]
	addss	xmm0, dword ptr [r12 + 4*rbx]
	cmp	rbx, rsi
	jne	LBB171_910
	mov	rax, rsi
	inc	rax
	je	LBB171_1819
	lea	rcx, [rsi + rsi]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	ecx, ecx
	mul	r13
	mov	r15, rax
	setno	al
	jo	LBB171_1819
	mov	rdi, r8
	test	rsi, rsi
	cmove	rdi, rsi
	je	LBB171_921
	shl	rsi, 2
	cmp	rsi, r15
	je	LBB171_908
	test	rsi, rsi
	jne	LBB171_906
	test	r15, r15
	je	LBB171_925
	mov	esi, 4
	mov	rdi, r15
	jmp	LBB171_923
LBB171_921:
	mov	cl, al
	shl	rcx, 2
	test	r15, r15
	je	LBB171_924
	mov	rdi, r15
	mov	rsi, rcx
LBB171_923:
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_alloc
	jmp	LBB171_907
LBB171_924:
	mov	r8, rcx
	test	r8, r8
	jne	LBB171_909
	jmp	LBB171_1797
LBB171_925:
	mov	r8d, 4
	jmp	LBB171_909
LBB171_926:
	mov	qword ptr [rsp + 1368], rbx
	mov	qword ptr [rsp + 1360], rsi
Ltmp2889:
	lea	rdi, [rsp + 4488]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2890:
	mov	eax, dword ptr [rsp + 4528]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 4520]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 4512]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 4504]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 4488]
	mov	rcx, qword ptr [rsp + 4496]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 4480]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 4472]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 4464]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 4456]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 4440]
	mov	rcx, qword ptr [rsp + 4448]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2891:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2892:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2893:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2894:
	lea	rax, [rip + l___unnamed_64]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2895:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2896:
Ltmp2897:
	lea	rdi, [rsp + 4536]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2898:
	mov	r14, qword ptr [rsp + 536]
	cmp	r14, qword ptr [rsp + 480]
	jne	LBB171_1945
	test	r14, r14
	je	LBB171_947
	mov	rax, qword ptr [rsp + 520]
	mov	rcx, qword ptr [rsp + 464]
	cmp	r14, 7
	jbe	LBB171_936
	lea	rdx, [rcx + 4*r14]
	cmp	rax, rdx
	jae	LBB171_941
	lea	rdx, [rax + 4*r14]
	cmp	rcx, rdx
	jae	LBB171_941
LBB171_936:
	xor	edx, edx
LBB171_937:
	mov	rsi, rdx
	not	rsi
	add	rsi, r14
	mov	rdi, r14
	and	rdi, 3
	je	LBB171_939
	.p2align	4, 0x90
LBB171_938:
	movss	xmm0, dword ptr [rcx + 4*rdx]
	addss	xmm0, dword ptr [rax + 4*rdx]
	movss	dword ptr [rax + 4*rdx], xmm0
	inc	rdx
	dec	rdi
	jne	LBB171_938
LBB171_939:
	cmp	rsi, 3
	jb	LBB171_947
	.p2align	4, 0x90
LBB171_940:
	movss	xmm0, dword ptr [rcx + 4*rdx]
	addss	xmm0, dword ptr [rax + 4*rdx]
	movss	dword ptr [rax + 4*rdx], xmm0
	movss	xmm0, dword ptr [rcx + 4*rdx + 4]
	addss	xmm0, dword ptr [rax + 4*rdx + 4]
	movss	dword ptr [rax + 4*rdx + 4], xmm0
	movss	xmm0, dword ptr [rcx + 4*rdx + 8]
	addss	xmm0, dword ptr [rax + 4*rdx + 8]
	movss	dword ptr [rax + 4*rdx + 8], xmm0
	movss	xmm0, dword ptr [rcx + 4*rdx + 12]
	addss	xmm0, dword ptr [rax + 4*rdx + 12]
	movss	dword ptr [rax + 4*rdx + 12], xmm0
	add	rdx, 4
	cmp	r14, rdx
	jne	LBB171_940
	jmp	LBB171_947
LBB171_941:
	mov	rdx, r14
	and	rdx, -8
	lea	rsi, [rdx - 8]
	mov	rdi, rsi
	shr	rdi, 3
	inc	rdi
	mov	ebx, edi
	and	ebx, 1
	test	rsi, rsi
	je	LBB171_1784
	sub	rdi, rbx
	xor	esi, esi
	.p2align	4, 0x90
LBB171_943:
	movups	xmm0, xmmword ptr [rcx + 4*rsi]
	movups	xmm1, xmmword ptr [rcx + 4*rsi + 16]
	movups	xmm2, xmmword ptr [rax + 4*rsi]
	addps	xmm2, xmm0
	movups	xmm0, xmmword ptr [rax + 4*rsi + 16]
	addps	xmm0, xmm1
	movups	xmm1, xmmword ptr [rax + 4*rsi + 32]
	movups	xmm3, xmmword ptr [rax + 4*rsi + 48]
	movups	xmmword ptr [rax + 4*rsi], xmm2
	movups	xmmword ptr [rax + 4*rsi + 16], xmm0
	movups	xmm0, xmmword ptr [rcx + 4*rsi + 32]
	addps	xmm0, xmm1
	movups	xmm1, xmmword ptr [rcx + 4*rsi + 48]
	addps	xmm1, xmm3
	movups	xmmword ptr [rax + 4*rsi + 32], xmm0
	movups	xmmword ptr [rax + 4*rsi + 48], xmm1
	add	rsi, 16
	add	rdi, -2
	jne	LBB171_943
	test	rbx, rbx
	je	LBB171_946
LBB171_945:
	movups	xmm0, xmmword ptr [rcx + 4*rsi]
	movups	xmm1, xmmword ptr [rcx + 4*rsi + 16]
	movups	xmm2, xmmword ptr [rax + 4*rsi]
	addps	xmm2, xmm0
	movups	xmm0, xmmword ptr [rax + 4*rsi + 16]
	addps	xmm0, xmm1
	movups	xmmword ptr [rax + 4*rsi], xmm2
	movups	xmmword ptr [rax + 4*rsi + 16], xmm0
LBB171_946:
	cmp	r14, rdx
	jne	LBB171_937
LBB171_947:
Ltmp2901:
	lea	rdi, [rsp + 4584]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2902:
	mov	eax, dword ptr [rsp + 4624]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 4616]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 4608]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 4600]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 4584]
	mov	rcx, qword ptr [rsp + 4592]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 4576]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 4568]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 4560]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 4552]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 4536]
	mov	rcx, qword ptr [rsp + 4544]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2903:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2904:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2905:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2906:
	lea	rax, [rip + l___unnamed_65]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2907:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2908:
Ltmp2909:
	lea	rdi, [rsp + 4632]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2910:
	mov	r9, qword ptr [rsp + 456]
	cmp	r9, qword ptr [rsp + 568]
	jne	LBB171_1946
	test	r9, r9
	je	LBB171_968
	mov	rcx, qword ptr [rsp + 440]
	mov	rdx, qword ptr [rsp + 552]
	cmp	r9, 3
	jbe	LBB171_957
	lea	rax, [rdx + 8*r9]
	cmp	rcx, rax
	jae	LBB171_962
	lea	rax, [rcx + 8*r9]
	cmp	rdx, rax
	jae	LBB171_962
LBB171_957:
	xor	esi, esi
LBB171_958:
	mov	rdi, rsi
	not	rdi
	add	rdi, r9
	mov	rax, r9
	and	rax, 3
	je	LBB171_960
	.p2align	4, 0x90
LBB171_959:
	movsd	xmm0, qword ptr [rdx + 8*rsi]
	addsd	xmm0, qword ptr [rcx + 8*rsi]
	movsd	qword ptr [rcx + 8*rsi], xmm0
	inc	rsi
	dec	rax
	jne	LBB171_959
LBB171_960:
	cmp	rdi, 3
	jb	LBB171_968
	.p2align	4, 0x90
LBB171_961:
	movsd	xmm0, qword ptr [rdx + 8*rsi]
	addsd	xmm0, qword ptr [rcx + 8*rsi]
	movsd	qword ptr [rcx + 8*rsi], xmm0
	movsd	xmm0, qword ptr [rdx + 8*rsi + 8]
	addsd	xmm0, qword ptr [rcx + 8*rsi + 8]
	movsd	qword ptr [rcx + 8*rsi + 8], xmm0
	movsd	xmm0, qword ptr [rdx + 8*rsi + 16]
	addsd	xmm0, qword ptr [rcx + 8*rsi + 16]
	movsd	qword ptr [rcx + 8*rsi + 16], xmm0
	movsd	xmm0, qword ptr [rdx + 8*rsi + 24]
	addsd	xmm0, qword ptr [rcx + 8*rsi + 24]
	movsd	qword ptr [rcx + 8*rsi + 24], xmm0
	add	rsi, 4
	cmp	r9, rsi
	jne	LBB171_961
	jmp	LBB171_968
LBB171_962:
	mov	rsi, r9
	and	rsi, -4
	lea	rax, [rsi - 4]
	mov	rbx, rax
	shr	rbx, 2
	inc	rbx
	mov	r8d, ebx
	and	r8d, 1
	test	rax, rax
	je	LBB171_1785
	sub	rbx, r8
	xor	edi, edi
	.p2align	4, 0x90
LBB171_964:
	movupd	xmm0, xmmword ptr [rdx + 8*rdi]
	movupd	xmm1, xmmword ptr [rdx + 8*rdi + 16]
	movupd	xmm2, xmmword ptr [rcx + 8*rdi]
	addpd	xmm2, xmm0
	movupd	xmm0, xmmword ptr [rcx + 8*rdi + 16]
	addpd	xmm0, xmm1
	movupd	xmm1, xmmword ptr [rcx + 8*rdi + 32]
	movupd	xmm3, xmmword ptr [rcx + 8*rdi + 48]
	movupd	xmmword ptr [rcx + 8*rdi], xmm2
	movupd	xmmword ptr [rcx + 8*rdi + 16], xmm0
	movupd	xmm0, xmmword ptr [rdx + 8*rdi + 32]
	addpd	xmm0, xmm1
	movupd	xmm1, xmmword ptr [rdx + 8*rdi + 48]
	addpd	xmm1, xmm3
	movupd	xmmword ptr [rcx + 8*rdi + 32], xmm0
	movupd	xmmword ptr [rcx + 8*rdi + 48], xmm1
	add	rdi, 8
	add	rbx, -2
	jne	LBB171_964
	test	r8, r8
	je	LBB171_967
LBB171_966:
	movupd	xmm0, xmmword ptr [rdx + 8*rdi]
	movupd	xmm1, xmmword ptr [rdx + 8*rdi + 16]
	movupd	xmm2, xmmword ptr [rcx + 8*rdi]
	addpd	xmm2, xmm0
	movupd	xmm0, xmmword ptr [rcx + 8*rdi + 16]
	addpd	xmm0, xmm1
	movupd	xmmword ptr [rcx + 8*rdi], xmm2
	movupd	xmmword ptr [rcx + 8*rdi + 16], xmm0
LBB171_967:
	cmp	r9, rsi
	jne	LBB171_958
LBB171_968:
Ltmp2913:
	lea	rdi, [rsp + 4680]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2914:
	mov	eax, dword ptr [rsp + 4720]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 4712]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 4704]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 4696]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 4680]
	mov	rcx, qword ptr [rsp + 4688]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 4672]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 4664]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 4656]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 4648]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 4632]
	mov	rcx, qword ptr [rsp + 4640]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2915:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2916:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2917:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2918:
	lea	rax, [rip + l___unnamed_66]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2919:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2920:
	mov	qword ptr [rsp + 1376], 4
	mov	qword ptr [rsp + 1384], 0
	mov	qword ptr [rsp + 1392], 0
Ltmp2921:
	lea	rdi, [rsp + 4728]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2922:
	mov	r12d, 4
	mov	r13, qword ptr [rsp + 464]
	xor	esi, esi
	mov	r8d, 4
	xor	ebx, ebx
	mov	rax, qword ptr [rsp + 536]
	cmp	rax, rbx
	ja	LBB171_980
	jmp	LBB171_1820
LBB171_974:
	mov	edx, 4
	mov	rcx, r15
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_realloc
LBB171_975:
	movss	xmm0, dword ptr [rsp + 240]
	mov	r8, rax
LBB171_976:
	test	r8, r8
	je	LBB171_1797
LBB171_977:
	mov	qword ptr [rsp + 1376], r8
	shr	r15, 2
	mov	rsi, r15
LBB171_978:
	movss	dword ptr [r8 + 4*rbx], xmm0
	inc	rbx
	cmp	rbx, 100000
	je	LBB171_994
	mov	rax, qword ptr [rsp + 536]
	cmp	rax, rbx
	jbe	LBB171_1820
LBB171_980:
	cmp	r14, rbx
	je	LBB171_1821
	mov	rax, qword ptr [rsp + 520]
	movss	xmm0, dword ptr [rax + 4*rbx]
	subss	xmm0, dword ptr [r13 + 4*rbx]
	cmp	rbx, rsi
	jne	LBB171_978
	mov	rax, rsi
	inc	rax
	je	LBB171_1822
	lea	rcx, [rsi + rsi]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	ecx, ecx
	mul	r12
	mov	r15, rax
	setno	al
	jo	LBB171_1822
	mov	rdi, r8
	test	rsi, rsi
	cmove	rdi, rsi
	je	LBB171_989
	shl	rsi, 2
	cmp	rsi, r15
	je	LBB171_976
	test	rsi, rsi
	jne	LBB171_974
	test	r15, r15
	je	LBB171_993
	mov	esi, 4
	mov	rdi, r15
	jmp	LBB171_991
LBB171_989:
	mov	cl, al
	shl	rcx, 2
	test	r15, r15
	je	LBB171_992
	mov	rdi, r15
	mov	rsi, rcx
LBB171_991:
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_alloc
	jmp	LBB171_975
LBB171_992:
	mov	r8, rcx
	test	r8, r8
	jne	LBB171_977
	jmp	LBB171_1797
LBB171_993:
	mov	r8d, 4
	jmp	LBB171_977
LBB171_994:
	mov	qword ptr [rsp + 1392], rbx
	mov	qword ptr [rsp + 1384], rsi
Ltmp2925:
	lea	rdi, [rsp + 4776]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2926:
	mov	eax, dword ptr [rsp + 4816]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 4808]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 4800]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 4792]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 4776]
	mov	rcx, qword ptr [rsp + 4784]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 4768]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 4760]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 4752]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 4744]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 4728]
	mov	rcx, qword ptr [rsp + 4736]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2927:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2928:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2929:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2930:
	lea	rax, [rip + l___unnamed_67]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2931:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2932:
Ltmp2933:
	lea	rdi, [rsp + 4824]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2934:
	mov	r9, qword ptr [rsp + 536]
	cmp	r9, qword ptr [rsp + 480]
	jne	LBB171_1947
	test	r9, r9
	je	LBB171_1015
	mov	rcx, qword ptr [rsp + 520]
	mov	rdx, qword ptr [rsp + 464]
	cmp	r9, 7
	jbe	LBB171_1004
	lea	rax, [rdx + 4*r9]
	cmp	rcx, rax
	jae	LBB171_1009
	lea	rax, [rcx + 4*r9]
	cmp	rdx, rax
	jae	LBB171_1009
LBB171_1004:
	xor	esi, esi
LBB171_1005:
	mov	rdi, rsi
	not	rdi
	add	rdi, r9
	mov	rax, r9
	and	rax, 3
	je	LBB171_1007
	.p2align	4, 0x90
LBB171_1006:
	movss	xmm0, dword ptr [rcx + 4*rsi]
	subss	xmm0, dword ptr [rdx + 4*rsi]
	movss	dword ptr [rcx + 4*rsi], xmm0
	inc	rsi
	dec	rax
	jne	LBB171_1006
LBB171_1007:
	cmp	rdi, 3
	jb	LBB171_1015
	.p2align	4, 0x90
LBB171_1008:
	movss	xmm0, dword ptr [rcx + 4*rsi]
	subss	xmm0, dword ptr [rdx + 4*rsi]
	movss	xmm1, dword ptr [rcx + 4*rsi + 4]
	movss	dword ptr [rcx + 4*rsi], xmm0
	subss	xmm1, dword ptr [rdx + 4*rsi + 4]
	movss	dword ptr [rcx + 4*rsi + 4], xmm1
	movss	xmm0, dword ptr [rcx + 4*rsi + 8]
	subss	xmm0, dword ptr [rdx + 4*rsi + 8]
	movss	dword ptr [rcx + 4*rsi + 8], xmm0
	movss	xmm0, dword ptr [rcx + 4*rsi + 12]
	subss	xmm0, dword ptr [rdx + 4*rsi + 12]
	movss	dword ptr [rcx + 4*rsi + 12], xmm0
	add	rsi, 4
	cmp	r9, rsi
	jne	LBB171_1008
	jmp	LBB171_1015
LBB171_1009:
	mov	rsi, r9
	and	rsi, -8
	lea	rax, [rsi - 8]
	mov	rbx, rax
	shr	rbx, 3
	inc	rbx
	mov	r8d, ebx
	and	r8d, 1
	test	rax, rax
	je	LBB171_1786
	sub	rbx, r8
	xor	edi, edi
	.p2align	4, 0x90
LBB171_1011:
	movups	xmm0, xmmword ptr [rdx + 4*rdi]
	movups	xmm1, xmmword ptr [rdx + 4*rdi + 16]
	movups	xmm2, xmmword ptr [rcx + 4*rdi]
	subps	xmm2, xmm0
	movups	xmm0, xmmword ptr [rcx + 4*rdi + 16]
	subps	xmm0, xmm1
	movups	xmm1, xmmword ptr [rcx + 4*rdi + 32]
	movups	xmm3, xmmword ptr [rcx + 4*rdi + 48]
	movups	xmmword ptr [rcx + 4*rdi], xmm2
	movups	xmmword ptr [rcx + 4*rdi + 16], xmm0
	movups	xmm0, xmmword ptr [rdx + 4*rdi + 32]
	subps	xmm1, xmm0
	movups	xmm0, xmmword ptr [rdx + 4*rdi + 48]
	subps	xmm3, xmm0
	movups	xmmword ptr [rcx + 4*rdi + 32], xmm1
	movups	xmmword ptr [rcx + 4*rdi + 48], xmm3
	add	rdi, 16
	add	rbx, -2
	jne	LBB171_1011
	test	r8, r8
	je	LBB171_1014
LBB171_1013:
	movups	xmm0, xmmword ptr [rdx + 4*rdi]
	movups	xmm1, xmmword ptr [rdx + 4*rdi + 16]
	movups	xmm2, xmmword ptr [rcx + 4*rdi]
	subps	xmm2, xmm0
	movups	xmm0, xmmword ptr [rcx + 4*rdi + 16]
	subps	xmm0, xmm1
	movups	xmmword ptr [rcx + 4*rdi], xmm2
	movups	xmmword ptr [rcx + 4*rdi + 16], xmm0
LBB171_1014:
	cmp	r9, rsi
	jne	LBB171_1005
LBB171_1015:
Ltmp2937:
	lea	rdi, [rsp + 4872]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2938:
	mov	eax, dword ptr [rsp + 4912]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 4904]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 4896]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 4888]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 4872]
	mov	rcx, qword ptr [rsp + 4880]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 4864]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 4856]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 4848]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 4840]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 4824]
	mov	rcx, qword ptr [rsp + 4832]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2939:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2940:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2941:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2942:
	lea	rax, [rip + l___unnamed_68]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2943:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2944:
Ltmp2945:
	lea	rdi, [rsp + 4920]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2946:
	mov	r9, qword ptr [rsp + 456]
	cmp	r9, qword ptr [rsp + 568]
	jne	LBB171_1948
	test	r9, r9
	je	LBB171_1036
	mov	rcx, qword ptr [rsp + 440]
	mov	rdx, qword ptr [rsp + 552]
	cmp	r9, 3
	jbe	LBB171_1025
	lea	rax, [rdx + 8*r9]
	cmp	rcx, rax
	jae	LBB171_1030
	lea	rax, [rcx + 8*r9]
	cmp	rdx, rax
	jae	LBB171_1030
LBB171_1025:
	xor	esi, esi
LBB171_1026:
	mov	rdi, rsi
	not	rdi
	add	rdi, r9
	mov	rax, r9
	and	rax, 3
	je	LBB171_1028
	.p2align	4, 0x90
LBB171_1027:
	movsd	xmm0, qword ptr [rcx + 8*rsi]
	subsd	xmm0, qword ptr [rdx + 8*rsi]
	movsd	qword ptr [rcx + 8*rsi], xmm0
	inc	rsi
	dec	rax
	jne	LBB171_1027
LBB171_1028:
	cmp	rdi, 3
	jb	LBB171_1036
	.p2align	4, 0x90
LBB171_1029:
	movsd	xmm0, qword ptr [rcx + 8*rsi]
	subsd	xmm0, qword ptr [rdx + 8*rsi]
	movsd	xmm1, qword ptr [rcx + 8*rsi + 8]
	movsd	qword ptr [rcx + 8*rsi], xmm0
	subsd	xmm1, qword ptr [rdx + 8*rsi + 8]
	movsd	qword ptr [rcx + 8*rsi + 8], xmm1
	movsd	xmm0, qword ptr [rcx + 8*rsi + 16]
	subsd	xmm0, qword ptr [rdx + 8*rsi + 16]
	movsd	qword ptr [rcx + 8*rsi + 16], xmm0
	movsd	xmm0, qword ptr [rcx + 8*rsi + 24]
	subsd	xmm0, qword ptr [rdx + 8*rsi + 24]
	movsd	qword ptr [rcx + 8*rsi + 24], xmm0
	add	rsi, 4
	cmp	r9, rsi
	jne	LBB171_1029
	jmp	LBB171_1036
LBB171_1030:
	mov	rsi, r9
	and	rsi, -4
	lea	rax, [rsi - 4]
	mov	rbx, rax
	shr	rbx, 2
	inc	rbx
	mov	r8d, ebx
	and	r8d, 1
	test	rax, rax
	je	LBB171_1787
	sub	rbx, r8
	xor	edi, edi
	.p2align	4, 0x90
LBB171_1032:
	movupd	xmm0, xmmword ptr [rdx + 8*rdi]
	movupd	xmm1, xmmword ptr [rdx + 8*rdi + 16]
	movupd	xmm2, xmmword ptr [rcx + 8*rdi]
	subpd	xmm2, xmm0
	movupd	xmm0, xmmword ptr [rcx + 8*rdi + 16]
	subpd	xmm0, xmm1
	movupd	xmm1, xmmword ptr [rcx + 8*rdi + 32]
	movupd	xmm3, xmmword ptr [rcx + 8*rdi + 48]
	movupd	xmmword ptr [rcx + 8*rdi], xmm2
	movupd	xmmword ptr [rcx + 8*rdi + 16], xmm0
	movupd	xmm0, xmmword ptr [rdx + 8*rdi + 32]
	subpd	xmm1, xmm0
	movupd	xmm0, xmmword ptr [rdx + 8*rdi + 48]
	subpd	xmm3, xmm0
	movupd	xmmword ptr [rcx + 8*rdi + 32], xmm1
	movupd	xmmword ptr [rcx + 8*rdi + 48], xmm3
	add	rdi, 8
	add	rbx, -2
	jne	LBB171_1032
	test	r8, r8
	je	LBB171_1035
LBB171_1034:
	movupd	xmm0, xmmword ptr [rdx + 8*rdi]
	movupd	xmm1, xmmword ptr [rdx + 8*rdi + 16]
	movupd	xmm2, xmmword ptr [rcx + 8*rdi]
	subpd	xmm2, xmm0
	movupd	xmm0, xmmword ptr [rcx + 8*rdi + 16]
	subpd	xmm0, xmm1
	movupd	xmmword ptr [rcx + 8*rdi], xmm2
	movupd	xmmword ptr [rcx + 8*rdi + 16], xmm0
LBB171_1035:
	cmp	r9, rsi
	jne	LBB171_1026
LBB171_1036:
Ltmp2949:
	lea	rdi, [rsp + 4968]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2950:
	mov	eax, dword ptr [rsp + 5008]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 5000]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 4992]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 4984]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 4968]
	mov	rcx, qword ptr [rsp + 4976]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 4960]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 4952]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 4944]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 4936]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 4920]
	mov	rcx, qword ptr [rsp + 4928]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2951:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2952:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2953:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2954:
	lea	rax, [rip + l___unnamed_69]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2955:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2956:
	mov	qword ptr [rsp + 1400], 4
	mov	qword ptr [rsp + 1408], 0
	mov	qword ptr [rsp + 1416], 0
Ltmp2957:
	lea	rdi, [rsp + 5016]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2958:
	mov	r12, qword ptr [rsp + 464]
	mov	r14, qword ptr [rsp + 480]
	mov	r13d, 4
	xor	esi, esi
	mov	r8d, 4
	xor	ebx, ebx
	mov	rax, qword ptr [rsp + 536]
	cmp	rax, rbx
	ja	LBB171_1048
	jmp	LBB171_1823
LBB171_1042:
	mov	edx, 4
	mov	rcx, r15
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_realloc
LBB171_1043:
	movss	xmm0, dword ptr [rsp + 240]
	mov	r8, rax
LBB171_1044:
	test	r8, r8
	je	LBB171_1797
LBB171_1045:
	mov	qword ptr [rsp + 1400], r8
	shr	r15, 2
	mov	rsi, r15
LBB171_1046:
	movss	dword ptr [r8 + 4*rbx], xmm0
	inc	rbx
	cmp	rbx, 100000
	je	LBB171_1062
	mov	rax, qword ptr [rsp + 536]
	cmp	rax, rbx
	jbe	LBB171_1823
LBB171_1048:
	cmp	r14, rbx
	je	LBB171_1824
	mov	rax, qword ptr [rsp + 520]
	movss	xmm0, dword ptr [rax + 4*rbx]
	mulss	xmm0, dword ptr [r12 + 4*rbx]
	cmp	rbx, rsi
	jne	LBB171_1046
	mov	rax, rsi
	inc	rax
	je	LBB171_1825
	lea	rcx, [rsi + rsi]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	ecx, ecx
	mul	r13
	mov	r15, rax
	setno	al
	jo	LBB171_1825
	mov	rdi, r8
	test	rsi, rsi
	cmove	rdi, rsi
	je	LBB171_1057
	shl	rsi, 2
	cmp	rsi, r15
	je	LBB171_1044
	test	rsi, rsi
	jne	LBB171_1042
	test	r15, r15
	je	LBB171_1061
	mov	esi, 4
	mov	rdi, r15
	jmp	LBB171_1059
LBB171_1057:
	mov	cl, al
	shl	rcx, 2
	test	r15, r15
	je	LBB171_1060
	mov	rdi, r15
	mov	rsi, rcx
LBB171_1059:
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_alloc
	jmp	LBB171_1043
LBB171_1060:
	mov	r8, rcx
	test	r8, r8
	jne	LBB171_1045
	jmp	LBB171_1797
LBB171_1061:
	mov	r8d, 4
	jmp	LBB171_1045
LBB171_1062:
	mov	qword ptr [rsp + 1416], rbx
	mov	qword ptr [rsp + 1408], rsi
Ltmp2961:
	lea	rdi, [rsp + 5064]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2962:
	mov	eax, dword ptr [rsp + 5104]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 5096]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 5088]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 5080]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 5064]
	mov	rcx, qword ptr [rsp + 5072]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 5056]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 5048]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 5040]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 5032]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 5016]
	mov	rcx, qword ptr [rsp + 5024]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2963:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2964:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2965:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2966:
	lea	rax, [rip + l___unnamed_70]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2967:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2968:
Ltmp2969:
	lea	rdi, [rsp + 5112]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2970:
	mov	r9, qword ptr [rsp + 536]
	cmp	r9, qword ptr [rsp + 480]
	jne	LBB171_1949
	test	r9, r9
	je	LBB171_1083
	mov	rcx, qword ptr [rsp + 520]
	mov	rdx, qword ptr [rsp + 464]
	cmp	r9, 7
	jbe	LBB171_1072
	lea	rax, [rdx + 4*r9]
	cmp	rcx, rax
	jae	LBB171_1077
	lea	rax, [rcx + 4*r9]
	cmp	rdx, rax
	jae	LBB171_1077
LBB171_1072:
	xor	esi, esi
LBB171_1073:
	mov	rdi, rsi
	not	rdi
	add	rdi, r9
	mov	rax, r9
	and	rax, 3
	je	LBB171_1075
	.p2align	4, 0x90
LBB171_1074:
	movss	xmm0, dword ptr [rdx + 4*rsi]
	mulss	xmm0, dword ptr [rcx + 4*rsi]
	movss	dword ptr [rcx + 4*rsi], xmm0
	inc	rsi
	dec	rax
	jne	LBB171_1074
LBB171_1075:
	cmp	rdi, 3
	jb	LBB171_1083
	.p2align	4, 0x90
LBB171_1076:
	movss	xmm0, dword ptr [rdx + 4*rsi]
	mulss	xmm0, dword ptr [rcx + 4*rsi]
	movss	dword ptr [rcx + 4*rsi], xmm0
	movss	xmm0, dword ptr [rdx + 4*rsi + 4]
	mulss	xmm0, dword ptr [rcx + 4*rsi + 4]
	movss	dword ptr [rcx + 4*rsi + 4], xmm0
	movss	xmm0, dword ptr [rdx + 4*rsi + 8]
	mulss	xmm0, dword ptr [rcx + 4*rsi + 8]
	movss	dword ptr [rcx + 4*rsi + 8], xmm0
	movss	xmm0, dword ptr [rdx + 4*rsi + 12]
	mulss	xmm0, dword ptr [rcx + 4*rsi + 12]
	movss	dword ptr [rcx + 4*rsi + 12], xmm0
	add	rsi, 4
	cmp	r9, rsi
	jne	LBB171_1076
	jmp	LBB171_1083
LBB171_1077:
	mov	rsi, r9
	and	rsi, -8
	lea	rax, [rsi - 8]
	mov	rbx, rax
	shr	rbx, 3
	inc	rbx
	mov	r8d, ebx
	and	r8d, 1
	test	rax, rax
	je	LBB171_1788
	sub	rbx, r8
	xor	edi, edi
	.p2align	4, 0x90
LBB171_1079:
	movups	xmm0, xmmword ptr [rdx + 4*rdi]
	movups	xmm1, xmmword ptr [rdx + 4*rdi + 16]
	movups	xmm2, xmmword ptr [rcx + 4*rdi]
	mulps	xmm2, xmm0
	movups	xmm0, xmmword ptr [rcx + 4*rdi + 16]
	mulps	xmm0, xmm1
	movups	xmm1, xmmword ptr [rcx + 4*rdi + 32]
	movups	xmm3, xmmword ptr [rcx + 4*rdi + 48]
	movups	xmmword ptr [rcx + 4*rdi], xmm2
	movups	xmmword ptr [rcx + 4*rdi + 16], xmm0
	movups	xmm0, xmmword ptr [rdx + 4*rdi + 32]
	mulps	xmm0, xmm1
	movups	xmm1, xmmword ptr [rdx + 4*rdi + 48]
	mulps	xmm1, xmm3
	movups	xmmword ptr [rcx + 4*rdi + 32], xmm0
	movups	xmmword ptr [rcx + 4*rdi + 48], xmm1
	add	rdi, 16
	add	rbx, -2
	jne	LBB171_1079
	test	r8, r8
	je	LBB171_1082
LBB171_1081:
	movups	xmm0, xmmword ptr [rdx + 4*rdi]
	movups	xmm1, xmmword ptr [rdx + 4*rdi + 16]
	movups	xmm2, xmmword ptr [rcx + 4*rdi]
	mulps	xmm2, xmm0
	movups	xmm0, xmmword ptr [rcx + 4*rdi + 16]
	mulps	xmm0, xmm1
	movups	xmmword ptr [rcx + 4*rdi], xmm2
	movups	xmmword ptr [rcx + 4*rdi + 16], xmm0
LBB171_1082:
	cmp	r9, rsi
	jne	LBB171_1073
LBB171_1083:
Ltmp2973:
	lea	rdi, [rsp + 5160]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2974:
	mov	eax, dword ptr [rsp + 5200]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 5192]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 5184]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 5176]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 5160]
	mov	rcx, qword ptr [rsp + 5168]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 5152]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 5144]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 5136]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 5128]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 5112]
	mov	rcx, qword ptr [rsp + 5120]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2975:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2976:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2977:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2978:
	lea	rax, [rip + l___unnamed_71]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2979:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2980:
Ltmp2981:
	lea	rdi, [rsp + 5208]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2982:
	mov	r9, qword ptr [rsp + 456]
	cmp	r9, qword ptr [rsp + 568]
	jne	LBB171_1950
	test	r9, r9
	je	LBB171_1104
	mov	rcx, qword ptr [rsp + 440]
	mov	rdx, qword ptr [rsp + 552]
	cmp	r9, 3
	jbe	LBB171_1093
	lea	rax, [rdx + 8*r9]
	cmp	rcx, rax
	jae	LBB171_1098
	lea	rax, [rcx + 8*r9]
	cmp	rdx, rax
	jae	LBB171_1098
LBB171_1093:
	xor	esi, esi
LBB171_1094:
	mov	rdi, rsi
	not	rdi
	add	rdi, r9
	mov	rax, r9
	and	rax, 3
	je	LBB171_1096
	.p2align	4, 0x90
LBB171_1095:
	movsd	xmm0, qword ptr [rdx + 8*rsi]
	mulsd	xmm0, qword ptr [rcx + 8*rsi]
	movsd	qword ptr [rcx + 8*rsi], xmm0
	inc	rsi
	dec	rax
	jne	LBB171_1095
LBB171_1096:
	cmp	rdi, 3
	jb	LBB171_1104
	.p2align	4, 0x90
LBB171_1097:
	movsd	xmm0, qword ptr [rdx + 8*rsi]
	mulsd	xmm0, qword ptr [rcx + 8*rsi]
	movsd	qword ptr [rcx + 8*rsi], xmm0
	movsd	xmm0, qword ptr [rdx + 8*rsi + 8]
	mulsd	xmm0, qword ptr [rcx + 8*rsi + 8]
	movsd	qword ptr [rcx + 8*rsi + 8], xmm0
	movsd	xmm0, qword ptr [rdx + 8*rsi + 16]
	mulsd	xmm0, qword ptr [rcx + 8*rsi + 16]
	movsd	qword ptr [rcx + 8*rsi + 16], xmm0
	movsd	xmm0, qword ptr [rdx + 8*rsi + 24]
	mulsd	xmm0, qword ptr [rcx + 8*rsi + 24]
	movsd	qword ptr [rcx + 8*rsi + 24], xmm0
	add	rsi, 4
	cmp	r9, rsi
	jne	LBB171_1097
	jmp	LBB171_1104
LBB171_1098:
	mov	rsi, r9
	and	rsi, -4
	lea	rax, [rsi - 4]
	mov	rbx, rax
	shr	rbx, 2
	inc	rbx
	mov	r8d, ebx
	and	r8d, 1
	test	rax, rax
	je	LBB171_1789
	sub	rbx, r8
	xor	edi, edi
	.p2align	4, 0x90
LBB171_1100:
	movupd	xmm0, xmmword ptr [rdx + 8*rdi]
	movupd	xmm1, xmmword ptr [rdx + 8*rdi + 16]
	movupd	xmm2, xmmword ptr [rcx + 8*rdi]
	mulpd	xmm2, xmm0
	movupd	xmm0, xmmword ptr [rcx + 8*rdi + 16]
	mulpd	xmm0, xmm1
	movupd	xmm1, xmmword ptr [rcx + 8*rdi + 32]
	movupd	xmm3, xmmword ptr [rcx + 8*rdi + 48]
	movupd	xmmword ptr [rcx + 8*rdi], xmm2
	movupd	xmmword ptr [rcx + 8*rdi + 16], xmm0
	movupd	xmm0, xmmword ptr [rdx + 8*rdi + 32]
	mulpd	xmm0, xmm1
	movupd	xmm1, xmmword ptr [rdx + 8*rdi + 48]
	mulpd	xmm1, xmm3
	movupd	xmmword ptr [rcx + 8*rdi + 32], xmm0
	movupd	xmmword ptr [rcx + 8*rdi + 48], xmm1
	add	rdi, 8
	add	rbx, -2
	jne	LBB171_1100
	test	r8, r8
	je	LBB171_1103
LBB171_1102:
	movupd	xmm0, xmmword ptr [rdx + 8*rdi]
	movupd	xmm1, xmmword ptr [rdx + 8*rdi + 16]
	movupd	xmm2, xmmword ptr [rcx + 8*rdi]
	mulpd	xmm2, xmm0
	movupd	xmm0, xmmword ptr [rcx + 8*rdi + 16]
	mulpd	xmm0, xmm1
	movupd	xmmword ptr [rcx + 8*rdi], xmm2
	movupd	xmmword ptr [rcx + 8*rdi + 16], xmm0
LBB171_1103:
	cmp	r9, rsi
	jne	LBB171_1094
LBB171_1104:
Ltmp2985:
	lea	rdi, [rsp + 5256]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2986:
	mov	eax, dword ptr [rsp + 5296]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 5288]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 5280]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 5272]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 5256]
	mov	rcx, qword ptr [rsp + 5264]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 5248]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 5240]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 5232]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 5224]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 5208]
	mov	rcx, qword ptr [rsp + 5216]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2987:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp2988:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp2989:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2990:
	lea	rax, [rip + l___unnamed_72]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp2991:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp2992:
	mov	qword ptr [rsp + 1424], 4
	mov	qword ptr [rsp + 1432], 0
	mov	qword ptr [rsp + 1440], 0
Ltmp2993:
	lea	rdi, [rsp + 5304]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2994:
	mov	r12, qword ptr [rsp + 464]
	mov	r14, qword ptr [rsp + 480]
	mov	r13d, 4
	xor	esi, esi
	mov	r8d, 4
	xor	ebx, ebx
	mov	rax, qword ptr [rsp + 536]
	cmp	rax, rbx
	ja	LBB171_1116
	jmp	LBB171_1826
LBB171_1110:
	mov	edx, 4
	mov	rcx, r15
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_realloc
LBB171_1111:
	movss	xmm0, dword ptr [rsp + 240]
	mov	r8, rax
LBB171_1112:
	test	r8, r8
	je	LBB171_1797
LBB171_1113:
	mov	qword ptr [rsp + 1424], r8
	shr	r15, 2
	mov	rsi, r15
LBB171_1114:
	movss	dword ptr [r8 + 4*rbx], xmm0
	inc	rbx
	cmp	rbx, 100000
	je	LBB171_1130
	mov	rax, qword ptr [rsp + 536]
	cmp	rax, rbx
	jbe	LBB171_1826
LBB171_1116:
	cmp	r14, rbx
	je	LBB171_1827
	mov	rax, qword ptr [rsp + 520]
	movss	xmm0, dword ptr [rax + 4*rbx]
	divss	xmm0, dword ptr [r12 + 4*rbx]
	cmp	rbx, rsi
	jne	LBB171_1114
	mov	rax, rsi
	inc	rax
	je	LBB171_1828
	lea	rcx, [rsi + rsi]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	ecx, ecx
	mul	r13
	mov	r15, rax
	setno	al
	jo	LBB171_1828
	mov	rdi, r8
	test	rsi, rsi
	cmove	rdi, rsi
	je	LBB171_1125
	shl	rsi, 2
	cmp	rsi, r15
	je	LBB171_1112
	test	rsi, rsi
	jne	LBB171_1110
	test	r15, r15
	je	LBB171_1129
	mov	esi, 4
	mov	rdi, r15
	jmp	LBB171_1127
LBB171_1125:
	mov	cl, al
	shl	rcx, 2
	test	r15, r15
	je	LBB171_1128
	mov	rdi, r15
	mov	rsi, rcx
LBB171_1127:
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_alloc
	jmp	LBB171_1111
LBB171_1128:
	mov	r8, rcx
	test	r8, r8
	jne	LBB171_1113
	jmp	LBB171_1797
LBB171_1129:
	mov	r8d, 4
	jmp	LBB171_1113
LBB171_1130:
	mov	qword ptr [rsp + 1440], rbx
	mov	qword ptr [rsp + 1432], rsi
Ltmp2997:
	lea	rdi, [rsp + 5352]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp2998:
	mov	eax, dword ptr [rsp + 5392]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 5384]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 5376]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 5368]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 5352]
	mov	rcx, qword ptr [rsp + 5360]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 5344]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 5336]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 5328]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 5320]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 5304]
	mov	rcx, qword ptr [rsp + 5312]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp2999:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3000:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3001:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3002:
	lea	rax, [rip + l___unnamed_73]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3003:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3004:
Ltmp3005:
	lea	rdi, [rsp + 5400]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3006:
	mov	rax, qword ptr [rsp + 536]
	cmp	rax, qword ptr [rsp + 480]
	jne	LBB171_1951
	test	rax, rax
	je	LBB171_1151
	mov	rcx, qword ptr [rsp + 520]
	mov	rdx, qword ptr [rsp + 464]
	cmp	rax, 3
	jbe	LBB171_1140
	lea	rsi, [rdx + 4*rax]
	cmp	rcx, rsi
	jae	LBB171_1145
	lea	rsi, [rcx + 4*rax]
	cmp	rdx, rsi
	jae	LBB171_1145
LBB171_1140:
	xor	esi, esi
LBB171_1141:
	mov	rdi, rsi
	test	al, 1
	je	LBB171_1143
	mov	rdi, rsi
	or	rdi, 1
	movss	xmm0, dword ptr [rcx + 4*rsi]
	divss	xmm0, dword ptr [rdx + 4*rsi]
	movss	dword ptr [rcx + 4*rsi], xmm0
LBB171_1143:
	or	rsi, 1
	cmp	rax, rsi
	je	LBB171_1151
	.p2align	4, 0x90
LBB171_1144:
	movss	xmm0, dword ptr [rcx + 4*rdi]
	divss	xmm0, dword ptr [rdx + 4*rdi]
	movss	xmm1, dword ptr [rcx + 4*rdi + 4]
	movss	dword ptr [rcx + 4*rdi], xmm0
	divss	xmm1, dword ptr [rdx + 4*rdi + 4]
	movss	dword ptr [rcx + 4*rdi + 4], xmm1
	add	rdi, 2
	cmp	rax, rdi
	jne	LBB171_1144
	jmp	LBB171_1151
LBB171_1145:
	mov	rsi, rax
	and	rsi, -4
	lea	rbx, [rsi - 4]
	mov	rdi, rbx
	shr	rdi, 2
	inc	rdi
	mov	r8d, edi
	and	r8d, 1
	test	rbx, rbx
	je	LBB171_1790
	sub	rdi, r8
	xor	ebx, ebx
	.p2align	4, 0x90
LBB171_1147:
	movups	xmm0, xmmword ptr [rdx + 4*rbx]
	movups	xmm1, xmmword ptr [rcx + 4*rbx]
	divps	xmm1, xmm0
	movups	xmm0, xmmword ptr [rcx + 4*rbx + 16]
	movups	xmmword ptr [rcx + 4*rbx], xmm1
	movups	xmm1, xmmword ptr [rdx + 4*rbx + 16]
	divps	xmm0, xmm1
	movups	xmmword ptr [rcx + 4*rbx + 16], xmm0
	add	rbx, 8
	add	rdi, -2
	jne	LBB171_1147
	test	r8, r8
	je	LBB171_1150
LBB171_1149:
	movups	xmm0, xmmword ptr [rcx + 4*rbx]
	movups	xmm1, xmmword ptr [rdx + 4*rbx]
	divps	xmm0, xmm1
	movups	xmmword ptr [rcx + 4*rbx], xmm0
LBB171_1150:
	cmp	rax, rsi
	jne	LBB171_1141
LBB171_1151:
Ltmp3009:
	lea	rdi, [rsp + 5448]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3010:
	mov	eax, dword ptr [rsp + 5488]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 5480]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 5472]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 5464]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 5448]
	mov	rcx, qword ptr [rsp + 5456]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 5440]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 5432]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 5424]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 5416]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 5400]
	mov	rcx, qword ptr [rsp + 5408]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3011:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3012:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3013:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3014:
	lea	rax, [rip + l___unnamed_74]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3015:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3016:
Ltmp3017:
	lea	rdi, [rsp + 5496]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3018:
	mov	rax, qword ptr [rsp + 456]
	cmp	rax, qword ptr [rsp + 568]
	jne	LBB171_1952
	test	rax, rax
	je	LBB171_1172
	mov	rcx, qword ptr [rsp + 440]
	mov	rdx, qword ptr [rsp + 552]
	cmp	rax, 1
	je	LBB171_1161
	lea	rsi, [rdx + 8*rax]
	cmp	rcx, rsi
	jae	LBB171_1166
	lea	rsi, [rcx + 8*rax]
	cmp	rdx, rsi
	jae	LBB171_1166
LBB171_1161:
	xor	esi, esi
LBB171_1162:
	mov	rdi, rsi
	test	al, 1
	je	LBB171_1164
	mov	rdi, rsi
	or	rdi, 1
	movsd	xmm0, qword ptr [rcx + 8*rsi]
	divsd	xmm0, qword ptr [rdx + 8*rsi]
	movsd	qword ptr [rcx + 8*rsi], xmm0
LBB171_1164:
	or	rsi, 1
	cmp	rax, rsi
	je	LBB171_1172
	.p2align	4, 0x90
LBB171_1165:
	movsd	xmm0, qword ptr [rcx + 8*rdi]
	divsd	xmm0, qword ptr [rdx + 8*rdi]
	movsd	xmm1, qword ptr [rcx + 8*rdi + 8]
	movsd	qword ptr [rcx + 8*rdi], xmm0
	divsd	xmm1, qword ptr [rdx + 8*rdi + 8]
	movsd	qword ptr [rcx + 8*rdi + 8], xmm1
	add	rdi, 2
	cmp	rax, rdi
	jne	LBB171_1165
	jmp	LBB171_1172
LBB171_1166:
	mov	rsi, rax
	and	rsi, -2
	lea	rbx, [rsi - 2]
	mov	rdi, rbx
	shr	rdi
	inc	rdi
	mov	r8d, edi
	and	r8d, 1
	test	rbx, rbx
	je	LBB171_1781
	sub	rdi, r8
	xor	ebx, ebx
	.p2align	4, 0x90
LBB171_1168:
	movupd	xmm0, xmmword ptr [rdx + 8*rbx]
	movupd	xmm1, xmmword ptr [rcx + 8*rbx]
	divpd	xmm1, xmm0
	movupd	xmm0, xmmword ptr [rcx + 8*rbx + 16]
	movupd	xmmword ptr [rcx + 8*rbx], xmm1
	movupd	xmm1, xmmword ptr [rdx + 8*rbx + 16]
	divpd	xmm0, xmm1
	movupd	xmmword ptr [rcx + 8*rbx + 16], xmm0
	add	rbx, 4
	add	rdi, -2
	jne	LBB171_1168
	test	r8, r8
	je	LBB171_1171
LBB171_1170:
	movupd	xmm0, xmmword ptr [rcx + 8*rbx]
	movupd	xmm1, xmmword ptr [rdx + 8*rbx]
	divpd	xmm0, xmm1
	movupd	xmmword ptr [rcx + 8*rbx], xmm0
LBB171_1171:
	cmp	rax, rsi
	jne	LBB171_1162
LBB171_1172:
Ltmp3021:
	lea	rdi, [rsp + 5544]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3022:
	mov	eax, dword ptr [rsp + 5584]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 5576]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 5568]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 5560]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 5544]
	mov	rcx, qword ptr [rsp + 5552]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 5536]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 5528]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 5520]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 5512]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 5496]
	mov	rcx, qword ptr [rsp + 5504]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3023:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3024:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3025:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3026:
	lea	rax, [rip + l___unnamed_75]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3027:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3028:
	mov	qword ptr [rsp + 1448], 4
	mov	qword ptr [rsp + 1456], 0
	mov	qword ptr [rsp + 1464], 0
Ltmp3029:
	lea	rdi, [rsp + 5592]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3030:
	mov	r14, qword ptr [rsp + 464]
	mov	r13, qword ptr [rsp + 480]
	xor	r12d, r12d
	mov	r15d, 4
	xor	ebx, ebx
	mov	qword ptr [rsp + 240], r14
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	ja	LBB171_1185
	jmp	LBB171_1829
LBB171_1178:
	mov	sil, al
	shl	rsi, 2
	test	r13, r13
	je	LBB171_1193
LBB171_1179:
	mov	rdi, r13
	movss	dword ptr [rsp + 320], xmm0
	call	___rust_alloc
LBB171_1180:
	movss	xmm0, dword ptr [rsp + 320]
	mov	r15, rax
LBB171_1181:
	test	r15, r15
	je	LBB171_1861
LBB171_1182:
	mov	qword ptr [rsp + 1448], r15
	shr	r13, 2
	mov	r12, r13
	mov	r13, r14
	mov	r14, qword ptr [rsp + 240]
LBB171_1183:
	movss	dword ptr [r15 + 4*rbx], xmm0
	inc	rbx
	cmp	rbx, 100000
	je	LBB171_1197
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	jbe	LBB171_1829
LBB171_1185:
	cmp	r13, rbx
	je	LBB171_1830
	mov	rax, qword ptr [rsp + 520]
	movss	xmm0, dword ptr [rax + 4*rbx]
	movd	xmm1, dword ptr [r14 + 4*rbx]
	call	_fmodf
	cmp	rbx, r12
	jne	LBB171_1183
	mov	rax, r12
	inc	rax
	je	LBB171_1831
	mov	r14, r13
	lea	rcx, [r12 + r12]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	esi, esi
	mov	ecx, 4
	mul	rcx
	mov	r13, rax
	setno	al
	jo	LBB171_1831
	mov	rdi, r15
	test	r12, r12
	cmove	rdi, r12
	je	LBB171_1178
	shl	r12, 2
	cmp	r12, r13
	je	LBB171_1181
	test	r12, r12
	je	LBB171_1194
	mov	edx, 4
	mov	rsi, r12
	mov	rcx, r13
	movss	dword ptr [rsp + 320], xmm0
	call	___rust_realloc
	jmp	LBB171_1180
LBB171_1193:
	mov	r15, rsi
	test	r15, r15
	jne	LBB171_1182
	jmp	LBB171_1861
LBB171_1194:
	test	r13, r13
	je	LBB171_1196
	mov	esi, 4
	jmp	LBB171_1179
LBB171_1196:
	mov	r15d, 4
	jmp	LBB171_1182
LBB171_1197:
	mov	qword ptr [rsp + 1464], rbx
	mov	qword ptr [rsp + 1456], r12
Ltmp3033:
	lea	rdi, [rsp + 5640]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3034:
	mov	eax, dword ptr [rsp + 5680]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 5672]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 5664]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 5656]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 5640]
	mov	rcx, qword ptr [rsp + 5648]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 5632]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 5624]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 5616]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 5608]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 5592]
	mov	rcx, qword ptr [rsp + 5600]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3035:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3036:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3037:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3038:
	lea	rax, [rip + l___unnamed_76]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3039:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3040:
Ltmp3041:
	lea	rdi, [rsp + 5688]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3042:
	mov	r14, qword ptr [rsp + 536]
	cmp	r14, qword ptr [rsp + 480]
	jne	LBB171_1953
	test	r14, r14
	je	LBB171_1215
	mov	r13, qword ptr [rsp + 520]
	mov	r15, qword ptr [rsp + 464]
	cmp	r14, 7
	jbe	LBB171_1207
	lea	rax, [r15 + 4*r14]
	cmp	r13, rax
	jae	LBB171_1212
	lea	rax, [r13 + 4*r14]
	cmp	r15, rax
	jae	LBB171_1212
LBB171_1207:
	xor	r12d, r12d
LBB171_1208:
	mov	rbx, r12
	test	r14b, 1
	je	LBB171_1210
	mov	rbx, r12
	or	rbx, 1
	movss	xmm0, dword ptr [r13 + 4*r12]
	movd	xmm1, dword ptr [r15 + 4*r12]
	call	_fmodf
	movss	dword ptr [r13 + 4*r12], xmm0
LBB171_1210:
	or	r12, 1
	cmp	r14, r12
	je	LBB171_1215
	.p2align	4, 0x90
LBB171_1211:
	movss	xmm1, dword ptr [r15 + 4*rbx]
	movss	xmm0, dword ptr [r13 + 4*rbx]
	movss	xmm2, dword ptr [r13 + 4*rbx + 4]
	movss	dword ptr [rsp + 240], xmm2
	call	_fmodf
	movss	dword ptr [r13 + 4*rbx], xmm0
	movd	xmm1, dword ptr [r15 + 4*rbx + 4]
	movss	xmm0, dword ptr [rsp + 240]
	call	_fmodf
	movss	dword ptr [r13 + 4*rbx + 4], xmm0
	add	rbx, 2
	cmp	r14, rbx
	jne	LBB171_1211
	jmp	LBB171_1215
LBB171_1212:
	mov	r12, r14
	and	r12, -8
	xor	ebx, ebx
	.p2align	4, 0x90
LBB171_1213:
	movups	xmm1, xmmword ptr [r13 + 4*rbx]
	movaps	xmmword ptr [rsp + 720], xmm1
	movups	xmm0, xmmword ptr [r13 + 4*rbx + 16]
	movaps	xmmword ptr [rsp + 240], xmm0
	movups	xmm2, xmmword ptr [r15 + 4*rbx]
	movaps	xmmword ptr [rsp + 1104], xmm2
	movups	xmm0, xmmword ptr [r15 + 4*rbx + 16]
	movaps	xmmword ptr [rsp + 320], xmm0
	movaps	xmm0, xmm1
	shufps	xmm0, xmm1, 231
	movaps	xmm1, xmm2
	shufps	xmm1, xmm2, 231
	call	_fmodf
	movaps	xmmword ptr [rsp + 1056], xmm0
	movaps	xmm0, xmmword ptr [rsp + 720]
	movhlps	xmm0, xmm0
	movaps	xmm1, xmmword ptr [rsp + 1104]
	movhlps	xmm1, xmm1
	call	_fmodf
	unpcklps	xmm0, xmmword ptr [rsp + 1056]
	movaps	xmmword ptr [rsp + 1072], xmm0
	movaps	xmm0, xmmword ptr [rsp + 720]
	movaps	xmm1, xmmword ptr [rsp + 1104]
	call	_fmodf
	movaps	xmmword ptr [rsp + 1056], xmm0
	movshdup	xmm0, xmmword ptr [rsp + 720]
	movshdup	xmm1, xmmword ptr [rsp + 1104]
	call	_fmodf
	movaps	xmm1, xmmword ptr [rsp + 1056]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rsp + 1072]
	movaps	xmmword ptr [rsp + 1056], xmm1
	movaps	xmm0, xmmword ptr [rsp + 240]
	shufps	xmm0, xmm0, 231
	movaps	xmm1, xmmword ptr [rsp + 320]
	shufps	xmm1, xmm1, 231
	call	_fmodf
	movaps	xmmword ptr [rsp + 720], xmm0
	movaps	xmm0, xmmword ptr [rsp + 240]
	movhlps	xmm0, xmm0
	movaps	xmm1, xmmword ptr [rsp + 320]
	movhlps	xmm1, xmm1
	call	_fmodf
	unpcklps	xmm0, xmmword ptr [rsp + 720]
	movaps	xmmword ptr [rsp + 720], xmm0
	movaps	xmm0, xmmword ptr [rsp + 240]
	movaps	xmm1, xmmword ptr [rsp + 320]
	call	_fmodf
	movaps	xmmword ptr [rsp + 1104], xmm0
	movshdup	xmm0, xmmword ptr [rsp + 240]
	movshdup	xmm1, xmmword ptr [rsp + 320]
	call	_fmodf
	movaps	xmm1, xmmword ptr [rsp + 1104]
	unpcklps	xmm1, xmm0
	unpcklpd	xmm1, xmmword ptr [rsp + 720]
	movaps	xmm0, xmmword ptr [rsp + 1056]
	movups	xmmword ptr [r13 + 4*rbx], xmm0
	movups	xmmword ptr [r13 + 4*rbx + 16], xmm1
	add	rbx, 8
	cmp	r12, rbx
	jne	LBB171_1213
	cmp	r14, r12
	jne	LBB171_1208
LBB171_1215:
Ltmp3045:
	lea	rdi, [rsp + 5736]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3046:
	mov	eax, dword ptr [rsp + 5776]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 5768]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 5760]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 5752]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 5736]
	mov	rcx, qword ptr [rsp + 5744]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 5728]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 5720]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 5712]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 5704]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 5688]
	mov	rcx, qword ptr [rsp + 5696]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3047:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3048:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3049:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3050:
	lea	rax, [rip + l___unnamed_77]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3051:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3052:
Ltmp3053:
	lea	rdi, [rsp + 5784]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3054:
	mov	r14, qword ptr [rsp + 456]
	cmp	r14, qword ptr [rsp + 568]
	jne	LBB171_1954
	test	r14, r14
	je	LBB171_1233
	mov	r13, qword ptr [rsp + 440]
	mov	r15, qword ptr [rsp + 552]
	cmp	r14, 3
	jbe	LBB171_1225
	lea	rax, [r15 + 8*r14]
	cmp	r13, rax
	jae	LBB171_1230
	lea	rax, [r13 + 8*r14]
	cmp	r15, rax
	jae	LBB171_1230
LBB171_1225:
	xor	r12d, r12d
LBB171_1226:
	mov	rbx, r12
	test	r14b, 1
	je	LBB171_1228
	mov	rbx, r12
	or	rbx, 1
	movsd	xmm0, qword ptr [r13 + 8*r12]
	movq	xmm1, qword ptr [r15 + 8*r12]
	call	_fmod
	movsd	qword ptr [r13 + 8*r12], xmm0
LBB171_1228:
	or	r12, 1
	cmp	r14, r12
	je	LBB171_1233
	.p2align	4, 0x90
LBB171_1229:
	movsd	xmm1, qword ptr [r15 + 8*rbx]
	movsd	xmm0, qword ptr [r13 + 8*rbx]
	movsd	xmm2, qword ptr [r13 + 8*rbx + 8]
	movsd	qword ptr [rsp + 240], xmm2
	call	_fmod
	movsd	qword ptr [r13 + 8*rbx], xmm0
	movq	xmm1, qword ptr [r15 + 8*rbx + 8]
	movsd	xmm0, qword ptr [rsp + 240]
	call	_fmod
	movsd	qword ptr [r13 + 8*rbx + 8], xmm0
	add	rbx, 2
	cmp	r14, rbx
	jne	LBB171_1229
	jmp	LBB171_1233
LBB171_1230:
	mov	r12, r14
	and	r12, -4
	xor	ebx, ebx
	.p2align	4, 0x90
LBB171_1231:
	movups	xmm2, xmmword ptr [r13 + 8*rbx]
	movaps	xmmword ptr [rsp + 1104], xmm2
	movups	xmm0, xmmword ptr [r13 + 8*rbx + 16]
	movaps	xmmword ptr [rsp + 1056], xmm0
	movups	xmm1, xmmword ptr [r15 + 8*rbx]
	movaps	xmmword ptr [rsp + 720], xmm1
	movups	xmm0, xmmword ptr [r15 + 8*rbx + 16]
	movaps	xmmword ptr [rsp + 320], xmm0
	movaps	xmm0, xmm2
	call	_fmod
	movaps	xmmword ptr [rsp + 240], xmm0
	movaps	xmm0, xmmword ptr [rsp + 1104]
	movhlps	xmm0, xmm0
	movaps	xmm1, xmmword ptr [rsp + 720]
	movhlps	xmm1, xmm1
	call	_fmod
	movaps	xmm1, xmmword ptr [rsp + 240]
	movlhps	xmm1, xmm0
	movaps	xmmword ptr [rsp + 240], xmm1
	movaps	xmm0, xmmword ptr [rsp + 1056]
	movaps	xmm1, xmmword ptr [rsp + 320]
	call	_fmod
	movaps	xmmword ptr [rsp + 720], xmm0
	movdqa	xmm0, xmmword ptr [rsp + 1056]
	punpckhqdq	xmm0, xmm0
	movaps	xmm1, xmmword ptr [rsp + 320]
	movhlps	xmm1, xmm1
	call	_fmod
	movdqa	xmm1, xmmword ptr [rsp + 720]
	punpcklqdq	xmm1, xmm0
	movaps	xmm0, xmmword ptr [rsp + 240]
	movups	xmmword ptr [r13 + 8*rbx], xmm0
	movdqu	xmmword ptr [r13 + 8*rbx + 16], xmm1
	add	rbx, 4
	cmp	r12, rbx
	jne	LBB171_1231
	cmp	r14, r12
	jne	LBB171_1226
LBB171_1233:
Ltmp3057:
	lea	rdi, [rsp + 5832]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3058:
	mov	eax, dword ptr [rsp + 5872]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 5864]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 5856]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 5848]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 5832]
	mov	rcx, qword ptr [rsp + 5840]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 5824]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 5816]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 5808]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 5800]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 5784]
	mov	rcx, qword ptr [rsp + 5792]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3059:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3060:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3061:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3062:
	lea	rax, [rip + l___unnamed_78]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3063:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3064:
	mov	qword ptr [rsp + 1472], 4
	mov	qword ptr [rsp + 1480], 0
	mov	qword ptr [rsp + 1488], 0
Ltmp3065:
	lea	rdi, [rsp + 5880]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3066:
	mov	r13d, 4
	xor	r15d, r15d
	mov	r14d, 4
	xor	ebx, ebx
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	ja	LBB171_1246
	jmp	LBB171_1832
LBB171_1239:
	mov	sil, al
	shl	rsi, 2
	test	r12, r12
	je	LBB171_1253
LBB171_1240:
	mov	rdi, r12
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_alloc
LBB171_1241:
	movss	xmm0, dword ptr [rsp + 240]
	mov	r14, rax
LBB171_1242:
	test	r14, r14
	je	LBB171_1849
LBB171_1243:
	mov	qword ptr [rsp + 1472], r14
	shr	r12, 2
	mov	r15, r12
LBB171_1244:
	movss	dword ptr [r14 + 4*rbx], xmm0
	inc	rbx
	cmp	rbx, 100000
	je	LBB171_1257
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	jbe	LBB171_1832
LBB171_1246:
	mov	rax, qword ptr [rsp + 520]
	movss	xmm0, dword ptr [rax + 4*rbx]
	call	_sinf
	cmp	rbx, r15
	jne	LBB171_1244
	mov	rax, r15
	inc	rax
	je	LBB171_1833
	lea	rcx, [r15 + r15]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	esi, esi
	mul	r13
	mov	r12, rax
	setno	al
	jo	LBB171_1833
	mov	rdi, r14
	test	r15, r15
	cmove	rdi, r15
	je	LBB171_1239
	shl	r15, 2
	cmp	r15, r12
	je	LBB171_1242
	test	r15, r15
	je	LBB171_1254
	mov	edx, 4
	mov	rsi, r15
	mov	rcx, r12
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_realloc
	jmp	LBB171_1241
LBB171_1253:
	mov	r14, rsi
	test	r14, r14
	jne	LBB171_1243
	jmp	LBB171_1849
LBB171_1254:
	test	r12, r12
	je	LBB171_1256
	mov	esi, 4
	jmp	LBB171_1240
LBB171_1256:
	mov	r14d, 4
	jmp	LBB171_1243
LBB171_1257:
	mov	qword ptr [rsp + 1488], rbx
	mov	qword ptr [rsp + 1480], r15
Ltmp3069:
	lea	rdi, [rsp + 5928]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3070:
	mov	eax, dword ptr [rsp + 5968]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 5960]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 5952]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 5944]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 5928]
	mov	rcx, qword ptr [rsp + 5936]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 5920]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 5912]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 5904]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 5896]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 5880]
	mov	rcx, qword ptr [rsp + 5888]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3071:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3072:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3073:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3074:
	lea	rax, [rip + l___unnamed_79]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3075:
	lea	r14, [rsp + 64]
	mov	rdi, r14
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3076:
Ltmp3077:
	lea	rdi, [rsp + 5976]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3078:
	mov	r15, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 536]
Ltmp3079:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3080:
	xor	ecx, ecx
	cmp	rbx, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3081:
	mov	qword ptr [rsp], r14
	mov	ecx, 1
	mov	rdi, rbx
	xor	esi, esi
	mov	rdx, rax
	mov	r8, r15
	mov	r9, rbx
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hd00cebf084920e92E
Ltmp3082:
Ltmp3083:
	lea	rdi, [rsp + 6024]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3084:
	mov	eax, dword ptr [rsp + 6064]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 6056]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 6048]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 6040]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 6024]
	mov	rcx, qword ptr [rsp + 6032]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 6016]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 6008]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 6000]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 5992]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 5976]
	mov	rcx, qword ptr [rsp + 5984]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3085:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3086:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3087:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3088:
	lea	rax, [rip + l___unnamed_80]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3089:
	lea	r14, [rsp + 64]
	mov	rdi, r14
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3090:
Ltmp3091:
	lea	rdi, [rsp + 6072]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3092:
	mov	r15, qword ptr [rsp + 440]
	mov	rbx, qword ptr [rsp + 456]
Ltmp3093:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3094:
	xor	ecx, ecx
	cmp	rbx, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3095:
	mov	qword ptr [rsp], r14
	mov	ecx, 1
	mov	rdi, rbx
	xor	esi, esi
	mov	rdx, rax
	mov	r8, r15
	mov	r9, rbx
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h333b34283e7d4003E
Ltmp3096:
Ltmp3097:
	lea	rdi, [rsp + 6120]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3098:
	mov	eax, dword ptr [rsp + 6160]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 6152]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 6144]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 6136]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 6120]
	mov	rcx, qword ptr [rsp + 6128]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 6112]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 6104]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 6096]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 6088]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 6072]
	mov	rcx, qword ptr [rsp + 6080]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3099:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3100:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3101:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3102:
	lea	rax, [rip + l___unnamed_81]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3103:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3104:
	mov	qword ptr [rsp + 1496], 4
	mov	qword ptr [rsp + 1504], 0
	mov	qword ptr [rsp + 1512], 0
Ltmp3105:
	lea	rdi, [rsp + 6168]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3106:
	mov	r13d, 4
	xor	r15d, r15d
	mov	r14d, 4
	xor	ebx, ebx
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	ja	LBB171_1284
	jmp	LBB171_1834
LBB171_1277:
	mov	sil, al
	shl	rsi, 2
	test	r12, r12
	je	LBB171_1291
LBB171_1278:
	mov	rdi, r12
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_alloc
LBB171_1279:
	movss	xmm0, dword ptr [rsp + 240]
	mov	r14, rax
LBB171_1280:
	test	r14, r14
	je	LBB171_1849
LBB171_1281:
	mov	qword ptr [rsp + 1496], r14
	shr	r12, 2
	mov	r15, r12
LBB171_1282:
	movss	dword ptr [r14 + 4*rbx], xmm0
	inc	rbx
	cmp	rbx, 100000
	je	LBB171_1295
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	jbe	LBB171_1834
LBB171_1284:
	mov	rax, qword ptr [rsp + 520]
	movss	xmm0, dword ptr [rax + 4*rbx]
	call	_cosf
	cmp	rbx, r15
	jne	LBB171_1282
	mov	rax, r15
	inc	rax
	je	LBB171_1835
	lea	rcx, [r15 + r15]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	esi, esi
	mul	r13
	mov	r12, rax
	setno	al
	jo	LBB171_1835
	mov	rdi, r14
	test	r15, r15
	cmove	rdi, r15
	je	LBB171_1277
	shl	r15, 2
	cmp	r15, r12
	je	LBB171_1280
	test	r15, r15
	je	LBB171_1292
	mov	edx, 4
	mov	rsi, r15
	mov	rcx, r12
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_realloc
	jmp	LBB171_1279
LBB171_1291:
	mov	r14, rsi
	test	r14, r14
	jne	LBB171_1281
	jmp	LBB171_1849
LBB171_1292:
	test	r12, r12
	je	LBB171_1294
	mov	esi, 4
	jmp	LBB171_1278
LBB171_1294:
	mov	r14d, 4
	jmp	LBB171_1281
LBB171_1295:
	mov	qword ptr [rsp + 1512], rbx
	mov	qword ptr [rsp + 1504], r15
Ltmp3109:
	lea	rdi, [rsp + 6216]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3110:
	mov	eax, dword ptr [rsp + 6256]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 6248]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 6240]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 6232]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 6216]
	mov	rcx, qword ptr [rsp + 6224]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 6208]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 6200]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 6192]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 6184]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 6168]
	mov	rcx, qword ptr [rsp + 6176]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3111:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3112:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3113:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3114:
	lea	rax, [rip + l___unnamed_82]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3115:
	lea	r14, [rsp + 64]
	mov	rdi, r14
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3116:
Ltmp3117:
	lea	rdi, [rsp + 6264]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3118:
	mov	r15, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 536]
Ltmp3119:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3120:
	xor	ecx, ecx
	cmp	rbx, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3121:
	mov	qword ptr [rsp], r14
	mov	ecx, 1
	mov	rdi, rbx
	xor	esi, esi
	mov	rdx, rax
	mov	r8, r15
	mov	r9, rbx
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf17d0abb9471ca78E
Ltmp3122:
Ltmp3123:
	lea	rdi, [rsp + 6312]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3124:
	mov	eax, dword ptr [rsp + 6352]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 6344]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 6336]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 6328]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 6312]
	mov	rcx, qword ptr [rsp + 6320]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 6304]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 6296]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 6288]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 6280]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 6264]
	mov	rcx, qword ptr [rsp + 6272]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3125:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3126:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3127:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3128:
	lea	rax, [rip + l___unnamed_83]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3129:
	lea	r14, [rsp + 64]
	mov	rdi, r14
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3130:
Ltmp3131:
	lea	rdi, [rsp + 6360]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3132:
	mov	r15, qword ptr [rsp + 440]
	mov	rbx, qword ptr [rsp + 456]
Ltmp3133:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3134:
	xor	ecx, ecx
	cmp	rbx, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3135:
	mov	qword ptr [rsp], r14
	mov	ecx, 1
	mov	rdi, rbx
	xor	esi, esi
	mov	rdx, rax
	mov	r8, r15
	mov	r9, rbx
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hf409ee847d2de198E
Ltmp3136:
Ltmp3137:
	lea	rdi, [rsp + 6408]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3138:
	mov	eax, dword ptr [rsp + 6448]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 6440]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 6432]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 6424]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 6408]
	mov	rcx, qword ptr [rsp + 6416]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 6400]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 6392]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 6384]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 6376]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 6360]
	mov	rcx, qword ptr [rsp + 6368]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3139:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3140:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3141:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3142:
	lea	rax, [rip + l___unnamed_84]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3143:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3144:
	mov	qword ptr [rsp + 1520], 4
	mov	qword ptr [rsp + 1528], 0
	mov	qword ptr [rsp + 1536], 0
Ltmp3145:
	lea	rdi, [rsp + 6456]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3146:
	mov	r13d, 4
	xor	r15d, r15d
	mov	r14d, 4
	xor	ebx, ebx
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	ja	LBB171_1322
	jmp	LBB171_1836
LBB171_1315:
	mov	sil, al
	shl	rsi, 2
	test	r12, r12
	je	LBB171_1329
LBB171_1316:
	mov	rdi, r12
	movss	dword ptr [rsp + 320], xmm0
	call	___rust_alloc
LBB171_1317:
	movss	xmm0, dword ptr [rsp + 320]
	mov	r14, rax
LBB171_1318:
	test	r14, r14
	je	LBB171_1849
LBB171_1319:
	mov	qword ptr [rsp + 1520], r14
	shr	r12, 2
	mov	r15, r12
LBB171_1320:
	movss	xmm1, dword ptr [rsp + 240]
	divss	xmm1, xmm0
	movss	dword ptr [r14 + 4*rbx], xmm1
	inc	rbx
	cmp	rbx, 100000
	je	LBB171_1333
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	jbe	LBB171_1836
LBB171_1322:
	mov	rax, qword ptr [rsp + 520]
	movss	xmm0, dword ptr [rax + 4*rbx]
	movss	dword ptr [rsp + 320], xmm0
	call	_sinf
	movss	dword ptr [rsp + 240], xmm0
	movss	xmm0, dword ptr [rsp + 320]
	call	_cosf
	cmp	rbx, r15
	jne	LBB171_1320
	mov	rax, r15
	inc	rax
	je	LBB171_1837
	lea	rcx, [r15 + r15]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	esi, esi
	mul	r13
	mov	r12, rax
	setno	al
	jo	LBB171_1837
	mov	rdi, r14
	test	r15, r15
	cmove	rdi, r15
	je	LBB171_1315
	shl	r15, 2
	cmp	r15, r12
	je	LBB171_1318
	test	r15, r15
	je	LBB171_1330
	mov	edx, 4
	mov	rsi, r15
	mov	rcx, r12
	movss	dword ptr [rsp + 320], xmm0
	call	___rust_realloc
	jmp	LBB171_1317
LBB171_1329:
	mov	r14, rsi
	test	r14, r14
	jne	LBB171_1319
	jmp	LBB171_1849
LBB171_1330:
	test	r12, r12
	je	LBB171_1332
	mov	esi, 4
	jmp	LBB171_1316
LBB171_1332:
	mov	r14d, 4
	jmp	LBB171_1319
LBB171_1333:
	mov	qword ptr [rsp + 1536], rbx
	mov	qword ptr [rsp + 1528], r15
Ltmp3149:
	lea	rdi, [rsp + 6504]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3150:
	mov	eax, dword ptr [rsp + 6544]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 6536]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 6528]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 6520]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 6504]
	mov	rcx, qword ptr [rsp + 6512]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 6496]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 6488]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 6480]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 6472]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 6456]
	mov	rcx, qword ptr [rsp + 6464]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3151:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3152:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3153:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3154:
	lea	rax, [rip + l___unnamed_85]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3155:
	lea	r14, [rsp + 64]
	mov	rdi, r14
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3156:
Ltmp3157:
	lea	rdi, [rsp + 6552]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3158:
	mov	r15, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 536]
Ltmp3159:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3160:
	xor	ecx, ecx
	cmp	rbx, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3161:
	mov	qword ptr [rsp], r14
	mov	ecx, 1
	mov	rdi, rbx
	xor	esi, esi
	mov	rdx, rax
	mov	r8, r15
	mov	r9, rbx
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hed49352b02a73d05E
Ltmp3162:
Ltmp3163:
	lea	rdi, [rsp + 6600]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3164:
	mov	eax, dword ptr [rsp + 6640]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 6632]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 6624]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 6616]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 6600]
	mov	rcx, qword ptr [rsp + 6608]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 6592]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 6584]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 6576]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 6568]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 6552]
	mov	rcx, qword ptr [rsp + 6560]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3165:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3166:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3167:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3168:
	lea	rax, [rip + l___unnamed_86]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3169:
	lea	r14, [rsp + 64]
	mov	rdi, r14
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3170:
Ltmp3171:
	lea	rdi, [rsp + 6648]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3172:
	mov	r15, qword ptr [rsp + 440]
	mov	rbx, qword ptr [rsp + 456]
Ltmp3173:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3174:
	xor	ecx, ecx
	cmp	rbx, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3175:
	mov	qword ptr [rsp], r14
	mov	ecx, 1
	mov	rdi, rbx
	xor	esi, esi
	mov	rdx, rax
	mov	r8, r15
	mov	r9, rbx
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h7832ac13ae304cccE
Ltmp3176:
Ltmp3177:
	lea	rdi, [rsp + 6696]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3178:
	mov	eax, dword ptr [rsp + 6736]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 6728]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 6720]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 6712]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 6696]
	mov	rcx, qword ptr [rsp + 6704]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 6688]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 6680]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 6672]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 6664]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 6648]
	mov	rcx, qword ptr [rsp + 6656]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3179:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3180:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3181:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3182:
	lea	rax, [rip + l___unnamed_87]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3183:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3184:
	mov	qword ptr [rsp + 1544], 4
	mov	qword ptr [rsp + 1552], 0
	mov	qword ptr [rsp + 1560], 0
Ltmp3185:
	lea	rdi, [rsp + 6744]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3186:
	mov	r13d, 4
	xor	r15d, r15d
	mov	r14d, 4
	xor	ebx, ebx
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	ja	LBB171_1360
	jmp	LBB171_1838
LBB171_1353:
	mov	sil, al
	shl	rsi, 2
	test	r12, r12
	je	LBB171_1367
LBB171_1354:
	mov	rdi, r12
	movss	dword ptr [rsp + 320], xmm0
	call	___rust_alloc
LBB171_1355:
	movss	xmm0, dword ptr [rsp + 320]
	mov	r14, rax
LBB171_1356:
	test	r14, r14
	je	LBB171_1849
LBB171_1357:
	mov	qword ptr [rsp + 1544], r14
	shr	r12, 2
	mov	r15, r12
LBB171_1358:
	movss	xmm1, dword ptr [rsp + 240]
	divss	xmm1, xmm0
	movss	dword ptr [r14 + 4*rbx], xmm1
	inc	rbx
	cmp	rbx, 100000
	je	LBB171_1371
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	jbe	LBB171_1838
LBB171_1360:
	mov	rax, qword ptr [rsp + 520]
	movss	xmm0, dword ptr [rax + 4*rbx]
	movss	dword ptr [rsp + 320], xmm0
	call	_cosf
	movss	dword ptr [rsp + 240], xmm0
	movss	xmm0, dword ptr [rsp + 320]
	call	_sinf
	cmp	rbx, r15
	jne	LBB171_1358
	mov	rax, r15
	inc	rax
	je	LBB171_1839
	lea	rcx, [r15 + r15]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	esi, esi
	mul	r13
	mov	r12, rax
	setno	al
	jo	LBB171_1839
	mov	rdi, r14
	test	r15, r15
	cmove	rdi, r15
	je	LBB171_1353
	shl	r15, 2
	cmp	r15, r12
	je	LBB171_1356
	test	r15, r15
	je	LBB171_1368
	mov	edx, 4
	mov	rsi, r15
	mov	rcx, r12
	movss	dword ptr [rsp + 320], xmm0
	call	___rust_realloc
	jmp	LBB171_1355
LBB171_1367:
	mov	r14, rsi
	test	r14, r14
	jne	LBB171_1357
	jmp	LBB171_1849
LBB171_1368:
	test	r12, r12
	je	LBB171_1370
	mov	esi, 4
	jmp	LBB171_1354
LBB171_1370:
	mov	r14d, 4
	jmp	LBB171_1357
LBB171_1371:
	mov	qword ptr [rsp + 1560], rbx
	mov	qword ptr [rsp + 1552], r15
Ltmp3189:
	lea	rdi, [rsp + 6792]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3190:
	mov	eax, dword ptr [rsp + 6832]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 6824]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 6816]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 6808]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 6792]
	mov	rcx, qword ptr [rsp + 6800]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 6784]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 6776]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 6768]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 6760]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 6744]
	mov	rcx, qword ptr [rsp + 6752]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3191:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3192:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3193:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3194:
	lea	rax, [rip + l___unnamed_88]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3195:
	lea	r14, [rsp + 64]
	mov	rdi, r14
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3196:
Ltmp3197:
	lea	rdi, [rsp + 6840]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3198:
	mov	r15, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 536]
Ltmp3199:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3200:
	xor	ecx, ecx
	cmp	rbx, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3201:
	mov	qword ptr [rsp], r14
	mov	ecx, 1
	mov	rdi, rbx
	xor	esi, esi
	mov	rdx, rax
	mov	r8, r15
	mov	r9, rbx
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17hddeecd8dd3b2af70E
Ltmp3202:
Ltmp3203:
	lea	rdi, [rsp + 6888]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3204:
	mov	eax, dword ptr [rsp + 6928]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 6920]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 6912]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 6904]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 6888]
	mov	rcx, qword ptr [rsp + 6896]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 6880]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 6872]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 6864]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 6856]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 6840]
	mov	rcx, qword ptr [rsp + 6848]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3205:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3206:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3207:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3208:
	lea	rax, [rip + l___unnamed_89]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3209:
	lea	r14, [rsp + 64]
	mov	rdi, r14
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3210:
Ltmp3211:
	lea	rdi, [rsp + 6936]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3212:
	mov	r15, qword ptr [rsp + 440]
	mov	rbx, qword ptr [rsp + 456]
Ltmp3213:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3214:
	xor	ecx, ecx
	cmp	rbx, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3215:
	mov	qword ptr [rsp], r14
	mov	ecx, 1
	mov	rdi, rbx
	xor	esi, esi
	mov	rdx, rax
	mov	r8, r15
	mov	r9, rbx
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h9d5f279b65cc3217E
Ltmp3216:
Ltmp3217:
	lea	rdi, [rsp + 6984]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3218:
	mov	eax, dword ptr [rsp + 7024]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 7016]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 7008]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 7000]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 6984]
	mov	rcx, qword ptr [rsp + 6992]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 6976]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 6968]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 6960]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 6952]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 6936]
	mov	rcx, qword ptr [rsp + 6944]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3219:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3220:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3221:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3222:
	lea	rax, [rip + l___unnamed_90]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3223:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3224:
	mov	qword ptr [rsp + 1568], 4
	mov	qword ptr [rsp + 1576], 0
	mov	qword ptr [rsp + 1584], 0
Ltmp3225:
	lea	rdi, [rsp + 7032]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3226:
	mov	r13d, 4
	xor	r15d, r15d
	mov	r14d, 4
	xor	ebx, ebx
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	ja	LBB171_1398
	jmp	LBB171_1840
LBB171_1391:
	mov	sil, al
	shl	rsi, 2
	test	r12, r12
	je	LBB171_1405
LBB171_1392:
	mov	rdi, r12
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_alloc
LBB171_1393:
	movss	xmm0, dword ptr [rsp + 240]
	mov	r14, rax
LBB171_1394:
	test	r14, r14
	je	LBB171_1849
LBB171_1395:
	mov	qword ptr [rsp + 1568], r14
	shr	r12, 2
	mov	r15, r12
LBB171_1396:
	movss	dword ptr [r14 + 4*rbx], xmm0
	inc	rbx
	cmp	rbx, 100000
	je	LBB171_1409
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	jbe	LBB171_1840
LBB171_1398:
	mov	rax, qword ptr [rsp + 520]
	movss	xmm0, dword ptr [rax + 4*rbx]
	call	_expf
	cmp	rbx, r15
	jne	LBB171_1396
	mov	rax, r15
	inc	rax
	je	LBB171_1841
	lea	rcx, [r15 + r15]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	esi, esi
	mul	r13
	mov	r12, rax
	setno	al
	jo	LBB171_1841
	mov	rdi, r14
	test	r15, r15
	cmove	rdi, r15
	je	LBB171_1391
	shl	r15, 2
	cmp	r15, r12
	je	LBB171_1394
	test	r15, r15
	je	LBB171_1406
	mov	edx, 4
	mov	rsi, r15
	mov	rcx, r12
	movss	dword ptr [rsp + 240], xmm0
	call	___rust_realloc
	jmp	LBB171_1393
LBB171_1405:
	mov	r14, rsi
	test	r14, r14
	jne	LBB171_1395
	jmp	LBB171_1849
LBB171_1406:
	test	r12, r12
	je	LBB171_1408
	mov	esi, 4
	jmp	LBB171_1392
LBB171_1408:
	mov	r14d, 4
	jmp	LBB171_1395
LBB171_1409:
	mov	qword ptr [rsp + 1584], rbx
	mov	qword ptr [rsp + 1576], r15
Ltmp3229:
	lea	rdi, [rsp + 7080]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3230:
	mov	eax, dword ptr [rsp + 7120]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 7112]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 7104]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 7096]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 7080]
	mov	rcx, qword ptr [rsp + 7088]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 7072]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 7064]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 7056]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 7048]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 7032]
	mov	rcx, qword ptr [rsp + 7040]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3231:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3232:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3233:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3234:
	lea	rax, [rip + l___unnamed_91]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3235:
	lea	r14, [rsp + 64]
	mov	rdi, r14
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3236:
Ltmp3237:
	lea	rdi, [rsp + 7128]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3238:
	mov	r15, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 536]
Ltmp3239:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3240:
	xor	ecx, ecx
	cmp	rbx, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3241:
	mov	qword ptr [rsp], r14
	mov	ecx, 1
	mov	rdi, rbx
	xor	esi, esi
	mov	rdx, rax
	mov	r8, r15
	mov	r9, rbx
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h3da02ce22d6600afE
Ltmp3242:
Ltmp3243:
	lea	rdi, [rsp + 7176]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3244:
	mov	eax, dword ptr [rsp + 7216]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 7208]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 7200]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 7192]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 7176]
	mov	rcx, qword ptr [rsp + 7184]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 7168]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 7160]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 7152]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 7144]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 7128]
	mov	rcx, qword ptr [rsp + 7136]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3245:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3246:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3247:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3248:
	lea	rax, [rip + l___unnamed_92]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3249:
	lea	r14, [rsp + 64]
	mov	rdi, r14
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3250:
Ltmp3251:
	lea	rdi, [rsp + 7224]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3252:
	mov	r15, qword ptr [rsp + 440]
	mov	rbx, qword ptr [rsp + 456]
Ltmp3253:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3254:
	xor	ecx, ecx
	cmp	rbx, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3255:
	mov	qword ptr [rsp], r14
	mov	ecx, 1
	mov	rdi, rbx
	xor	esi, esi
	mov	rdx, rax
	mov	r8, r15
	mov	r9, rbx
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17h2395d30d65c44400E
Ltmp3256:
Ltmp3257:
	lea	rdi, [rsp + 7272]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3258:
	mov	eax, dword ptr [rsp + 7312]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 7304]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 7296]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 7288]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 7272]
	mov	rcx, qword ptr [rsp + 7280]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 7264]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 7256]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 7248]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 7240]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 7224]
	mov	rcx, qword ptr [rsp + 7232]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3259:
	lea	r15, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, r15
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3260:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], r15
	mov	qword ptr [rsp + 104], 1
Ltmp3261:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3262:
	lea	rax, [rip + l___unnamed_93]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3263:
	lea	r14, [rsp + 64]
	mov	rdi, r14
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3264:
Ltmp3265:
	lea	rdi, [rsp + 7320]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3266:
	cmp	qword ptr [rsp + 480], 0
	je	LBB171_1955
	mov	rax, qword ptr [rsp + 464]
	mov	qword ptr [rsp + 128], rax
	mov	r12, qword ptr [rsp + 520]
	mov	rbx, qword ptr [rsp + 536]
	mov	qword ptr [rsp + 64], r15
Ltmp3267:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3268:
	xor	ecx, ecx
	cmp	rbx, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3269:
	mov	qword ptr [rsp], r14
	mov	ecx, 1
	mov	rdi, rbx
	xor	esi, esi
	mov	rdx, rax
	mov	r8, r12
	mov	r9, rbx
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17he71c6e485153800aE
Ltmp3270:
Ltmp3271:
	lea	rdi, [rsp + 7368]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3272:
	mov	eax, dword ptr [rsp + 7408]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 7400]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 7392]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 7384]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 7368]
	mov	rcx, qword ptr [rsp + 7376]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 7360]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 7352]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 7344]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 7336]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 7320]
	mov	rcx, qword ptr [rsp + 7328]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3273:
	lea	r15, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, r15
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3274:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], r15
	mov	qword ptr [rsp + 104], 1
Ltmp3275:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3276:
	lea	rax, [rip + l___unnamed_94]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3277:
	lea	r12, [rsp + 64]
	mov	rdi, r12
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3278:
Ltmp3279:
	lea	rdi, [rsp + 7416]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3280:
	mov	r13, qword ptr [rsp + 568]
	test	r13, r13
	je	LBB171_1956
	mov	rax, qword ptr [rsp + 552]
	mov	qword ptr [rsp + 128], rax
	mov	rbx, qword ptr [rsp + 440]
	mov	r14, qword ptr [rsp + 456]
	mov	qword ptr [rsp + 64], r15
Ltmp3281:
	call	__ZN10rayon_core19current_num_threads17h5bd179cab610b796E
Ltmp3282:
	xor	ecx, ecx
	cmp	r14, -1
	sete	cl
	cmp	rax, rcx
	cmovb	rax, rcx
Ltmp3283:
	mov	qword ptr [rsp], r12
	mov	ecx, 1
	mov	rdi, r14
	xor	esi, esi
	mov	rdx, rax
	mov	r8, rbx
	mov	r9, r14
	call	__ZN5rayon4iter8plumbing24bridge_producer_consumer6helper17he2e0ed02bd580b5bE
Ltmp3284:
Ltmp3285:
	lea	rdi, [rsp + 7464]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3286:
	mov	eax, dword ptr [rsp + 7504]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 7496]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 7488]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 7480]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 7464]
	mov	rcx, qword ptr [rsp + 7472]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 7456]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 7448]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 7440]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 7432]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 7416]
	mov	rcx, qword ptr [rsp + 7424]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3287:
	lea	r15, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, r15
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3288:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], r15
	mov	qword ptr [rsp + 104], 1
Ltmp3289:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3290:
	lea	rax, [rip + l___unnamed_95]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3291:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3292:
Ltmp3293:
	lea	rdi, [rsp + 7512]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3294:
	mov	r9, qword ptr [rsp + 536]
	cmp	r9, qword ptr [rsp + 480]
	jne	LBB171_1957
	test	r9, r9
	je	LBB171_1462
	mov	rcx, qword ptr [rsp + 520]
	mov	rdx, qword ptr [rsp + 464]
	cmp	r9, 7
	jbe	LBB171_1449
	lea	rax, [rdx + 4*r9]
	cmp	rcx, rax
	jae	LBB171_1456
	lea	rax, [rcx + 4*r9]
	cmp	rdx, rax
	jae	LBB171_1456
LBB171_1449:
	xor	esi, esi
LBB171_1450:
	mov	rax, rsi
	not	rax
	add	rax, r9
	mov	rdi, r9
	and	rdi, 3
	je	LBB171_1453
	movss	xmm0, dword ptr [rip + LCPI171_3]
	.p2align	4, 0x90
LBB171_1452:
	movss	xmm1, dword ptr [rdx + 4*rsi]
	mulss	xmm1, xmm0
	addss	xmm1, dword ptr [rcx + 4*rsi]
	movss	dword ptr [rcx + 4*rsi], xmm1
	inc	rsi
	dec	rdi
	jne	LBB171_1452
LBB171_1453:
	cmp	rax, 3
	jb	LBB171_1462
	movss	xmm0, dword ptr [rip + LCPI171_3]
	.p2align	4, 0x90
LBB171_1455:
	movss	xmm1, dword ptr [rdx + 4*rsi]
	mulss	xmm1, xmm0
	addss	xmm1, dword ptr [rcx + 4*rsi]
	movss	dword ptr [rcx + 4*rsi], xmm1
	movss	xmm1, dword ptr [rdx + 4*rsi + 4]
	mulss	xmm1, xmm0
	addss	xmm1, dword ptr [rcx + 4*rsi + 4]
	movss	dword ptr [rcx + 4*rsi + 4], xmm1
	movss	xmm1, dword ptr [rdx + 4*rsi + 8]
	mulss	xmm1, xmm0
	addss	xmm1, dword ptr [rcx + 4*rsi + 8]
	movss	dword ptr [rcx + 4*rsi + 8], xmm1
	movss	xmm1, dword ptr [rdx + 4*rsi + 12]
	mulss	xmm1, xmm0
	addss	xmm1, dword ptr [rcx + 4*rsi + 12]
	movss	dword ptr [rcx + 4*rsi + 12], xmm1
	add	rsi, 4
	cmp	r9, rsi
	jne	LBB171_1455
	jmp	LBB171_1462
LBB171_1456:
	mov	rsi, r9
	and	rsi, -8
	lea	rdi, [rsi - 8]
	mov	rax, rdi
	shr	rax, 3
	inc	rax
	mov	r8d, eax
	and	r8d, 1
	test	rdi, rdi
	je	LBB171_1791
	sub	rax, r8
	xor	edi, edi
	movaps	xmm0, xmmword ptr [rip + LCPI171_2]
	.p2align	4, 0x90
LBB171_1458:
	movups	xmm1, xmmword ptr [rdx + 4*rdi]
	movups	xmm2, xmmword ptr [rdx + 4*rdi + 16]
	mulps	xmm1, xmm0
	mulps	xmm2, xmm0
	movups	xmm3, xmmword ptr [rcx + 4*rdi]
	addps	xmm3, xmm1
	movups	xmm1, xmmword ptr [rcx + 4*rdi + 16]
	addps	xmm1, xmm2
	movups	xmm2, xmmword ptr [rcx + 4*rdi + 32]
	movups	xmm4, xmmword ptr [rcx + 4*rdi + 48]
	movups	xmmword ptr [rcx + 4*rdi], xmm3
	movups	xmmword ptr [rcx + 4*rdi + 16], xmm1
	movups	xmm1, xmmword ptr [rdx + 4*rdi + 32]
	movups	xmm3, xmmword ptr [rdx + 4*rdi + 48]
	mulps	xmm1, xmm0
	addps	xmm1, xmm2
	mulps	xmm3, xmm0
	addps	xmm3, xmm4
	movups	xmmword ptr [rcx + 4*rdi + 32], xmm1
	movups	xmmword ptr [rcx + 4*rdi + 48], xmm3
	add	rdi, 16
	add	rax, -2
	jne	LBB171_1458
	test	r8, r8
	je	LBB171_1461
LBB171_1460:
	movups	xmm0, xmmword ptr [rdx + 4*rdi]
	movups	xmm1, xmmword ptr [rdx + 4*rdi + 16]
	movaps	xmm2, xmmword ptr [rip + LCPI171_2]
	mulps	xmm0, xmm2
	mulps	xmm1, xmm2
	movups	xmm2, xmmword ptr [rcx + 4*rdi]
	addps	xmm2, xmm0
	movups	xmm0, xmmword ptr [rcx + 4*rdi + 16]
	addps	xmm0, xmm1
	movups	xmmword ptr [rcx + 4*rdi], xmm2
	movups	xmmword ptr [rcx + 4*rdi + 16], xmm0
LBB171_1461:
	cmp	r9, rsi
	jne	LBB171_1450
LBB171_1462:
Ltmp3297:
	lea	rdi, [rsp + 7560]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3298:
	mov	eax, dword ptr [rsp + 7600]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 7592]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 7584]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 7576]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 7560]
	mov	rcx, qword ptr [rsp + 7568]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 7552]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 7544]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 7536]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 7528]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 7512]
	mov	rcx, qword ptr [rsp + 7520]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3299:
	lea	r15, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, r15
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3300:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], r15
	mov	qword ptr [rsp + 104], 1
Ltmp3301:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3302:
	lea	rax, [rip + l___unnamed_96]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3303:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3304:
Ltmp3305:
	lea	rdi, [rsp + 7608]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3306:
	cmp	r14, r13
	jne	LBB171_1958
	mov	r14, qword ptr [rsp + 552]
	cmp	r13, 3
	jbe	LBB171_1471
	lea	rax, [r14 + 8*r13]
	cmp	rbx, rax
	jae	LBB171_1478
	lea	rax, [rbx + 8*r13]
	cmp	r14, rax
	jae	LBB171_1478
LBB171_1471:
	xor	eax, eax
LBB171_1472:
	mov	rcx, rax
	not	rcx
	add	rcx, r13
	mov	rdx, r13
	and	rdx, 3
	je	LBB171_1475
	movsd	xmm0, qword ptr [rip + LCPI171_5]
	.p2align	4, 0x90
LBB171_1474:
	movsd	xmm1, qword ptr [r14 + 8*rax]
	mulsd	xmm1, xmm0
	addsd	xmm1, qword ptr [rbx + 8*rax]
	movsd	qword ptr [rbx + 8*rax], xmm1
	inc	rax
	dec	rdx
	jne	LBB171_1474
LBB171_1475:
	cmp	rcx, 3
	jb	LBB171_1484
	movsd	xmm0, qword ptr [rip + LCPI171_5]
	.p2align	4, 0x90
LBB171_1477:
	movsd	xmm1, qword ptr [r14 + 8*rax]
	mulsd	xmm1, xmm0
	addsd	xmm1, qword ptr [rbx + 8*rax]
	movsd	qword ptr [rbx + 8*rax], xmm1
	movsd	xmm1, qword ptr [r14 + 8*rax + 8]
	mulsd	xmm1, xmm0
	addsd	xmm1, qword ptr [rbx + 8*rax + 8]
	movsd	qword ptr [rbx + 8*rax + 8], xmm1
	movsd	xmm1, qword ptr [r14 + 8*rax + 16]
	mulsd	xmm1, xmm0
	addsd	xmm1, qword ptr [rbx + 8*rax + 16]
	movsd	qword ptr [rbx + 8*rax + 16], xmm1
	movsd	xmm1, qword ptr [r14 + 8*rax + 24]
	mulsd	xmm1, xmm0
	addsd	xmm1, qword ptr [rbx + 8*rax + 24]
	movsd	qword ptr [rbx + 8*rax + 24], xmm1
	add	rax, 4
	cmp	r13, rax
	jne	LBB171_1477
	jmp	LBB171_1484
LBB171_1478:
	mov	rax, r13
	and	rax, -4
	lea	rcx, [rax - 4]
	mov	rsi, rcx
	shr	rsi, 2
	inc	rsi
	mov	edx, esi
	and	edx, 1
	test	rcx, rcx
	je	LBB171_1501
	sub	rsi, rdx
	xor	ecx, ecx
	movapd	xmm0, xmmword ptr [rip + LCPI171_4]
	.p2align	4, 0x90
LBB171_1480:
	movupd	xmm1, xmmword ptr [r14 + 8*rcx]
	movupd	xmm2, xmmword ptr [r14 + 8*rcx + 16]
	mulpd	xmm1, xmm0
	mulpd	xmm2, xmm0
	movupd	xmm3, xmmword ptr [rbx + 8*rcx]
	addpd	xmm3, xmm1
	movupd	xmm1, xmmword ptr [rbx + 8*rcx + 16]
	addpd	xmm1, xmm2
	movupd	xmm2, xmmword ptr [rbx + 8*rcx + 32]
	movupd	xmm4, xmmword ptr [rbx + 8*rcx + 48]
	movupd	xmmword ptr [rbx + 8*rcx], xmm3
	movupd	xmmword ptr [rbx + 8*rcx + 16], xmm1
	movupd	xmm1, xmmword ptr [r14 + 8*rcx + 32]
	movupd	xmm3, xmmword ptr [r14 + 8*rcx + 48]
	mulpd	xmm1, xmm0
	addpd	xmm1, xmm2
	mulpd	xmm3, xmm0
	addpd	xmm3, xmm4
	movupd	xmmword ptr [rbx + 8*rcx + 32], xmm1
	movupd	xmmword ptr [rbx + 8*rcx + 48], xmm3
	add	rcx, 8
	add	rsi, -2
	jne	LBB171_1480
	test	rdx, rdx
	je	LBB171_1483
LBB171_1482:
	movupd	xmm0, xmmword ptr [r14 + 8*rcx]
	movupd	xmm1, xmmword ptr [r14 + 8*rcx + 16]
	movapd	xmm2, xmmword ptr [rip + LCPI171_4]
	mulpd	xmm0, xmm2
	mulpd	xmm1, xmm2
	movupd	xmm2, xmmword ptr [rbx + 8*rcx]
	addpd	xmm2, xmm0
	movupd	xmm0, xmmword ptr [rbx + 8*rcx + 16]
	addpd	xmm0, xmm1
	movupd	xmmword ptr [rbx + 8*rcx], xmm2
	movupd	xmmword ptr [rbx + 8*rcx + 16], xmm0
LBB171_1483:
	cmp	r13, rax
	jne	LBB171_1472
LBB171_1484:
Ltmp3309:
	lea	rdi, [rsp + 7656]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3310:
	mov	eax, dword ptr [rsp + 7696]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 7688]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 7680]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 7672]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 7656]
	mov	rcx, qword ptr [rsp + 7664]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 7648]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 7640]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 7632]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 7624]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 7608]
	mov	rcx, qword ptr [rsp + 7616]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3311:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3312:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3313:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3314:
	lea	rax, [rip + l___unnamed_97]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3315:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3316:
Ltmp3317:
	lea	rdi, [rsp + 7704]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3318:
	mov	r8, qword ptr [rsp + 536]
	cmp	r8, qword ptr [rsp + 480]
	jne	LBB171_1959
	test	r8, r8
	je	LBB171_1508
	mov	rcx, qword ptr [rsp + 520]
	mov	rdx, qword ptr [rsp + 464]
	cmp	r8, 7
	jbe	LBB171_1494
	lea	rax, [rdx + 4*r8]
	cmp	rcx, rax
	jae	LBB171_1499
	lea	rax, [rcx + 4*r8]
	cmp	rdx, rax
	jae	LBB171_1499
LBB171_1494:
	xor	esi, esi
LBB171_1495:
	mov	rax, rsi
	not	rax
	add	rax, r8
	mov	rdi, r8
	and	rdi, 3
	je	LBB171_1497
	.p2align	4, 0x90
LBB171_1496:
	mov	ebx, dword ptr [rdx + 4*rsi]
	mov	dword ptr [rcx + 4*rsi], ebx
	inc	rsi
	dec	rdi
	jne	LBB171_1496
LBB171_1497:
	cmp	rax, 3
	jb	LBB171_1508
	.p2align	4, 0x90
LBB171_1498:
	mov	eax, dword ptr [rdx + 4*rsi]
	mov	dword ptr [rcx + 4*rsi], eax
	mov	eax, dword ptr [rdx + 4*rsi + 4]
	mov	dword ptr [rcx + 4*rsi + 4], eax
	mov	eax, dword ptr [rdx + 4*rsi + 8]
	mov	dword ptr [rcx + 4*rsi + 8], eax
	mov	eax, dword ptr [rdx + 4*rsi + 12]
	mov	dword ptr [rcx + 4*rsi + 12], eax
	add	rsi, 4
	cmp	r8, rsi
	jne	LBB171_1498
	jmp	LBB171_1508
LBB171_1499:
	mov	rsi, r8
	and	rsi, -8
	lea	rax, [rsi - 8]
	mov	rdi, rax
	shr	rdi, 3
	inc	rdi
	mov	ebx, edi
	and	ebx, 3
	cmp	rax, 24
	jae	LBB171_1502
	xor	eax, eax
	test	rbx, rbx
	jne	LBB171_1505
	jmp	LBB171_1507
LBB171_1501:
	xor	ecx, ecx
	test	rdx, rdx
	jne	LBB171_1482
	jmp	LBB171_1483
LBB171_1502:
	sub	rdi, rbx
	xor	eax, eax
	.p2align	4, 0x90
LBB171_1503:
	movups	xmm0, xmmword ptr [rdx + 4*rax]
	movups	xmm1, xmmword ptr [rdx + 4*rax + 16]
	movups	xmmword ptr [rcx + 4*rax], xmm0
	movups	xmmword ptr [rcx + 4*rax + 16], xmm1
	movups	xmm0, xmmword ptr [rdx + 4*rax + 32]
	movups	xmm1, xmmword ptr [rdx + 4*rax + 48]
	movups	xmmword ptr [rcx + 4*rax + 32], xmm0
	movups	xmmword ptr [rcx + 4*rax + 48], xmm1
	movups	xmm0, xmmword ptr [rdx + 4*rax + 64]
	movups	xmm1, xmmword ptr [rdx + 4*rax + 80]
	movups	xmmword ptr [rcx + 4*rax + 64], xmm0
	movups	xmmword ptr [rcx + 4*rax + 80], xmm1
	movupd	xmm0, xmmword ptr [rdx + 4*rax + 96]
	movups	xmm1, xmmword ptr [rdx + 4*rax + 112]
	movupd	xmmword ptr [rcx + 4*rax + 96], xmm0
	movups	xmmword ptr [rcx + 4*rax + 112], xmm1
	add	rax, 32
	add	rdi, -4
	jne	LBB171_1503
	test	rbx, rbx
	je	LBB171_1507
LBB171_1505:
	lea	rax, [4*rax + 16]
	neg	rbx
	.p2align	4, 0x90
LBB171_1506:
	movupd	xmm0, xmmword ptr [rdx + rax - 16]
	movups	xmm1, xmmword ptr [rdx + rax]
	movupd	xmmword ptr [rcx + rax - 16], xmm0
	movups	xmmword ptr [rcx + rax], xmm1
	add	rax, 32
	inc	rbx
	jne	LBB171_1506
LBB171_1507:
	cmp	r8, rsi
	jne	LBB171_1495
LBB171_1508:
Ltmp3321:
	lea	rdi, [rsp + 7752]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3322:
	mov	eax, dword ptr [rsp + 7792]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 7784]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 7776]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 7768]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 7752]
	mov	rcx, qword ptr [rsp + 7760]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 7744]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 7736]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 7728]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 7720]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 7704]
	mov	rcx, qword ptr [rsp + 7712]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3323:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3324:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3325:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3326:
	lea	rax, [rip + l___unnamed_98]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3327:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3328:
Ltmp3329:
	lea	rdi, [rsp + 7800]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3330:
	mov	rax, qword ptr [rsp + 456]
	cmp	rax, qword ptr [rsp + 568]
	jne	LBB171_1960
	test	rax, rax
	je	LBB171_1531
	mov	rcx, qword ptr [rsp + 440]
	cmp	rax, 3
	jbe	LBB171_1518
	lea	rdx, [r14 + 8*rax]
	cmp	rcx, rdx
	jae	LBB171_1523
	lea	rdx, [rcx + 8*rax]
	cmp	r14, rdx
	jae	LBB171_1523
LBB171_1518:
	xor	edx, edx
LBB171_1519:
	mov	rsi, rdx
	not	rsi
	add	rsi, rax
	mov	rdi, rax
	and	rdi, 3
	je	LBB171_1521
	.p2align	4, 0x90
LBB171_1520:
	mov	rbx, qword ptr [r14 + 8*rdx]
	mov	qword ptr [rcx + 8*rdx], rbx
	inc	rdx
	dec	rdi
	jne	LBB171_1520
LBB171_1521:
	cmp	rsi, 3
	jb	LBB171_1531
	.p2align	4, 0x90
LBB171_1522:
	mov	rsi, qword ptr [r14 + 8*rdx]
	mov	qword ptr [rcx + 8*rdx], rsi
	mov	rsi, qword ptr [r14 + 8*rdx + 8]
	mov	qword ptr [rcx + 8*rdx + 8], rsi
	mov	rsi, qword ptr [r14 + 8*rdx + 16]
	mov	qword ptr [rcx + 8*rdx + 16], rsi
	mov	rsi, qword ptr [r14 + 8*rdx + 24]
	mov	qword ptr [rcx + 8*rdx + 24], rsi
	add	rdx, 4
	cmp	rax, rdx
	jne	LBB171_1522
	jmp	LBB171_1531
LBB171_1523:
	mov	rdx, rax
	and	rdx, -4
	lea	rbx, [rdx - 4]
	mov	rdi, rbx
	shr	rdi, 2
	inc	rdi
	mov	esi, edi
	and	esi, 3
	cmp	rbx, 12
	jae	LBB171_1525
	xor	ebx, ebx
	test	rsi, rsi
	jne	LBB171_1528
	jmp	LBB171_1530
LBB171_1525:
	sub	rdi, rsi
	xor	ebx, ebx
	.p2align	4, 0x90
LBB171_1526:
	movups	xmm0, xmmword ptr [r14 + 8*rbx]
	movups	xmm1, xmmword ptr [r14 + 8*rbx + 16]
	movups	xmmword ptr [rcx + 8*rbx], xmm0
	movups	xmmword ptr [rcx + 8*rbx + 16], xmm1
	movups	xmm0, xmmword ptr [r14 + 8*rbx + 32]
	movups	xmm1, xmmword ptr [r14 + 8*rbx + 48]
	movups	xmmword ptr [rcx + 8*rbx + 32], xmm0
	movups	xmmword ptr [rcx + 8*rbx + 48], xmm1
	movups	xmm0, xmmword ptr [r14 + 8*rbx + 64]
	movups	xmm1, xmmword ptr [r14 + 8*rbx + 80]
	movups	xmmword ptr [rcx + 8*rbx + 64], xmm0
	movups	xmmword ptr [rcx + 8*rbx + 80], xmm1
	movupd	xmm0, xmmword ptr [r14 + 8*rbx + 96]
	movups	xmm1, xmmword ptr [r14 + 8*rbx + 112]
	movupd	xmmword ptr [rcx + 8*rbx + 96], xmm0
	movups	xmmword ptr [rcx + 8*rbx + 112], xmm1
	add	rbx, 16
	add	rdi, -4
	jne	LBB171_1526
	test	rsi, rsi
	je	LBB171_1530
LBB171_1528:
	lea	rdi, [8*rbx + 16]
	neg	rsi
	.p2align	4, 0x90
LBB171_1529:
	movupd	xmm0, xmmword ptr [r14 + rdi - 16]
	movups	xmm1, xmmword ptr [r14 + rdi]
	movupd	xmmword ptr [rcx + rdi - 16], xmm0
	movups	xmmword ptr [rcx + rdi], xmm1
	add	rdi, 32
	inc	rsi
	jne	LBB171_1529
LBB171_1530:
	cmp	rax, rdx
	jne	LBB171_1519
LBB171_1531:
Ltmp3333:
	lea	rdi, [rsp + 7848]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3334:
	mov	eax, dword ptr [rsp + 7888]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 7880]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 7872]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 7864]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 7848]
	mov	rcx, qword ptr [rsp + 7856]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 7840]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 7832]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 7824]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 7816]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 7800]
	mov	rcx, qword ptr [rsp + 7808]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3335:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3336:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3337:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3338:
	lea	rax, [rip + l___unnamed_99]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3339:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3340:
	mov	qword ptr [rsp + 1320], 4
	mov	qword ptr [rsp + 1328], 0
	mov	qword ptr [rsp + 1336], 0
	mov	qword ptr [rsp + 1296], 4
	mov	qword ptr [rsp + 1304], 0
	mov	qword ptr [rsp + 1312], 0
Ltmp3341:
	lea	rdi, [rsp + 7896]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3342:
	mov	rax, qword ptr [rsp + 464]
	mov	qword ptr [rsp + 720], rax
	mov	rax, qword ptr [rsp + 480]
	mov	qword ptr [rsp + 1056], rax
	xor	r12d, r12d
	movss	xmm2, dword ptr [rip + LCPI171_6]
	mov	r13d, 4
	xor	ebx, ebx
	xor	r14d, r14d
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	ja	LBB171_1540
	jmp	LBB171_1842
	.p2align	4, 0x90
LBB171_1537:
	mov	rax, qword ptr [rsp + 1296]
LBB171_1538:
	addss	xmm4, xmm4
	mulss	xmm3, dword ptr [rip + LCPI171_7]
	addss	xmm3, xmm4
	movss	dword ptr [rax + 4*rbx], xmm3
	inc	rbx
	cmp	rbx, 100000
	je	LBB171_1575
	mov	rsi, qword ptr [rsp + 536]
	cmp	rsi, rbx
	jbe	LBB171_1842
LBB171_1540:
	cmp	qword ptr [rsp + 1056], rbx
	je	LBB171_1843
	mov	rax, qword ptr [rsp + 520]
	movss	xmm3, dword ptr [rax + 4*rbx]
	mov	rax, qword ptr [rsp + 720]
	movss	xmm4, dword ptr [rax + 4*rbx]
	cmp	rbx, r14
	jne	LBB171_1556
	mov	rax, r14
	inc	rax
	je	LBB171_1844
	lea	rcx, [r14 + r14]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	esi, esi
	mov	ecx, 4
	mul	rcx
	mov	r15, rax
	setno	al
	jo	LBB171_1844
	mov	rdi, r13
	test	r14, r14
	cmove	rdi, r14
	je	LBB171_1548
	shl	r14, 2
	cmp	r14, r15
	je	LBB171_1554
	movss	dword ptr [rsp + 320], xmm4
	movss	dword ptr [rsp + 240], xmm3
	test	r14, r14
	je	LBB171_1551
	mov	edx, 4
	mov	rsi, r14
	mov	rcx, r15
	call	___rust_realloc
	jmp	LBB171_1553
LBB171_1548:
	mov	sil, al
	shl	rsi, 2
	test	r15, r15
	je	LBB171_1550
	mov	rdi, r15
	movss	dword ptr [rsp + 240], xmm3
	movss	dword ptr [rsp + 320], xmm4
	call	___rust_alloc
	movss	xmm4, dword ptr [rsp + 320]
	movss	xmm3, dword ptr [rsp + 240]
	movss	xmm2, dword ptr [rip + LCPI171_6]
	mov	r13, rax
	test	r13, r13
	jne	LBB171_1555
	jmp	LBB171_1797
LBB171_1550:
	mov	r13, rsi
	test	r13, r13
	jne	LBB171_1555
	jmp	LBB171_1797
LBB171_1551:
	test	r15, r15
	je	LBB171_1573
	mov	esi, 4
	mov	rdi, r15
	call	___rust_alloc
LBB171_1553:
	mov	r13, rax
	movss	xmm2, dword ptr [rip + LCPI171_6]
	movss	xmm3, dword ptr [rsp + 240]
	movss	xmm4, dword ptr [rsp + 320]
LBB171_1554:
	test	r13, r13
	je	LBB171_1797
LBB171_1555:
	mov	qword ptr [rsp + 1320], r13
	shr	r15, 2
	mov	r14, r15
LBB171_1556:
	movaps	xmm0, xmm3
	addss	xmm0, xmm3
	movaps	xmm1, xmm4
	mulss	xmm1, xmm2
	addss	xmm1, xmm0
	movss	dword ptr [r13 + 4*rbx], xmm1
	cmp	rbx, r12
	jne	LBB171_1537
	mov	rax, r12
	inc	rax
	je	LBB171_1845
	lea	rcx, [r12 + r12]
	cmp	rcx, rax
	cmova	rax, rcx
	xor	esi, esi
	mov	ecx, 4
	mul	rcx
	mov	r15, rax
	seto	dl
	setno	cl
	mov	rax, r12
	test	r12, r12
	je	LBB171_1560
	mov	rax, qword ptr [rsp + 1296]
LBB171_1560:
	test	dl, dl
	jne	LBB171_1845
	test	rax, rax
	je	LBB171_1565
	shl	r12, 2
	cmp	r12, r15
	je	LBB171_1571
	test	r12, r12
	je	LBB171_1567
	mov	edx, 4
	mov	rdi, rax
	mov	rsi, r12
	mov	rcx, r15
	movss	dword ptr [rsp + 240], xmm3
	movss	dword ptr [rsp + 320], xmm4
	call	___rust_realloc
	jmp	LBB171_1570
LBB171_1565:
	mov	sil, cl
	shl	rsi, 2
	test	r15, r15
	jne	LBB171_1569
	mov	rax, rsi
	test	rax, rax
	jne	LBB171_1572
	jmp	LBB171_1797
LBB171_1567:
	test	r15, r15
	je	LBB171_1574
	mov	esi, 4
LBB171_1569:
	mov	rdi, r15
	movss	dword ptr [rsp + 240], xmm3
	movss	dword ptr [rsp + 320], xmm4
	call	___rust_alloc
LBB171_1570:
	movss	xmm4, dword ptr [rsp + 320]
	movss	xmm3, dword ptr [rsp + 240]
	movss	xmm2, dword ptr [rip + LCPI171_6]
LBB171_1571:
	test	rax, rax
	je	LBB171_1797
LBB171_1572:
	mov	qword ptr [rsp + 1296], rax
	shr	r15, 2
	mov	r12, r15
	jmp	LBB171_1538
LBB171_1573:
	mov	r13d, 4
	movss	xmm2, dword ptr [rip + LCPI171_6]
	movss	xmm3, dword ptr [rsp + 240]
	movss	xmm4, dword ptr [rsp + 320]
	jmp	LBB171_1555
LBB171_1574:
	mov	eax, 4
	jmp	LBB171_1572
LBB171_1575:
	mov	qword ptr [rsp + 1336], rbx
	mov	qword ptr [rsp + 1328], r14
	mov	qword ptr [rsp + 1312], rbx
	mov	qword ptr [rsp + 1304], r12
Ltmp3345:
	lea	rdi, [rsp + 7944]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3346:
	mov	eax, dword ptr [rsp + 7984]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 7976]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 7968]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 7960]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 7944]
	mov	rcx, qword ptr [rsp + 7952]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 7936]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 7928]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 7920]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 7912]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 7896]
	mov	rcx, qword ptr [rsp + 7904]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3347:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3348:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3349:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3350:
	lea	rax, [rip + l___unnamed_100]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3351:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3352:
Ltmp3353:
	lea	rdi, [rsp + 7992]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3354:
	mov	rax, qword ptr [rsp + 536]
	cmp	rax, qword ptr [rsp + 480]
	jne	LBB171_1961
	test	rax, rax
	movss	xmm4, dword ptr [rip + LCPI171_6]
	je	LBB171_1596
	mov	rcx, qword ptr [rsp + 520]
	mov	rdx, qword ptr [rsp + 464]
	cmp	rax, 3
	jbe	LBB171_1585
	lea	rsi, [rdx + 4*rax]
	cmp	rcx, rsi
	jae	LBB171_1590
	lea	rsi, [rcx + 4*rax]
	cmp	rdx, rsi
	jae	LBB171_1590
LBB171_1585:
	xor	esi, esi
LBB171_1586:
	mov	rdi, rsi
	test	al, 1
	je	LBB171_1588
	mov	rdi, rsi
	or	rdi, 1
	movss	xmm0, dword ptr [rcx + 4*rsi]
	movaps	xmm1, xmm0
	addss	xmm1, xmm0
	movss	xmm2, dword ptr [rdx + 4*rsi]
	mulss	xmm2, xmm4
	addss	xmm2, xmm1
	movss	dword ptr [rcx + 4*rsi], xmm2
	movss	xmm1, dword ptr [rdx + 4*rsi]
	addss	xmm1, xmm1
	mulss	xmm0, xmm4
	subss	xmm1, xmm0
	movss	dword ptr [rdx + 4*rsi], xmm1
LBB171_1588:
	or	rsi, 1
	cmp	rax, rsi
	je	LBB171_1596
	.p2align	4, 0x90
LBB171_1589:
	movss	xmm0, dword ptr [rcx + 4*rdi]
	movaps	xmm1, xmm0
	addss	xmm1, xmm0
	movss	xmm2, dword ptr [rdx + 4*rdi]
	mulss	xmm2, xmm4
	addss	xmm2, xmm1
	movss	dword ptr [rcx + 4*rdi], xmm2
	movss	xmm1, dword ptr [rdx + 4*rdi]
	addss	xmm1, xmm1
	mulss	xmm0, xmm4
	subss	xmm1, xmm0
	movss	dword ptr [rdx + 4*rdi], xmm1
	movss	xmm0, dword ptr [rcx + 4*rdi + 4]
	movaps	xmm1, xmm0
	addss	xmm1, xmm0
	movss	xmm2, dword ptr [rdx + 4*rdi + 4]
	mulss	xmm2, xmm4
	addss	xmm2, xmm1
	movss	dword ptr [rcx + 4*rdi + 4], xmm2
	movss	xmm1, dword ptr [rdx + 4*rdi + 4]
	addss	xmm1, xmm1
	mulss	xmm0, xmm4
	subss	xmm1, xmm0
	movss	dword ptr [rdx + 4*rdi + 4], xmm1
	add	rdi, 2
	cmp	rax, rdi
	jne	LBB171_1589
	jmp	LBB171_1596
LBB171_1590:
	mov	rsi, rax
	and	rsi, -4
	lea	rdi, [rsi - 4]
	mov	rbx, rdi
	shr	rbx, 2
	inc	rbx
	mov	r8d, ebx
	and	r8d, 1
	test	rdi, rdi
	je	LBB171_1792
	sub	rbx, r8
	xor	edi, edi
	movaps	xmm0, xmmword ptr [rip + LCPI171_8]
	.p2align	4, 0x90
LBB171_1592:
	movups	xmm1, xmmword ptr [rcx + 4*rdi]
	movaps	xmm2, xmm1
	addps	xmm2, xmm1
	movups	xmm3, xmmword ptr [rdx + 4*rdi]
	mulps	xmm3, xmm0
	addps	xmm3, xmm2
	movups	xmmword ptr [rcx + 4*rdi], xmm3
	movups	xmm2, xmmword ptr [rdx + 4*rdi]
	movups	xmm3, xmmword ptr [rdx + 4*rdi + 16]
	addps	xmm2, xmm2
	mulps	xmm1, xmm0
	subps	xmm2, xmm1
	movups	xmmword ptr [rdx + 4*rdi], xmm2
	movups	xmm1, xmmword ptr [rcx + 4*rdi + 16]
	movaps	xmm2, xmm1
	addps	xmm2, xmm1
	mulps	xmm3, xmm0
	addps	xmm3, xmm2
	movups	xmmword ptr [rcx + 4*rdi + 16], xmm3
	movups	xmm2, xmmword ptr [rdx + 4*rdi + 16]
	addps	xmm2, xmm2
	mulps	xmm1, xmm0
	subps	xmm2, xmm1
	movups	xmmword ptr [rdx + 4*rdi + 16], xmm2
	add	rdi, 8
	add	rbx, -2
	jne	LBB171_1592
	test	r8, r8
	je	LBB171_1595
LBB171_1594:
	movups	xmm0, xmmword ptr [rcx + 4*rdi]
	movaps	xmm1, xmm0
	addps	xmm1, xmm0
	movups	xmm2, xmmword ptr [rdx + 4*rdi]
	movaps	xmm3, xmmword ptr [rip + LCPI171_8]
	mulps	xmm2, xmm3
	addps	xmm2, xmm1
	movups	xmmword ptr [rcx + 4*rdi], xmm2
	movups	xmm1, xmmword ptr [rdx + 4*rdi]
	addps	xmm1, xmm1
	mulps	xmm0, xmm3
	subps	xmm1, xmm0
	movups	xmmword ptr [rdx + 4*rdi], xmm1
LBB171_1595:
	cmp	rax, rsi
	jne	LBB171_1586
LBB171_1596:
Ltmp3357:
	lea	rdi, [rsp + 8040]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3358:
	mov	eax, dword ptr [rsp + 8080]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 8072]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 8064]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 8056]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 8040]
	mov	rcx, qword ptr [rsp + 8048]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 8032]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 8024]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 8016]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 8008]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 7992]
	mov	rcx, qword ptr [rsp + 8000]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3359:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3360:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3361:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3362:
	lea	rax, [rip + l___unnamed_101]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3363:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3364:
Ltmp3365:
	lea	rdi, [rsp + 8088]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3366:
	mov	rbx, qword ptr [rsp + 456]
	cmp	rbx, qword ptr [rsp + 568]
	jne	LBB171_1962
	test	rbx, rbx
	je	LBB171_1618
	mov	rax, qword ptr [rsp + 440]
	mov	rcx, qword ptr [rsp + 552]
	cmp	rbx, 1
	je	LBB171_1606
	lea	rdx, [rcx + 8*rbx]
	cmp	rax, rdx
	jae	LBB171_1612
	lea	rdx, [rax + 8*rbx]
	cmp	rcx, rdx
	jae	LBB171_1612
LBB171_1606:
	xor	edx, edx
LBB171_1607:
	mov	rsi, rdx
	test	bl, 1
	je	LBB171_1609
	mov	rsi, rdx
	or	rsi, 1
	movsd	xmm0, qword ptr [rax + 8*rdx]
	movapd	xmm1, xmm0
	addsd	xmm1, xmm0
	movsd	xmm2, qword ptr [rip + LCPI171_10]
	movsd	xmm3, qword ptr [rcx + 8*rdx]
	mulsd	xmm3, xmm2
	addsd	xmm3, xmm1
	movsd	qword ptr [rax + 8*rdx], xmm3
	movsd	xmm1, qword ptr [rcx + 8*rdx]
	addsd	xmm1, xmm1
	mulsd	xmm0, xmm2
	subsd	xmm1, xmm0
	movsd	qword ptr [rcx + 8*rdx], xmm1
LBB171_1609:
	or	rdx, 1
	cmp	rbx, rdx
	je	LBB171_1618
	movsd	xmm0, qword ptr [rip + LCPI171_10]
	.p2align	4, 0x90
LBB171_1611:
	movsd	xmm1, qword ptr [rax + 8*rsi]
	movapd	xmm2, xmm1
	addsd	xmm2, xmm1
	movsd	xmm3, qword ptr [rcx + 8*rsi]
	mulsd	xmm3, xmm0
	addsd	xmm3, xmm2
	movsd	qword ptr [rax + 8*rsi], xmm3
	movsd	xmm2, qword ptr [rcx + 8*rsi]
	addsd	xmm2, xmm2
	mulsd	xmm1, xmm0
	subsd	xmm2, xmm1
	movsd	qword ptr [rcx + 8*rsi], xmm2
	movsd	xmm1, qword ptr [rax + 8*rsi + 8]
	movapd	xmm2, xmm1
	addsd	xmm2, xmm1
	movsd	xmm3, qword ptr [rcx + 8*rsi + 8]
	mulsd	xmm3, xmm0
	addsd	xmm3, xmm2
	movsd	qword ptr [rax + 8*rsi + 8], xmm3
	movsd	xmm2, qword ptr [rcx + 8*rsi + 8]
	addsd	xmm2, xmm2
	mulsd	xmm1, xmm0
	subsd	xmm2, xmm1
	movsd	qword ptr [rcx + 8*rsi + 8], xmm2
	add	rsi, 2
	cmp	rbx, rsi
	jne	LBB171_1611
	jmp	LBB171_1618
LBB171_1612:
	mov	rdx, rbx
	and	rdx, -2
	lea	rsi, [rdx - 2]
	mov	rdi, rsi
	shr	rdi
	inc	rdi
	mov	r8d, edi
	and	r8d, 1
	test	rsi, rsi
	je	LBB171_1793
	sub	rdi, r8
	xor	esi, esi
	movapd	xmm0, xmmword ptr [rip + LCPI171_9]
	.p2align	4, 0x90
LBB171_1614:
	movupd	xmm1, xmmword ptr [rax + 8*rsi]
	movapd	xmm2, xmm1
	addpd	xmm2, xmm1
	movupd	xmm3, xmmword ptr [rcx + 8*rsi]
	mulpd	xmm3, xmm0
	addpd	xmm3, xmm2
	movupd	xmmword ptr [rax + 8*rsi], xmm3
	movupd	xmm2, xmmword ptr [rcx + 8*rsi]
	movupd	xmm3, xmmword ptr [rcx + 8*rsi + 16]
	addpd	xmm2, xmm2
	mulpd	xmm1, xmm0
	subpd	xmm2, xmm1
	movupd	xmmword ptr [rcx + 8*rsi], xmm2
	movupd	xmm1, xmmword ptr [rax + 8*rsi + 16]
	movapd	xmm2, xmm1
	addpd	xmm2, xmm1
	mulpd	xmm3, xmm0
	addpd	xmm3, xmm2
	movupd	xmmword ptr [rax + 8*rsi + 16], xmm3
	movupd	xmm2, xmmword ptr [rcx + 8*rsi + 16]
	addpd	xmm2, xmm2
	mulpd	xmm1, xmm0
	subpd	xmm2, xmm1
	movupd	xmmword ptr [rcx + 8*rsi + 16], xmm2
	add	rsi, 4
	add	rdi, -2
	jne	LBB171_1614
	test	r8, r8
	je	LBB171_1617
LBB171_1616:
	movupd	xmm0, xmmword ptr [rax + 8*rsi]
	movapd	xmm1, xmm0
	addpd	xmm1, xmm0
	movupd	xmm2, xmmword ptr [rcx + 8*rsi]
	movapd	xmm3, xmmword ptr [rip + LCPI171_9]
	mulpd	xmm2, xmm3
	addpd	xmm2, xmm1
	movupd	xmmword ptr [rax + 8*rsi], xmm2
	movupd	xmm1, xmmword ptr [rcx + 8*rsi]
	addpd	xmm1, xmm1
	mulpd	xmm0, xmm3
	subpd	xmm1, xmm0
	movupd	xmmword ptr [rcx + 8*rsi], xmm1
LBB171_1617:
	cmp	rbx, rdx
	jne	LBB171_1607
LBB171_1618:
Ltmp3369:
	lea	rdi, [rsp + 8136]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3370:
	mov	eax, dword ptr [rsp + 8176]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 8168]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 8160]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 8152]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 8136]
	mov	rcx, qword ptr [rsp + 8144]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 8128]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 8120]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 8112]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 8104]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 8088]
	mov	rcx, qword ptr [rsp + 8096]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3371:
	lea	r15, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, r15
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3372:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], r15
	mov	qword ptr [rsp + 104], 1
Ltmp3373:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3374:
	lea	rax, [rip + l___unnamed_102]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3375:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3376:
Ltmp3377:
	lea	rdi, [rsp + 8184]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3378:
	cmp	qword ptr [rsp + 536], 0
	je	LBB171_1963
Ltmp3379:
	lea	rdi, [rsp + 8232]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3380:
	mov	eax, dword ptr [rsp + 8272]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 8264]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 8256]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 8248]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 8232]
	mov	rcx, qword ptr [rsp + 8240]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 8224]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 8216]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 8208]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 8200]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 8184]
	mov	rcx, qword ptr [rsp + 8192]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3381:
	lea	r15, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, r15
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3382:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], r15
	mov	qword ptr [rsp + 104], 1
Ltmp3383:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3384:
	lea	rax, [rip + l___unnamed_103]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3385:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3386:
Ltmp3387:
	lea	rdi, [rsp + 8280]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3388:
	test	rbx, rbx
	je	LBB171_1964
Ltmp3389:
	lea	rdi, [rsp + 8328]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3390:
	mov	eax, dword ptr [rsp + 8368]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 8360]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 8352]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 8344]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 8328]
	mov	rcx, qword ptr [rsp + 8336]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 8320]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 8312]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 8304]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 8296]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 8280]
	mov	rcx, qword ptr [rsp + 8288]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3391:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3392:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3393:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3394:
	lea	rax, [rip + l___unnamed_104]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3395:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3396:
Ltmp3397:
	lea	rdi, [rsp + 8376]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3398:
	cmp	qword ptr [rsp + 536], 0
	je	LBB171_1965
Ltmp3399:
	lea	rdi, [rsp + 1208]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3400:
	mov	eax, dword ptr [rsp + 1248]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 1240]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 1232]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 1224]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 1208]
	mov	rcx, qword ptr [rsp + 1216]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 8416]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 8408]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 8400]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 8392]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 8376]
	mov	rcx, qword ptr [rsp + 8384]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3401:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3402:
	mov	qword ptr [rsp + 256], rax
	mov	dword ptr [rsp + 264], edx
	lea	rax, [rsp + 256]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3403:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3404:
	lea	rax, [rip + l___unnamed_105]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 1
	mov	qword ptr [rsp + 80], 0
	lea	rax, [rip + l___unnamed_30]
	mov	qword ptr [rsp + 96], rax
	mov	qword ptr [rsp + 104], 0
Ltmp3405:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3406:
Ltmp3407:
	lea	rdi, [rsp + 1144]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3408:
	cmp	qword ptr [rsp + 456], 0
	je	LBB171_1966
Ltmp3409:
	lea	rdi, [rsp + 256]
	call	__ZN4time3now17h5328e06b278b3d25E
Ltmp3410:
	mov	eax, dword ptr [rsp + 296]
	mov	dword ptr [rsp + 168], eax
	mov	rax, qword ptr [rsp + 288]
	mov	qword ptr [rsp + 160], rax
	mov	rax, qword ptr [rsp + 280]
	mov	qword ptr [rsp + 152], rax
	mov	rax, qword ptr [rsp + 272]
	mov	qword ptr [rsp + 144], rax
	mov	rax, qword ptr [rsp + 256]
	mov	rcx, qword ptr [rsp + 264]
	mov	qword ptr [rsp + 136], rcx
	mov	qword ptr [rsp + 128], rax
	mov	eax, dword ptr [rsp + 1184]
	mov	dword ptr [rsp + 104], eax
	mov	rax, qword ptr [rsp + 1176]
	mov	qword ptr [rsp + 96], rax
	mov	rax, qword ptr [rsp + 1168]
	mov	qword ptr [rsp + 88], rax
	mov	rax, qword ptr [rsp + 1160]
	mov	qword ptr [rsp + 80], rax
	mov	rax, qword ptr [rsp + 1144]
	mov	rcx, qword ptr [rsp + 1152]
	mov	qword ptr [rsp + 72], rcx
	mov	qword ptr [rsp + 64], rax
Ltmp3411:
	lea	rbx, [rsp + 128]
	lea	rsi, [rsp + 64]
	mov	rdi, rbx
	call	__ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h04fbdb86abe16338E
Ltmp3412:
	mov	qword ptr [rsp + 1640], rax
	mov	dword ptr [rsp + 1648], edx
	lea	rax, [rsp + 1640]
	mov	qword ptr [rsp + 128], rax
	mov	rax, qword ptr [rip + __ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b6a88194d66bdcE@GOTPCREL]
	mov	qword ptr [rsp + 136], rax
	lea	rax, [rip + l___unnamed_33]
	mov	qword ptr [rsp + 64], rax
	mov	qword ptr [rsp + 72], 2
	mov	qword ptr [rsp + 80], 0
	mov	qword ptr [rsp + 96], rbx
	mov	qword ptr [rsp + 104], 1
Ltmp3413:
	lea	rdi, [rsp + 64]
	call	__ZN3std2io5stdio6_print17hdea2154009b9e479E
Ltmp3414:
	test	r12, r12
	je	LBB171_1649
	mov	rdi, qword ptr [rsp + 1296]
	test	rdi, rdi
	je	LBB171_1649
	shl	r12, 2
	test	r12, r12
	je	LBB171_1649
	mov	edx, 4
	mov	rsi, r12
	call	___rust_dealloc
LBB171_1649:
	test	r14, r14
	je	LBB171_1653
	mov	rdi, qword ptr [rsp + 1320]
	test	rdi, rdi
	je	LBB171_1653
	shl	r14, 2
	test	r14, r14
	je	LBB171_1653
	mov	edx, 4
	mov	rsi, r14
	call	___rust_dealloc
LBB171_1653:
	mov	rsi, qword ptr [rsp + 1576]
	test	rsi, rsi
	je	LBB171_1657
	mov	rdi, qword ptr [rsp + 1568]
	test	rdi, rdi
	je	LBB171_1657
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1657
	mov	edx, 4
	call	___rust_dealloc
LBB171_1657:
	mov	rsi, qword ptr [rsp + 1552]
	test	rsi, rsi
	je	LBB171_1661
	mov	rdi, qword ptr [rsp + 1544]
	test	rdi, rdi
	je	LBB171_1661
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1661
	mov	edx, 4
	call	___rust_dealloc
LBB171_1661:
	mov	rsi, qword ptr [rsp + 1528]
	test	rsi, rsi
	je	LBB171_1665
	mov	rdi, qword ptr [rsp + 1520]
	test	rdi, rdi
	je	LBB171_1665
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1665
	mov	edx, 4
	call	___rust_dealloc
LBB171_1665:
	mov	rsi, qword ptr [rsp + 1504]
	test	rsi, rsi
	je	LBB171_1669
	mov	rdi, qword ptr [rsp + 1496]
	test	rdi, rdi
	je	LBB171_1669
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1669
	mov	edx, 4
	call	___rust_dealloc
LBB171_1669:
	mov	rsi, qword ptr [rsp + 1480]
	test	rsi, rsi
	je	LBB171_1673
	mov	rdi, qword ptr [rsp + 1472]
	test	rdi, rdi
	je	LBB171_1673
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1673
	mov	edx, 4
	call	___rust_dealloc
LBB171_1673:
	mov	rsi, qword ptr [rsp + 1456]
	test	rsi, rsi
	je	LBB171_1677
	mov	rdi, qword ptr [rsp + 1448]
	test	rdi, rdi
	je	LBB171_1677
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1677
	mov	edx, 4
	call	___rust_dealloc
LBB171_1677:
	mov	rsi, qword ptr [rsp + 1432]
	test	rsi, rsi
	je	LBB171_1681
	mov	rdi, qword ptr [rsp + 1424]
	test	rdi, rdi
	je	LBB171_1681
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1681
	mov	edx, 4
	call	___rust_dealloc
LBB171_1681:
	mov	rsi, qword ptr [rsp + 1408]
	test	rsi, rsi
	je	LBB171_1685
	mov	rdi, qword ptr [rsp + 1400]
	test	rdi, rdi
	je	LBB171_1685
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1685
	mov	edx, 4
	call	___rust_dealloc
LBB171_1685:
	mov	rsi, qword ptr [rsp + 1384]
	test	rsi, rsi
	je	LBB171_1689
	mov	rdi, qword ptr [rsp + 1376]
	test	rdi, rdi
	je	LBB171_1689
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1689
	mov	edx, 4
	call	___rust_dealloc
LBB171_1689:
	mov	rsi, qword ptr [rsp + 1360]
	test	rsi, rsi
	je	LBB171_1693
	mov	rdi, qword ptr [rsp + 1352]
	test	rdi, rdi
	je	LBB171_1693
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1693
	mov	edx, 4
	call	___rust_dealloc
LBB171_1693:
	mov	rsi, qword ptr [rsp + 848]
	test	rsi, rsi
	je	LBB171_1697
	mov	rdi, qword ptr [rsp + 840]
	test	rdi, rdi
	je	LBB171_1697
	shl	rsi, 3
	test	rsi, rsi
	je	LBB171_1697
	mov	edx, 8
	call	___rust_dealloc
LBB171_1697:
	mov	rsi, qword ptr [rsp + 704]
	test	rsi, rsi
	je	LBB171_1701
	mov	rdi, qword ptr [rsp + 696]
	test	rdi, rdi
	je	LBB171_1701
	shl	rsi, 3
	test	rsi, rsi
	je	LBB171_1701
	mov	edx, 8
	call	___rust_dealloc
LBB171_1701:
	mov	rsi, qword ptr [rsp + 824]
	test	rsi, rsi
	je	LBB171_1705
	mov	rdi, qword ptr [rsp + 816]
	test	rdi, rdi
	je	LBB171_1705
	shl	rsi, 3
	test	rsi, rsi
	je	LBB171_1705
	mov	edx, 8
	call	___rust_dealloc
LBB171_1705:
	mov	rsi, qword ptr [rsp + 680]
	test	rsi, rsi
	je	LBB171_1709
	mov	rdi, qword ptr [rsp + 672]
	test	rdi, rdi
	je	LBB171_1709
	shl	rsi, 3
	test	rsi, rsi
	je	LBB171_1709
	mov	edx, 8
	call	___rust_dealloc
LBB171_1709:
	mov	rsi, qword ptr [rsp + 800]
	test	rsi, rsi
	je	LBB171_1713
	mov	rdi, qword ptr [rsp + 792]
	test	rdi, rdi
	je	LBB171_1713
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1713
	mov	edx, 4
	call	___rust_dealloc
LBB171_1713:
	mov	rsi, qword ptr [rsp + 656]
	test	rsi, rsi
	je	LBB171_1717
	mov	rdi, qword ptr [rsp + 648]
	test	rdi, rdi
	je	LBB171_1717
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1717
	mov	edx, 4
	call	___rust_dealloc
LBB171_1717:
	mov	rsi, qword ptr [rsp + 1040]
	test	rsi, rsi
	je	LBB171_1721
	mov	rdi, qword ptr [rsp + 1032]
	test	rdi, rdi
	je	LBB171_1721
	add	rsi, rsi
	je	LBB171_1721
	mov	edx, 2
	call	___rust_dealloc
LBB171_1721:
	mov	rsi, qword ptr [rsp + 1016]
	test	rsi, rsi
	je	LBB171_1725
	mov	rdi, qword ptr [rsp + 1008]
	test	rdi, rdi
	je	LBB171_1725
	add	rsi, rsi
	je	LBB171_1725
	mov	edx, 2
	call	___rust_dealloc
LBB171_1725:
	mov	rdi, qword ptr [rsp + 984]
	test	rdi, rdi
	je	LBB171_1728
	mov	rsi, qword ptr [rsp + 992]
	test	rsi, rsi
	je	LBB171_1728
	mov	edx, 1
	call	___rust_dealloc
LBB171_1728:
	mov	rdi, qword ptr [rsp + 960]
	test	rdi, rdi
	je	LBB171_1731
	mov	rsi, qword ptr [rsp + 968]
	test	rsi, rsi
	je	LBB171_1731
	mov	edx, 1
	call	___rust_dealloc
LBB171_1731:
	mov	rsi, qword ptr [rsp + 776]
	test	rsi, rsi
	je	LBB171_1735
	mov	rdi, qword ptr [rsp + 768]
	test	rdi, rdi
	je	LBB171_1735
	shl	rsi, 3
	test	rsi, rsi
	je	LBB171_1735
	mov	edx, 8
	call	___rust_dealloc
LBB171_1735:
	mov	rsi, qword ptr [rsp + 632]
	test	rsi, rsi
	je	LBB171_1739
	mov	rdi, qword ptr [rsp + 624]
	test	rdi, rdi
	je	LBB171_1739
	shl	rsi, 3
	test	rsi, rsi
	je	LBB171_1739
	mov	edx, 8
	call	___rust_dealloc
LBB171_1739:
	mov	rsi, qword ptr [rsp + 752]
	test	rsi, rsi
	je	LBB171_1743
	mov	rdi, qword ptr [rsp + 744]
	test	rdi, rdi
	je	LBB171_1743
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1743
	mov	edx, 4
	call	___rust_dealloc
LBB171_1743:
	mov	rsi, qword ptr [rsp + 608]
	test	rsi, rsi
	je	LBB171_1747
	mov	rdi, qword ptr [rsp + 600]
	test	rdi, rdi
	je	LBB171_1747
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1747
	mov	edx, 4
	call	___rust_dealloc
LBB171_1747:
	mov	rsi, qword ptr [rsp + 944]
	test	rsi, rsi
	je	LBB171_1751
	mov	rdi, qword ptr [rsp + 936]
	test	rdi, rdi
	je	LBB171_1751
	add	rsi, rsi
	je	LBB171_1751
	mov	edx, 2
	call	___rust_dealloc
LBB171_1751:
	mov	rsi, qword ptr [rsp + 920]
	test	rsi, rsi
	je	LBB171_1755
	mov	rdi, qword ptr [rsp + 912]
	test	rdi, rdi
	je	LBB171_1755
	add	rsi, rsi
	je	LBB171_1755
	mov	edx, 2
	call	___rust_dealloc
LBB171_1755:
	mov	rdi, qword ptr [rsp + 888]
	test	rdi, rdi
	je	LBB171_1758
	mov	rsi, qword ptr [rsp + 896]
	test	rsi, rsi
	je	LBB171_1758
	mov	edx, 1
	call	___rust_dealloc
LBB171_1758:
	mov	rdi, qword ptr [rsp + 864]
	test	rdi, rdi
	je	LBB171_1761
	mov	rsi, qword ptr [rsp + 872]
	test	rsi, rsi
	je	LBB171_1761
	mov	edx, 1
	call	___rust_dealloc
LBB171_1761:
	mov	rsi, qword ptr [rsp + 560]
	test	rsi, rsi
	je	LBB171_1765
	mov	rdi, qword ptr [rsp + 552]
	test	rdi, rdi
	je	LBB171_1765
	shl	rsi, 3
	test	rsi, rsi
	je	LBB171_1765
	mov	edx, 8
	call	___rust_dealloc
LBB171_1765:
	mov	rsi, qword ptr [rsp + 448]
	test	rsi, rsi
	je	LBB171_1769
	mov	rdi, qword ptr [rsp + 440]
	test	rdi, rdi
	je	LBB171_1769
	shl	rsi, 3
	test	rsi, rsi
	je	LBB171_1769
	mov	edx, 8
	call	___rust_dealloc
LBB171_1769:
	mov	rsi, qword ptr [rsp + 472]
	test	rsi, rsi
	je	LBB171_1773
	mov	rdi, qword ptr [rsp + 464]
	test	rdi, rdi
	je	LBB171_1773
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1773
	mov	edx, 4
	call	___rust_dealloc
LBB171_1773:
	mov	rsi, qword ptr [rsp + 528]
	test	rsi, rsi
	je	LBB171_1777
	mov	rdi, qword ptr [rsp + 520]
	test	rdi, rdi
	je	LBB171_1777
	shl	rsi, 2
	test	rsi, rsi
	je	LBB171_1777
	mov	edx, 4
	call	___rust_dealloc
LBB171_1777:
	mov	rax, qword ptr [rsp + 1344]
	dec	qword ptr [rax]
	mov	rdi, qword ptr [rsp + 1344]
	cmp	qword ptr [rdi], 0
	jne	LBB171_1780
	dec	qword ptr [rdi + 8]
	jne	LBB171_1780
	mov	esi, 4168
	mov	edx, 8
	call	___rust_dealloc
LBB171_1780:
	lea	rsp, [rbp - 40]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
LBB171_1781:
	xor	ebx, ebx
	test	r8, r8
	jne	LBB171_1170
	jmp	LBB171_1171
LBB171_1782:
	xor	edi, edi
	test	r8, r8
	jne	LBB171_435
	jmp	LBB171_436
LBB171_1783:
	xor	edi, edi
	test	r8, r8
	jne	LBB171_456
	jmp	LBB171_457
LBB171_1784:
	xor	esi, esi
	test	rbx, rbx
	jne	LBB171_945
	jmp	LBB171_946
LBB171_1785:
	xor	edi, edi
	test	r8, r8
	jne	LBB171_966
	jmp	LBB171_967
LBB171_1786:
	xor	edi, edi
	test	r8, r8
	jne	LBB171_1013
	jmp	LBB171_1014
LBB171_1787:
	xor	edi, edi
	test	r8, r8
	jne	LBB171_1034
	jmp	LBB171_1035
LBB171_1788:
	xor	edi, edi
	test	r8, r8
	jne	LBB171_1081
	jmp	LBB171_1082
LBB171_1789:
	xor	edi, edi
	test	r8, r8
	jne	LBB171_1102
	jmp	LBB171_1103
LBB171_1790:
	xor	ebx, ebx
	test	r8, r8
	jne	LBB171_1149
	jmp	LBB171_1150
LBB171_1791:
	xor	edi, edi
	test	r8, r8
	jne	LBB171_1460
	jmp	LBB171_1461
LBB171_1792:
	xor	edi, edi
	test	r8, r8
	jne	LBB171_1594
	jmp	LBB171_1595
LBB171_1793:
	xor	esi, esi
	test	r8, r8
	jne	LBB171_1616
	jmp	LBB171_1617
LBB171_1794:
Ltmp3562:
	lea	rdx, [rip + l___unnamed_106]
	mov	rsi, rdi
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3563:
	jmp	LBB171_1796
LBB171_1795:
Ltmp3474:
	lea	rdx, [rip + l___unnamed_107]
	mov	rsi, rdi
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3475:
LBB171_1796:
	ud2
LBB171_1797:
	mov	esi, 4
	mov	rdi, r15
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB171_1798:
	mov	rax, qword ptr [rsp + 1192]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 1136]
	mov	qword ptr [rsp + 456], rax
	mov	rax, qword ptr [rsp + 1096]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 1120]
	mov	qword ptr [rsp + 880], rax
	mov	qword ptr [rsp + 904], r13
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3610:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3611:
	jmp	LBB171_1796
LBB171_1799:
	mov	qword ptr [rsp + 480], rdx
	mov	rax, qword ptr [rsp + 1136]
	mov	qword ptr [rsp + 456], rax
	mov	rax, qword ptr [rsp + 1096]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 1120]
	mov	qword ptr [rsp + 880], rax
	mov	qword ptr [rsp + 904], r13
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	qword ptr [rsp + 712], r12
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3608:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3609:
	jmp	LBB171_1796
LBB171_1800:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	qword ptr [rsp + 456], rdi
	mov	rax, qword ptr [rsp + 1096]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 1120]
	mov	qword ptr [rsp + 880], rax
	mov	qword ptr [rsp + 904], r13
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	qword ptr [rsp + 712], r12
	mov	qword ptr [rsp + 856], r14
Ltmp3606:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3607:
	jmp	LBB171_1796
LBB171_1801:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	rax, qword ptr [rsp + 1096]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 1120]
	mov	qword ptr [rsp + 880], rax
	mov	qword ptr [rsp + 904], r13
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3604:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3605:
	jmp	LBB171_1796
LBB171_1802:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3598:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3599:
	jmp	LBB171_1796
LBB171_1803:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3596:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3597:
	jmp	LBB171_1796
LBB171_1804:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3594:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3595:
	jmp	LBB171_1796
LBB171_1805:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3592:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3593:
	jmp	LBB171_1796
LBB171_1806:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3590:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3591:
	jmp	LBB171_1796
LBB171_1807:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	qword ptr [rsp + 784], rdi
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3588:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3589:
	jmp	LBB171_1796
LBB171_1808:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	qword ptr [rsp + 1024], rdi
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3582:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3583:
	jmp	LBB171_1796
LBB171_1809:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	qword ptr [rsp + 1048], rdi
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3580:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3581:
	jmp	LBB171_1796
LBB171_1810:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 720]
	mov	qword ptr [rsp + 1048], rax
	mov	qword ptr [rsp + 664], rdi
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3578:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3579:
	jmp	LBB171_1796
LBB171_1811:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 720]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 1128]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3576:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3577:
	jmp	LBB171_1796
LBB171_1812:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 720]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 1128]
	mov	qword ptr [rsp + 664], rax
	mov	qword ptr [rsp + 808], r8
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3574:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3575:
	jmp	LBB171_1796
LBB171_1813:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	rax, qword ptr [rsp + 1264]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 720]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 1128]
	mov	qword ptr [rsp + 664], rax
	mov	qword ptr [rsp + 808], r8
	mov	qword ptr [rsp + 688], r15
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	qword ptr [rsp + 712], r12
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3572:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3573:
	jmp	LBB171_1796
LBB171_1814:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	rax, qword ptr [rsp + 1264]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	qword ptr [rsp + 1048], r10
	mov	rax, qword ptr [rsp + 1128]
	mov	qword ptr [rsp + 664], rax
	mov	qword ptr [rsp + 808], r8
	mov	qword ptr [rsp + 688], r15
	mov	qword ptr [rsp + 832], rbx
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	qword ptr [rsp + 856], r12
Ltmp3570:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3571:
	jmp	LBB171_1796
LBB171_1815:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	rax, qword ptr [rsp + 1264]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	qword ptr [rsp + 1024], r15
	mov	qword ptr [rsp + 1048], r10
	mov	qword ptr [rsp + 664], r14
	mov	qword ptr [rsp + 808], r8
	mov	rax, qword ptr [rsp + 1256]
	mov	qword ptr [rsp + 688], rax
	mov	qword ptr [rsp + 832], rbx
	mov	qword ptr [rsp + 712], r9
	mov	qword ptr [rsp + 856], r12
Ltmp3568:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3569:
	jmp	LBB171_1796
LBB171_1816:
Ltmp2675:
	lea	rdx, [rip + l___unnamed_108]
	mov	rsi, rdi
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp2676:
	jmp	LBB171_1796
LBB171_1817:
	mov	qword ptr [rsp + 1368], rbx
	mov	qword ptr [rsp + 1360], rsi
Ltmp2887:
	lea	rdx, [rip + l___unnamed_109]
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp2888:
	jmp	LBB171_1796
LBB171_1818:
	mov	qword ptr [rsp + 1368], rbx
	mov	qword ptr [rsp + 1360], rsi
Ltmp3471:
	lea	rdx, [rip + l___unnamed_110]
	mov	rdi, r14
	mov	rsi, r14
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3472:
	jmp	LBB171_1796
LBB171_1819:
	mov	qword ptr [rsp + 1368], rsi
	mov	qword ptr [rsp + 1360], rsi
Ltmp3469:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3470:
	jmp	LBB171_1796
LBB171_1820:
	mov	qword ptr [rsp + 1392], rbx
	mov	qword ptr [rsp + 1384], rsi
Ltmp2923:
	lea	rdx, [rip + l___unnamed_111]
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp2924:
	jmp	LBB171_1796
LBB171_1821:
	mov	qword ptr [rsp + 1392], rbx
	mov	qword ptr [rsp + 1384], rsi
Ltmp3466:
	lea	rdx, [rip + l___unnamed_112]
	mov	rdi, r14
	mov	rsi, r14
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3467:
	jmp	LBB171_1796
LBB171_1822:
	mov	qword ptr [rsp + 1392], rsi
	mov	qword ptr [rsp + 1384], rsi
Ltmp3464:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3465:
	jmp	LBB171_1796
LBB171_1823:
	mov	qword ptr [rsp + 1416], rbx
	mov	qword ptr [rsp + 1408], rsi
Ltmp2959:
	lea	rdx, [rip + l___unnamed_113]
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp2960:
	jmp	LBB171_1796
LBB171_1824:
	mov	qword ptr [rsp + 1416], rbx
	mov	qword ptr [rsp + 1408], rsi
Ltmp3461:
	lea	rdx, [rip + l___unnamed_114]
	mov	rdi, r14
	mov	rsi, r14
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3462:
	jmp	LBB171_1796
LBB171_1825:
	mov	qword ptr [rsp + 1416], rsi
	mov	qword ptr [rsp + 1408], rsi
Ltmp3459:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3460:
	jmp	LBB171_1796
LBB171_1826:
	mov	qword ptr [rsp + 1440], rbx
	mov	qword ptr [rsp + 1432], rsi
Ltmp2995:
	lea	rdx, [rip + l___unnamed_115]
	mov	rdi, rbx
	mov	rsi, rax
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp2996:
	jmp	LBB171_1796
LBB171_1827:
	mov	qword ptr [rsp + 1440], rbx
	mov	qword ptr [rsp + 1432], rsi
Ltmp3456:
	lea	rdx, [rip + l___unnamed_116]
	mov	rdi, r14
	mov	rsi, r14
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3457:
	jmp	LBB171_1796
LBB171_1828:
	mov	qword ptr [rsp + 1440], rsi
	mov	qword ptr [rsp + 1432], rsi
Ltmp3454:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3455:
	jmp	LBB171_1796
LBB171_1829:
	mov	qword ptr [rsp + 1464], rbx
	mov	qword ptr [rsp + 1456], r12
Ltmp3031:
	lea	rdx, [rip + l___unnamed_117]
	mov	rdi, rbx
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3032:
	jmp	LBB171_1796
LBB171_1830:
	mov	qword ptr [rsp + 1464], rbx
	mov	qword ptr [rsp + 1456], r12
Ltmp3451:
	lea	rdx, [rip + l___unnamed_118]
	mov	rdi, r13
	mov	rsi, r13
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3452:
	jmp	LBB171_1796
LBB171_1831:
	mov	qword ptr [rsp + 1464], r12
	mov	qword ptr [rsp + 1456], r12
Ltmp3449:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3450:
	jmp	LBB171_1796
LBB171_1832:
	mov	qword ptr [rsp + 1488], rbx
	mov	qword ptr [rsp + 1480], r15
Ltmp3067:
	lea	rdx, [rip + l___unnamed_119]
	mov	rdi, rbx
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3068:
	jmp	LBB171_1796
LBB171_1833:
	mov	qword ptr [rsp + 1488], r15
	mov	qword ptr [rsp + 1480], r15
Ltmp3446:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3447:
	jmp	LBB171_1796
LBB171_1834:
	mov	qword ptr [rsp + 1512], rbx
	mov	qword ptr [rsp + 1504], r15
Ltmp3107:
	lea	rdx, [rip + l___unnamed_120]
	mov	rdi, rbx
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3108:
	jmp	LBB171_1796
LBB171_1835:
	mov	qword ptr [rsp + 1512], r15
	mov	qword ptr [rsp + 1504], r15
Ltmp3443:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3444:
	jmp	LBB171_1796
LBB171_1836:
	mov	qword ptr [rsp + 1536], rbx
	mov	qword ptr [rsp + 1528], r15
Ltmp3147:
	lea	rdx, [rip + l___unnamed_121]
	mov	rdi, rbx
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3148:
	jmp	LBB171_1796
LBB171_1837:
	mov	qword ptr [rsp + 1536], r15
	mov	qword ptr [rsp + 1528], r15
Ltmp3440:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3441:
	jmp	LBB171_1796
LBB171_1838:
	mov	qword ptr [rsp + 1560], rbx
	mov	qword ptr [rsp + 1552], r15
Ltmp3187:
	lea	rdx, [rip + l___unnamed_122]
	mov	rdi, rbx
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3188:
	jmp	LBB171_1796
LBB171_1839:
	mov	qword ptr [rsp + 1560], r15
	mov	qword ptr [rsp + 1552], r15
Ltmp3437:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3438:
	jmp	LBB171_1796
LBB171_1840:
	mov	qword ptr [rsp + 1584], rbx
	mov	qword ptr [rsp + 1576], r15
Ltmp3227:
	lea	rdx, [rip + l___unnamed_123]
	mov	rdi, rbx
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3228:
	jmp	LBB171_1796
LBB171_1841:
	mov	qword ptr [rsp + 1584], r15
	mov	qword ptr [rsp + 1576], r15
Ltmp3434:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3435:
	jmp	LBB171_1796
LBB171_1842:
	mov	qword ptr [rsp + 1336], rbx
	mov	qword ptr [rsp + 1328], r14
	mov	qword ptr [rsp + 1312], rbx
	mov	qword ptr [rsp + 1304], r12
Ltmp3343:
	lea	rdx, [rip + l___unnamed_124]
	mov	rdi, rbx
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3344:
	jmp	LBB171_1796
LBB171_1843:
	mov	qword ptr [rsp + 1336], rbx
	mov	qword ptr [rsp + 1328], r14
	mov	qword ptr [rsp + 1312], rbx
	mov	qword ptr [rsp + 1304], r12
Ltmp3427:
	lea	rdx, [rip + l___unnamed_125]
	mov	rdi, qword ptr [rsp + 1056]
	mov	rsi, rdi
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3428:
	jmp	LBB171_1796
LBB171_1844:
	mov	qword ptr [rsp + 1336], r14
	mov	qword ptr [rsp + 1328], r14
	mov	qword ptr [rsp + 1312], rbx
	mov	qword ptr [rsp + 1304], r12
Ltmp3425:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3426:
	jmp	LBB171_1796
LBB171_1845:
	inc	rbx
	mov	qword ptr [rsp + 1336], rbx
	mov	qword ptr [rsp + 1328], r14
	mov	qword ptr [rsp + 1312], r12
	mov	qword ptr [rsp + 1304], r12
Ltmp3423:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3424:
	jmp	LBB171_1796
LBB171_1848:
	mov	qword ptr [rsp + 480], rdx
	mov	qword ptr [rsp + 456], rdi
	mov	rax, qword ptr [rsp + 1096]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 1120]
	mov	qword ptr [rsp + 880], rax
	mov	qword ptr [rsp + 904], r13
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
LBB171_1849:
	mov	esi, 4
	mov	rdi, r12
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB171_1850:
	mov	qword ptr [rsp + 480], rdx
	mov	qword ptr [rsp + 456], rdi
	mov	rax, qword ptr [rsp + 1096]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 1120]
	mov	qword ptr [rsp + 880], rax
	mov	qword ptr [rsp + 904], r13
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	qword ptr [rsp + 712], r12
	jmp	LBB171_1873
LBB171_1851:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	qword ptr [rsp + 456], rdi
	mov	rax, qword ptr [rsp + 1096]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 1120]
	mov	qword ptr [rsp + 880], rax
	mov	qword ptr [rsp + 904], r13
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	qword ptr [rsp + 712], r12
	jmp	LBB171_1876
LBB171_1852:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], rcx
	mov	rax, qword ptr [rsp + 1120]
	mov	qword ptr [rsp + 880], rax
	mov	qword ptr [rsp + 904], r13
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	jmp	LBB171_1875
LBB171_1853:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	qword ptr [rsp + 880], rsi
	mov	rax, qword ptr [rsp + 1200]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3602:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3603:
	jmp	LBB171_1796
LBB171_1854:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	qword ptr [rsp + 904], r13
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3600:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3601:
	jmp	LBB171_1796
LBB171_1855:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 1056]
	jmp	LBB171_1857
LBB171_1856:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
LBB171_1857:
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
	mov	esi, 2
	mov	rdi, r13
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB171_1858:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	jmp	LBB171_1860
LBB171_1859:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
LBB171_1860:
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
LBB171_1861:
	mov	esi, 4
	mov	rdi, r13
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB171_1862:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	qword ptr [rsp + 640], rcx
	jmp	LBB171_1864
LBB171_1863:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
LBB171_1864:
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	jmp	LBB171_1878
LBB171_1865:
	mov	rcx, rax
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	qword ptr [rsp + 976], rcx
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3586:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3587:
	jmp	LBB171_1796
LBB171_1866:
	mov	rcx, rax
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	qword ptr [rsp + 1000], rcx
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
Ltmp3584:
	call	__ZN5alloc7raw_vec17capacity_overflow17h023f34f5bc34c61fE
Ltmp3585:
	jmp	LBB171_1796
LBB171_1867:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	jmp	LBB171_1869
LBB171_1868:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
LBB171_1869:
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
	mov	esi, 2
	mov	rdi, rbx
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB171_1870:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 720]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	jmp	LBB171_1872
LBB171_1871:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 720]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 1128]
LBB171_1872:
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
LBB171_1873:
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
	mov	esi, 4
	mov	rdi, rbx
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB171_1874:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 720]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 1128]
	mov	qword ptr [rsp + 664], rax
	mov	qword ptr [rsp + 808], r8
LBB171_1875:
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
LBB171_1876:
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
	mov	esi, 8
	mov	rdi, rbx
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB171_1877:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	rax, qword ptr [rsp + 1264]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 720]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 1128]
	mov	qword ptr [rsp + 664], rax
	mov	qword ptr [rsp + 808], r8
	mov	qword ptr [rsp + 688], r15
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	qword ptr [rsp + 712], r12
LBB171_1878:
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
	mov	esi, 8
	mov	rdi, r13
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB171_1879:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	rax, qword ptr [rsp + 1264]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 736]
	mov	qword ptr [rsp + 1024], rax
	mov	qword ptr [rsp + 1048], r10
	mov	rax, qword ptr [rsp + 1128]
	mov	qword ptr [rsp + 664], rax
	mov	qword ptr [rsp + 808], r8
	mov	qword ptr [rsp + 688], r15
	mov	qword ptr [rsp + 832], rbx
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	qword ptr [rsp + 856], r12
	mov	esi, 8
	mov	rdi, r14
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB171_1880:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	rax, qword ptr [rsp + 1264]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 592]
	mov	qword ptr [rsp + 1000], rax
	mov	qword ptr [rsp + 1024], r15
	mov	qword ptr [rsp + 1048], r10
	mov	qword ptr [rsp + 664], r14
	mov	qword ptr [rsp + 808], r8
	mov	rax, qword ptr [rsp + 1256]
	mov	qword ptr [rsp + 688], rax
	mov	qword ptr [rsp + 832], rbx
	mov	qword ptr [rsp + 712], r9
	mov	qword ptr [rsp + 856], r12
	mov	esi, 8
	mov	rdi, r13
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB171_1881:
Ltmp3548:
	lea	rdi, [rip + _str.0]
	lea	rdx, [rip + l___unnamed_126]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3549:
	jmp	LBB171_1796
LBB171_1882:
Ltmp3536:
	lea	rdi, [rip + _str.0]
	lea	rdx, [rip + l___unnamed_127]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3537:
	jmp	LBB171_1796
LBB171_1883:
Ltmp2745:
	lea	rdx, [rip + l___unnamed_128]
	mov	rsi, r12
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp2746:
	jmp	LBB171_1796
LBB171_1884:
Ltmp3510:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_129]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3511:
	jmp	LBB171_1796
LBB171_1885:
Ltmp3508:
	lea	rdi, [rip + _str.0]
	lea	rdx, [rip + l___unnamed_130]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3509:
	jmp	LBB171_1796
LBB171_1886:
Ltmp2801:
	lea	rdx, [rip + l___unnamed_131]
	mov	rsi, r12
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp2802:
	jmp	LBB171_1796
LBB171_1887:
Ltmp3494:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_132]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3495:
	jmp	LBB171_1796
LBB171_1888:
Ltmp3492:
	lea	rdi, [rip + _str.0]
	lea	rdx, [rip + l___unnamed_133]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3493:
	jmp	LBB171_1796
LBB171_1890:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	qword ptr [rsp + 880], rsi
	mov	rax, qword ptr [rsp + 1200]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	jmp	LBB171_1892
LBB171_1891:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 1200]
	mov	qword ptr [rsp + 904], rax
	mov	qword ptr [rsp + 928], rcx
LBB171_1892:
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	jmp	LBB171_1894
LBB171_1893:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
LBB171_1894:
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	jmp	LBB171_1896
LBB171_1895:
	mov	rax, qword ptr [rsp + 336]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 352]
	mov	qword ptr [rsp + 456], rax
	mov	qword ptr [rsp + 568], r14
	mov	rax, qword ptr [rsp + 368]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 384]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 416]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 392]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 432]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 488]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 504]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 576]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 584]
LBB171_1896:
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
	mov	esi, 1
	mov	rdi, r13
	call	__ZN5alloc5alloc18handle_alloc_error17hbc0ab0ed90816c07E
LBB171_1897:
Ltmp3566:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_134]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3567:
	jmp	LBB171_1796
LBB171_1898:
Ltmp3564:
	lea	rdx, [rip + l___unnamed_135]
	mov	rdi, rbx
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3565:
	jmp	LBB171_1796
LBB171_1899:
Ltmp2501:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_137]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2502:
	jmp	LBB171_1796
LBB171_1900:
Ltmp2513:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_138]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2514:
	jmp	LBB171_1796
LBB171_1901:
Ltmp3560:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_134]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3561:
	jmp	LBB171_1796
LBB171_1902:
Ltmp3558:
	lea	rdx, [rip + l___unnamed_135]
	mov	rdi, rbx
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3559:
	jmp	LBB171_1796
LBB171_1903:
Ltmp3556:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_139]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3557:
	jmp	LBB171_1796
LBB171_1904:
Ltmp3554:
	lea	rdx, [rip + l___unnamed_140]
	mov	rdi, rbx
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3555:
	jmp	LBB171_1796
LBB171_1905:
Ltmp3552:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_141]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3553:
	jmp	LBB171_1796
LBB171_1906:
Ltmp3550:
	lea	rdx, [rip + l___unnamed_142]
	mov	rdi, r12
	mov	rsi, r14
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3551:
	jmp	LBB171_1796
LBB171_1907:
Ltmp3546:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_143]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3547:
	jmp	LBB171_1796
LBB171_1908:
Ltmp3544:
	lea	rdx, [rip + l___unnamed_144]
	mov	rdi, r15
	mov	rsi, r14
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3545:
	jmp	LBB171_1796
LBB171_1909:
Ltmp3542:
	lea	rdi, [rip + _str.0]
	lea	rdx, [rip + l___unnamed_145]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3543:
	jmp	LBB171_1796
LBB171_1910:
Ltmp3540:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_146]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3541:
	jmp	LBB171_1796
LBB171_1911:
Ltmp3538:
	lea	rdx, [rip + l___unnamed_147]
	mov	rdi, r12
	mov	rsi, r14
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3539:
	jmp	LBB171_1796
LBB171_1912:
Ltmp3534:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_148]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3535:
	jmp	LBB171_1796
LBB171_1913:
Ltmp3532:
	lea	rdx, [rip + l___unnamed_149]
	mov	rdi, r15
	mov	rsi, r14
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3533:
	jmp	LBB171_1796
LBB171_1914:
Ltmp3530:
	lea	rdi, [rip + _str.0]
	lea	rdx, [rip + l___unnamed_150]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3531:
	jmp	LBB171_1796
LBB171_1915:
Ltmp3528:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_151]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3529:
	jmp	LBB171_1796
LBB171_1916:
Ltmp3526:
	lea	rdx, [rip + l___unnamed_152]
	mov	rdi, r15
	mov	rsi, r14
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3527:
	jmp	LBB171_1796
LBB171_1917:
Ltmp3524:
	lea	rdi, [rip + _str.0]
	lea	rdx, [rip + l___unnamed_153]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3525:
	jmp	LBB171_1796
LBB171_1918:
Ltmp2687:
	lea	rdi, [rip + l___unnamed_154]
	lea	rdx, [rip + l___unnamed_155]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2688:
	jmp	LBB171_1796
LBB171_1919:
Ltmp3522:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_156]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3523:
	jmp	LBB171_1796
LBB171_1920:
Ltmp3520:
	lea	rdx, [rip + l___unnamed_157]
	mov	rdi, r15
	mov	rsi, r14
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3521:
	jmp	LBB171_1796
LBB171_1921:
Ltmp2703:
	lea	rdi, [rip + l___unnamed_154]
	lea	rdx, [rip + l___unnamed_158]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2704:
	jmp	LBB171_1796
LBB171_1922:
Ltmp3518:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_159]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3519:
	jmp	LBB171_1796
LBB171_1923:
Ltmp3516:
	lea	rdx, [rip + l___unnamed_160]
	mov	rdi, r15
	mov	rsi, r14
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3517:
	jmp	LBB171_1796
LBB171_1924:
Ltmp2739:
	lea	rdi, [rip + l___unnamed_154]
	lea	rdx, [rip + l___unnamed_161]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2740:
	jmp	LBB171_1796
LBB171_1925:
Ltmp3514:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_162]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3515:
	jmp	LBB171_1796
LBB171_1926:
Ltmp3512:
	lea	rdx, [rip + l___unnamed_163]
	mov	rdi, r14
	mov	rsi, r12
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3513:
	jmp	LBB171_1796
LBB171_1927:
Ltmp2757:
	lea	rdi, [rip + l___unnamed_154]
	lea	rdx, [rip + l___unnamed_164]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2758:
	jmp	LBB171_1796
LBB171_1928:
Ltmp3506:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_165]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3507:
	jmp	LBB171_1796
LBB171_1929:
Ltmp3504:
	lea	rdx, [rip + l___unnamed_166]
	mov	rdi, r15
	mov	rsi, r14
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3505:
	jmp	LBB171_1796
LBB171_1930:
Ltmp3502:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_167]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3503:
	jmp	LBB171_1796
LBB171_1931:
Ltmp3500:
	lea	rdi, [rip + _str.0]
	lea	rdx, [rip + l___unnamed_168]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3501:
	jmp	LBB171_1796
LBB171_1932:
Ltmp2795:
	lea	rdi, [rip + l___unnamed_154]
	lea	rdx, [rip + l___unnamed_169]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2796:
	jmp	LBB171_1796
LBB171_1933:
Ltmp3498:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_170]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3499:
	jmp	LBB171_1796
LBB171_1934:
Ltmp3496:
	lea	rdx, [rip + l___unnamed_171]
	mov	rdi, r14
	mov	rsi, r12
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3497:
	jmp	LBB171_1796
LBB171_1935:
Ltmp2813:
	lea	rdi, [rip + l___unnamed_154]
	lea	rdx, [rip + l___unnamed_172]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2814:
	jmp	LBB171_1796
LBB171_1936:
Ltmp3490:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_173]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3491:
	jmp	LBB171_1796
LBB171_1937:
Ltmp3488:
	lea	rdx, [rip + l___unnamed_174]
	mov	rdi, r15
	mov	rsi, r14
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3489:
	jmp	LBB171_1796
LBB171_1938:
Ltmp3486:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_175]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3487:
	jmp	LBB171_1796
LBB171_1939:
Ltmp3484:
	lea	rdi, [rip + _str.0]
	lea	rdx, [rip + l___unnamed_176]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3485:
	jmp	LBB171_1796
LBB171_1940:
Ltmp2831:
	lea	rdi, [rip + l___unnamed_154]
	lea	rdx, [rip + l___unnamed_177]
	mov	esi, 40
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2832:
	jmp	LBB171_1796
LBB171_1941:
Ltmp3482:
	lea	rdi, [rip + _str.1]
	lea	rdx, [rip + l___unnamed_178]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3483:
	jmp	LBB171_1796
LBB171_1942:
Ltmp3480:
	lea	rdx, [rip + l___unnamed_179]
	mov	rdi, r15
	mov	rsi, r14
	call	__ZN4core5slice20slice_index_len_fail17h550a313151a85135E
Ltmp3481:
	jmp	LBB171_1796
LBB171_1943:
Ltmp3478:
	lea	rdi, [rip + _str.3]
	lea	rdx, [rip + l___unnamed_180]
	mov	esi, 33
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3479:
	jmp	LBB171_1796
LBB171_1944:
Ltmp3476:
	lea	rdi, [rip + _str.0]
	lea	rdx, [rip + l___unnamed_181]
	mov	esi, 28
	call	__ZN4core9panicking5panic17h736ee47a631475c0E
Ltmp3477:
	jmp	LBB171_1796
LBB171_1945:
Ltmp2899:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_182]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2900:
	jmp	LBB171_1796
LBB171_1946:
Ltmp2911:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_183]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2912:
	jmp	LBB171_1796
LBB171_1947:
Ltmp2935:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_184]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2936:
	jmp	LBB171_1796
LBB171_1948:
Ltmp2947:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_185]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2948:
	jmp	LBB171_1796
LBB171_1949:
Ltmp2971:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_186]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2972:
	jmp	LBB171_1796
LBB171_1950:
Ltmp2983:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_187]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp2984:
	jmp	LBB171_1796
LBB171_1951:
Ltmp3007:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_188]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp3008:
	jmp	LBB171_1796
LBB171_1952:
Ltmp3019:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_189]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp3020:
	jmp	LBB171_1796
LBB171_1953:
Ltmp3043:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_190]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp3044:
	jmp	LBB171_1796
LBB171_1954:
Ltmp3055:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_191]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp3056:
	jmp	LBB171_1796
LBB171_1955:
Ltmp3432:
	lea	rdx, [rip + l___unnamed_192]
	xor	edi, edi
	xor	esi, esi
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3433:
	jmp	LBB171_1796
LBB171_1956:
Ltmp3430:
	lea	rdx, [rip + l___unnamed_193]
	xor	edi, edi
	xor	esi, esi
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3431:
	jmp	LBB171_1796
LBB171_1957:
Ltmp3295:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_194]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp3296:
	jmp	LBB171_1796
LBB171_1958:
Ltmp3307:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_195]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp3308:
	jmp	LBB171_1796
LBB171_1959:
Ltmp3319:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_196]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp3320:
	jmp	LBB171_1796
LBB171_1960:
Ltmp3331:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_197]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp3332:
	jmp	LBB171_1796
LBB171_1961:
Ltmp3355:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_198]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp3356:
	jmp	LBB171_1796
LBB171_1962:
Ltmp3367:
	lea	rdi, [rip + l___unnamed_136]
	lea	rdx, [rip + l___unnamed_199]
	mov	esi, 39
	call	__ZN3std9panicking11begin_panic17h853288e601a61dd9E
Ltmp3368:
	jmp	LBB171_1796
LBB171_1963:
Ltmp3421:
	lea	rdx, [rip + l___unnamed_200]
	xor	edi, edi
	xor	esi, esi
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3422:
	jmp	LBB171_1796
LBB171_1964:
Ltmp3419:
	lea	rdx, [rip + l___unnamed_201]
	xor	edi, edi
	xor	esi, esi
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3420:
	jmp	LBB171_1796
LBB171_1965:
Ltmp3417:
	lea	rdx, [rip + l___unnamed_202]
	xor	edi, edi
	xor	esi, esi
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3418:
	jmp	LBB171_1796
LBB171_1966:
Ltmp3415:
	lea	rdx, [rip + l___unnamed_203]
	xor	edi, edi
	xor	esi, esi
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp3416:
	jmp	LBB171_1796
LBB171_1967:
Ltmp2763:
	lea	rdx, [rip + l___unnamed_204]
	mov	rsi, r14
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp2764:
	jmp	LBB171_1796
LBB171_1968:
Ltmp2819:
	lea	rdx, [rip + l___unnamed_205]
	mov	rsi, r14
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp2820:
	jmp	LBB171_1796
LBB171_1969:
Ltmp2837:
	lea	rdx, [rip + l___unnamed_206]
	mov	rsi, r14
	call	__ZN4core9panicking18panic_bounds_check17habe69d236c55e3edE
Ltmp2838:
	jmp	LBB171_1796
LBB171_1970:
Ltmp3453:
	mov	rbx, rax
	jmp	LBB171_1986
LBB171_1971:
Ltmp3458:
	mov	rbx, rax
	jmp	LBB171_1987
LBB171_1972:
Ltmp3463:
	mov	rbx, rax
	jmp	LBB171_1988
LBB171_1973:
Ltmp3468:
	mov	rbx, rax
	jmp	LBB171_1989
LBB171_1974:
Ltmp3473:
	mov	rbx, rax
	jmp	LBB171_1990
LBB171_1975:
Ltmp3439:
	mov	rbx, rax
	jmp	LBB171_1982
LBB171_1976:
Ltmp3442:
	mov	rbx, rax
	jmp	LBB171_1983
LBB171_1977:
Ltmp3445:
	mov	rbx, rax
	jmp	LBB171_1984
LBB171_1978:
Ltmp3448:
	mov	rbx, rax
	jmp	LBB171_1985
LBB171_1979:
Ltmp3429:
	mov	rbx, rax
	lea	rdi, [rsp + 1296]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
	lea	rdi, [rsp + 1320]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
	jmp	LBB171_1981
LBB171_1980:
Ltmp3436:
	mov	rbx, rax
LBB171_1981:
	lea	rdi, [rsp + 1568]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
LBB171_1982:
	lea	rdi, [rsp + 1544]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
LBB171_1983:
	lea	rdi, [rsp + 1520]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
LBB171_1984:
	lea	rdi, [rsp + 1496]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
LBB171_1985:
	lea	rdi, [rsp + 1472]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
LBB171_1986:
	lea	rdi, [rsp + 1448]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
LBB171_1987:
	lea	rdi, [rsp + 1424]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
LBB171_1988:
	lea	rdi, [rsp + 1400]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
LBB171_1989:
	lea	rdi, [rsp + 1376]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
LBB171_1990:
	lea	rdi, [rsp + 1352]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
	jmp	LBB171_1993
LBB171_1991:
Ltmp3612:
	mov	rbx, rax
	jmp	LBB171_1993
LBB171_1992:
Ltmp2486:
	mov	rbx, rax
	mov	rax, qword ptr [rsp + 1192]
	mov	qword ptr [rsp + 480], rax
	mov	rax, qword ptr [rsp + 1136]
	mov	qword ptr [rsp + 456], rax
	mov	rax, qword ptr [rsp + 1096]
	mov	qword ptr [rsp + 568], rax
	mov	rax, qword ptr [rsp + 1120]
	mov	qword ptr [rsp + 880], rax
	mov	rax, qword ptr [rsp + 1200]
	mov	qword ptr [rsp + 904], rax
	mov	rax, qword ptr [rsp + 1056]
	mov	qword ptr [rsp + 928], rax
	mov	rax, qword ptr [rsp + 1104]
	mov	qword ptr [rsp + 952], rax
	mov	rax, qword ptr [rsp + 544]
	mov	qword ptr [rsp + 616], rax
	mov	rax, qword ptr [rsp + 512]
	mov	qword ptr [rsp + 760], rax
	mov	rax, qword ptr [rsp + 1072]
	mov	qword ptr [rsp + 640], rax
	mov	rax, qword ptr [rsp + 496]
	mov	qword ptr [rsp + 784], rax
	mov	rax, qword ptr [rsp + 424]
	mov	qword ptr [rsp + 976], rax
	mov	rax, qword ptr [rsp + 408]
	mov	qword ptr [rsp + 1000], rax
	mov	rax, qword ptr [rsp + 400]
	mov	qword ptr [rsp + 1024], rax
	mov	rax, qword ptr [rsp + 376]
	mov	qword ptr [rsp + 1048], rax
	mov	rax, qword ptr [rsp + 360]
	mov	qword ptr [rsp + 664], rax
	mov	rax, qword ptr [rsp + 344]
	mov	qword ptr [rsp + 808], rax
	mov	rax, qword ptr [rsp + 312]
	mov	qword ptr [rsp + 688], rax
	mov	rax, qword ptr [rsp + 240]
	mov	qword ptr [rsp + 832], rax
	mov	rax, qword ptr [rsp + 320]
	mov	qword ptr [rsp + 712], rax
	mov	rax, qword ptr [rsp + 304]
	mov	qword ptr [rsp + 856], rax
LBB171_1993:
	lea	rdi, [rsp + 840]
	call	__ZN4core3ptr13drop_in_place17h309194917780b8ffE
	lea	rdi, [rsp + 696]
	call	__ZN4core3ptr13drop_in_place17h309194917780b8ffE
	lea	rdi, [rsp + 816]
	call	__ZN4core3ptr13drop_in_place17h309194917780b8ffE
	lea	rdi, [rsp + 672]
	call	__ZN4core3ptr13drop_in_place17h309194917780b8ffE
	lea	rdi, [rsp + 792]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
	lea	rdi, [rsp + 648]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
	lea	rdi, [rsp + 1032]
	call	__ZN4core3ptr13drop_in_place17h2fdd016196244476E
	lea	rdi, [rsp + 1008]
	call	__ZN4core3ptr13drop_in_place17h2fdd016196244476E
	lea	rdi, [rsp + 984]
	call	__ZN4core3ptr13drop_in_place17h3db3b8d7ecdc82acE
	lea	rdi, [rsp + 960]
	call	__ZN4core3ptr13drop_in_place17h3db3b8d7ecdc82acE
	lea	rdi, [rsp + 768]
	call	__ZN4core3ptr13drop_in_place17h309194917780b8ffE
	lea	rdi, [rsp + 624]
	call	__ZN4core3ptr13drop_in_place17h309194917780b8ffE
	lea	rdi, [rsp + 744]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
	lea	rdi, [rsp + 600]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
	lea	rdi, [rsp + 936]
	call	__ZN4core3ptr13drop_in_place17h2fdd016196244476E
	lea	rdi, [rsp + 912]
	call	__ZN4core3ptr13drop_in_place17h2fdd016196244476E
	lea	rdi, [rsp + 888]
	call	__ZN4core3ptr13drop_in_place17h3db3b8d7ecdc82acE
	lea	rdi, [rsp + 864]
	call	__ZN4core3ptr13drop_in_place17h3db3b8d7ecdc82acE
	lea	rdi, [rsp + 552]
	call	__ZN4core3ptr13drop_in_place17h309194917780b8ffE
	lea	rdi, [rsp + 440]
	call	__ZN4core3ptr13drop_in_place17h309194917780b8ffE
	lea	rdi, [rsp + 464]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
	lea	rdi, [rsp + 520]
	call	__ZN4core3ptr13drop_in_place17h029fd18f9b648c13E
	lea	rdi, [rsp + 1344]
	call	__ZN4core3ptr13drop_in_place17h218ae0709f4c6a07E
	mov	rdi, rbx
	call	__Unwind_Resume
	ud2
Lfunc_end119:
	.cfi_endproc
	.section	__TEXT,__gcc_except_tab
	.p2align	2
GCC_except_table171:
Lexception119:
	.byte	255
	.byte	255
	.byte	1
	.uleb128 Lcst_end119-Lcst_begin119
Lcst_begin119:
	.uleb128 Lfunc_begin119-Lfunc_begin119
	.uleb128 Ltmp2442-Lfunc_begin119
	.byte	0
	.byte	0
	.uleb128 Ltmp2442-Lfunc_begin119
	.uleb128 Ltmp2485-Ltmp2442
	.uleb128 Ltmp2486-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2487-Lfunc_begin119
	.uleb128 Ltmp2884-Ltmp2487
	.uleb128 Ltmp3612-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2885-Lfunc_begin119
	.uleb128 Ltmp2920-Ltmp2885
	.uleb128 Ltmp3473-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2921-Lfunc_begin119
	.uleb128 Ltmp2956-Ltmp2921
	.uleb128 Ltmp3468-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2957-Lfunc_begin119
	.uleb128 Ltmp2992-Ltmp2957
	.uleb128 Ltmp3463-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2993-Lfunc_begin119
	.uleb128 Ltmp3028-Ltmp2993
	.uleb128 Ltmp3458-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3029-Lfunc_begin119
	.uleb128 Ltmp3030-Ltmp3029
	.uleb128 Ltmp3453-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3030-Lfunc_begin119
	.uleb128 Ltmp3033-Ltmp3030
	.byte	0
	.byte	0
	.uleb128 Ltmp3033-Lfunc_begin119
	.uleb128 Ltmp3042-Ltmp3033
	.uleb128 Ltmp3453-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3042-Lfunc_begin119
	.uleb128 Ltmp3045-Ltmp3042
	.byte	0
	.byte	0
	.uleb128 Ltmp3045-Lfunc_begin119
	.uleb128 Ltmp3054-Ltmp3045
	.uleb128 Ltmp3453-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3054-Lfunc_begin119
	.uleb128 Ltmp3057-Ltmp3054
	.byte	0
	.byte	0
	.uleb128 Ltmp3057-Lfunc_begin119
	.uleb128 Ltmp3064-Ltmp3057
	.uleb128 Ltmp3453-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3065-Lfunc_begin119
	.uleb128 Ltmp3066-Ltmp3065
	.uleb128 Ltmp3448-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3066-Lfunc_begin119
	.uleb128 Ltmp3069-Ltmp3066
	.byte	0
	.byte	0
	.uleb128 Ltmp3069-Lfunc_begin119
	.uleb128 Ltmp3104-Ltmp3069
	.uleb128 Ltmp3448-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3105-Lfunc_begin119
	.uleb128 Ltmp3106-Ltmp3105
	.uleb128 Ltmp3445-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3106-Lfunc_begin119
	.uleb128 Ltmp3109-Ltmp3106
	.byte	0
	.byte	0
	.uleb128 Ltmp3109-Lfunc_begin119
	.uleb128 Ltmp3144-Ltmp3109
	.uleb128 Ltmp3445-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3145-Lfunc_begin119
	.uleb128 Ltmp3146-Ltmp3145
	.uleb128 Ltmp3442-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3146-Lfunc_begin119
	.uleb128 Ltmp3149-Ltmp3146
	.byte	0
	.byte	0
	.uleb128 Ltmp3149-Lfunc_begin119
	.uleb128 Ltmp3184-Ltmp3149
	.uleb128 Ltmp3442-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3185-Lfunc_begin119
	.uleb128 Ltmp3186-Ltmp3185
	.uleb128 Ltmp3439-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3186-Lfunc_begin119
	.uleb128 Ltmp3189-Ltmp3186
	.byte	0
	.byte	0
	.uleb128 Ltmp3189-Lfunc_begin119
	.uleb128 Ltmp3224-Ltmp3189
	.uleb128 Ltmp3439-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3225-Lfunc_begin119
	.uleb128 Ltmp3226-Ltmp3225
	.uleb128 Ltmp3436-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3226-Lfunc_begin119
	.uleb128 Ltmp3229-Ltmp3226
	.byte	0
	.byte	0
	.uleb128 Ltmp3229-Lfunc_begin119
	.uleb128 Ltmp3340-Ltmp3229
	.uleb128 Ltmp3436-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3341-Lfunc_begin119
	.uleb128 Ltmp3414-Ltmp3341
	.uleb128 Ltmp3429-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3562-Lfunc_begin119
	.uleb128 Ltmp2676-Ltmp3562
	.uleb128 Ltmp3612-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2887-Lfunc_begin119
	.uleb128 Ltmp3470-Ltmp2887
	.uleb128 Ltmp3473-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2923-Lfunc_begin119
	.uleb128 Ltmp3465-Ltmp2923
	.uleb128 Ltmp3468-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2959-Lfunc_begin119
	.uleb128 Ltmp3460-Ltmp2959
	.uleb128 Ltmp3463-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2995-Lfunc_begin119
	.uleb128 Ltmp3455-Ltmp2995
	.uleb128 Ltmp3458-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3031-Lfunc_begin119
	.uleb128 Ltmp3450-Ltmp3031
	.uleb128 Ltmp3453-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3067-Lfunc_begin119
	.uleb128 Ltmp3447-Ltmp3067
	.uleb128 Ltmp3448-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3107-Lfunc_begin119
	.uleb128 Ltmp3444-Ltmp3107
	.uleb128 Ltmp3445-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3147-Lfunc_begin119
	.uleb128 Ltmp3441-Ltmp3147
	.uleb128 Ltmp3442-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3187-Lfunc_begin119
	.uleb128 Ltmp3438-Ltmp3187
	.uleb128 Ltmp3439-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3227-Lfunc_begin119
	.uleb128 Ltmp3435-Ltmp3227
	.uleb128 Ltmp3436-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3343-Lfunc_begin119
	.uleb128 Ltmp3424-Ltmp3343
	.uleb128 Ltmp3429-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3602-Lfunc_begin119
	.uleb128 Ltmp3477-Ltmp3602
	.uleb128 Ltmp3612-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2899-Lfunc_begin119
	.uleb128 Ltmp2912-Ltmp2899
	.uleb128 Ltmp3473-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2935-Lfunc_begin119
	.uleb128 Ltmp2948-Ltmp2935
	.uleb128 Ltmp3468-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2971-Lfunc_begin119
	.uleb128 Ltmp2984-Ltmp2971
	.uleb128 Ltmp3463-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3007-Lfunc_begin119
	.uleb128 Ltmp3020-Ltmp3007
	.uleb128 Ltmp3458-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3043-Lfunc_begin119
	.uleb128 Ltmp3056-Ltmp3043
	.uleb128 Ltmp3453-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3432-Lfunc_begin119
	.uleb128 Ltmp3332-Ltmp3432
	.uleb128 Ltmp3436-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp3355-Lfunc_begin119
	.uleb128 Ltmp3416-Ltmp3355
	.uleb128 Ltmp3429-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2763-Lfunc_begin119
	.uleb128 Ltmp2838-Ltmp2763
	.uleb128 Ltmp3612-Lfunc_begin119
	.byte	0
	.uleb128 Ltmp2838-Lfunc_begin119
	.uleb128 Lfunc_end119-Ltmp2838
	.byte	0
	.byte	0
Lcst_end119:
	.p2align	2

	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.p2align	4, 0x90
_main:
	.cfi_startproc
	push	rbp
	.cfi_def_cfa_offset 16
	.cfi_offset rbp, -16
	mov	rbp, rsp
	.cfi_def_cfa_register rbp
	sub	rsp, 16
	mov	rcx, rsi
	movsxd	rdx, edi
	lea	rax, [rip + __ZN13numerical_lib4main17hc672f9d16e968996E]
	mov	qword ptr [rbp - 8], rax
	lea	rsi, [rip + l___unnamed_14]
	lea	rdi, [rbp - 8]
	call	__ZN3std2rt19lang_start_internal17hebefdaa8fd585aefE
	add	rsp, 16
	pop	rbp
	ret
	.cfi_endproc

	.section	__TEXT,__const
l___unnamed_2:
	.ascii	"internal error: entered unreachable code"

l___unnamed_207:
	.ascii	"/rustc/a74d1862d4d87a56244958416fd05976c58ca1a8/src/libstd/macros.rs"

	.section	__DATA,__const
	.p2align	3
l___unnamed_3:
	.quad	l___unnamed_207
	.asciz	"D\000\000\000\000\000\000\000\r\000\000\000\027\000\000"

	.section	__TEXT,__const
l___unnamed_208:
	.ascii	"/Users/yingyuhang/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.7.1/src/job.rs"

	.section	__DATA,__const
	.p2align	3
l___unnamed_6:
	.quad	l___unnamed_208
	.asciz	"]\000\000\000\000\000\000\000a\000\000\000\t\000\000"

	.section	__TEXT,__const
	.p2align	4
_str.0:
	.ascii	"attempt to add with overflow"

l___unnamed_27:
	.ascii	"assertion failed: injected && !worker_thread.is_null()"

l___unnamed_209:
	.ascii	"/rustc/a74d1862d4d87a56244958416fd05976c58ca1a8/src/libcore/macros/mod.rs"

	.section	__DATA,__const
	.p2align	3
l___unnamed_20:
	.quad	l___unnamed_209
	.asciz	"I\000\000\000\000\000\000\000\n\000\000\000\t\000\000"

	.section	__TEXT,__const
l___unnamed_19:
	.ascii	"assertion failed: slice.len() >= 8"

l___unnamed_23:
	.ascii	"assertion failed: slice.len() >= 16"

l___unnamed_210:
	.ascii	"/Users/yingyuhang/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-deque-0.7.3/src/lib.rs"

	.section	__DATA,__const
	.p2align	3
l___unnamed_1:
	.quad	l___unnamed_210
	.asciz	"b\000\000\000\000\000\000\000\232\000\000\000!\000\000"

	.section	__TEXT,__const
	.p2align	4
_str.1:
	.ascii	"attempt to subtract with overflow"

	.section	__DATA,__const
	.p2align	3
l___unnamed_4:
	.quad	l___unnamed_210
	.asciz	"b\000\000\000\000\000\000\000\341\001\000\000\035\000\000"

	.section	__TEXT,__const
	.p2align	4
_str.3:
	.ascii	"attempt to multiply with overflow"

	.p2align	3
l___unnamed_30:
	.byte	0

l___unnamed_211:
	.ascii	"/Users/yingyuhang/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.8.2/src/internal.rs"

	.section	__DATA,__const
	.p2align	3
l___unnamed_13:
	.quad	l___unnamed_211
	.asciz	"g\000\000\000\000\000\000\000,\002\000\000\037\000\000"

	.p2align	3
l___unnamed_11:
	.quad	l___unnamed_211
	.asciz	"g\000\000\000\000\000\000\000\305\001\000\000\036\000\000"

	.p2align	3
l___unnamed_12:
	.quad	l___unnamed_211
	.asciz	"g\000\000\000\000\000\000\000\374\001\000\000\036\000\000"

	.p2align	3
l___unnamed_14:
	.quad	__ZN4core3ptr13drop_in_place17h06ee8149c5c652ceE
	.quad	8
	.quad	8
	.quad	__ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h1845a91a9f9eeff5E
	.quad	__ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h1845a91a9f9eeff5E
	.quad	__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hbe63a0ac908cd1a6E

	.section	__TEXT,__const
l___unnamed_8:
	.ascii	"cannot access a Thread Local Storage value during or after destruction"

l___unnamed_212:
	.ascii	"/rustc/a74d1862d4d87a56244958416fd05976c58ca1a8/src/libstd/thread/local.rs"

	.section	__DATA,__const
	.p2align	3
l___unnamed_10:
	.quad	l___unnamed_212
	.asciz	"J\000\000\000\000\000\000\000\357\000\000\000\t\000\000"

	.p2align	3
l___unnamed_15:
	.quad	__ZN4core3ptr13drop_in_place17h06ee8149c5c652ceE
	.quad	16
	.quad	8
	.quad	__ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h1b070a2551eb2c95E
	.quad	__ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h63401d62711c8837E

	.section	__TEXT,__const
l___unnamed_24:
	.ascii	"assertion failed: mid <= len"

l___unnamed_21:
	.ascii	"assertion failed: chunk_size != 0"

l___unnamed_5:
	.ascii	"called `Option::unwrap()` on a `None` value"

	.section	__DATA,__const
	.p2align	3
l___unnamed_9:
	.quad	__ZN4core3ptr13drop_in_place17h06ee8149c5c652ceE
	.quad	0
	.quad	1
	.quad	__ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17h97b54f924eb561a9E

	.section	__TEXT,__const
l___unnamed_16:
	.ascii	"called `Result::unwrap()` on an `Err` value"

	.section	__DATA,__const
	.p2align	3
l___unnamed_17:
	.quad	__ZN4core3ptr13drop_in_place17h160fcf7d1ad69019E
	.quad	16
	.quad	8
	.quad	__ZN82_$LT$std..sys_common..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hc083bb14fb3b9e06E

	.section	__TEXT,__const
l___unnamed_213:
	.ascii	"/Users/yingyuhang/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.1/src/iter/plumbing/mod.rs"

	.section	__DATA,__const
	.p2align	3
l___unnamed_7:
	.quad	l___unnamed_213
	.asciz	"f\000\000\000\000\000\000\000\254\001\000\000\031\000\000"

	.section	__TEXT,__const
l___unnamed_214:
	.ascii	"/Users/yingyuhang/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.7.1/src/latch.rs"

	.section	__DATA,__const
	.p2align	3
l___unnamed_18:
	.quad	l___unnamed_214
	.asciz	"_\000\000\000\000\000\000\000v\000\000\000\031\000\000"

	.section	__TEXT,__const
l___unnamed_25:
	.ascii	"PoisonError { inner: .. }"

	.section	__DATA,__const
	.p2align	3
l___unnamed_26:
	.quad	l___unnamed_208
	.asciz	"]\000\000\000\000\000\000\000v\000\000\000\024\000\000"

	.section	__TEXT,__const
l___unnamed_215:
	.ascii	"/Users/yingyuhang/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.1/src/slice/mod.rs"

	.section	__DATA,__const
	.p2align	3
l___unnamed_22:
	.quad	l___unnamed_215
	.asciz	"^\000\000\000\000\000\000\000v\002\000\000#\000\000"

	.p2align	3
l___unnamed_28:
	.quad	__ZN4core3ptr13drop_in_place17h06ee8149c5c652ceE
	.quad	16
	.quad	8
	.quad	__ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h6a868cc07e2ef292E

	.section	__TEXT,__const
l___unnamed_216:
	.ascii	"src/lib.rs"

	.section	__DATA,__const
	.p2align	3
l___unnamed_134:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\0001\000\000\000\034\000\000"

	.p2align	3
l___unnamed_135:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\0001\000\000\000\027\000\000"

	.p2align	3
l___unnamed_139:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000{\000\000\000\034\000\000"

	.p2align	3
l___unnamed_140:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000{\000\000\000\027\000\000"

	.p2align	3
l___unnamed_141:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000u\001\000\000\034\000\000"

	.p2align	3
l___unnamed_142:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000u\001\000\000\027\000\000"

	.p2align	3
l___unnamed_126:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000~\001\000\000\025\000\000"

	.p2align	3
l___unnamed_143:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\275\001\000\000\034\000\000"

	.p2align	3
l___unnamed_144:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\275\001\000\000\027\000\000"

	.p2align	3
l___unnamed_145:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\306\001\000\000\025\000\000"

	.p2align	3
l___unnamed_146:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\345\002\000\000\034\000\000"

	.p2align	3
l___unnamed_147:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\345\002\000\000\027\000\000"

	.p2align	3
l___unnamed_127:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\356\002\000\000\025\000\000"

	.p2align	3
l___unnamed_148:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000-\003\000\000\034\000\000"

	.p2align	3
l___unnamed_149:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000-\003\000\000\027\000\000"

	.p2align	3
l___unnamed_150:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\0006\003\000\000\025\000\000"

	.p2align	3
l___unnamed_151:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\223\003\000\000\034\000\000"

	.p2align	3
l___unnamed_152:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\223\003\000\000\027\000\000"

	.p2align	3
l___unnamed_153:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\234\003\000\000\025\000\000"

	.section	__TEXT,__const
l___unnamed_154:
	.ascii	"The lengths of input arrays must be same"

	.section	__DATA,__const
	.p2align	3
l___unnamed_155:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\313\003\000\000\r\000\000"

	.p2align	3
l___unnamed_156:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\321\003\000\000\034\000\000"

	.p2align	3
l___unnamed_157:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\321\003\000\000\027\000\000"

	.p2align	3
l___unnamed_158:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000#\004\000\000\t\000\000"

	.p2align	3
l___unnamed_159:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000)\004\000\000\034\000\000"

	.p2align	3
l___unnamed_160:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000)\004\000\000\027\000\000"

	.p2align	3
l___unnamed_161:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000C\005\000\000\t\000\000"

	.p2align	3
l___unnamed_162:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000H\005\000\000\034\000\000"

	.p2align	3
l___unnamed_163:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000H\005\000\000\027\000\000"

	.p2align	3
l___unnamed_129:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000S\005\000\000\037\000\000"

	.p2align	3
l___unnamed_128:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000S\005\000\000&\000\000"

	.p2align	3
l___unnamed_130:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000S\005\000\000\025\000\000"

	.p2align	3
l___unnamed_164:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\226\005\000\000\t\000\000"

	.p2align	3
l___unnamed_165:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\233\005\000\000\034\000\000"

	.p2align	3
l___unnamed_166:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\233\005\000\000\027\000\000"

	.p2align	3
l___unnamed_167:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\246\005\000\000\037\000\000"

	.p2align	3
l___unnamed_204:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\246\005\000\000&\000\000"

	.p2align	3
l___unnamed_168:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\246\005\000\000\025\000\000"

	.p2align	3
l___unnamed_169:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\262\006\000\000\t\000\000"

	.p2align	3
l___unnamed_170:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\267\006\000\000\034\000\000"

	.p2align	3
l___unnamed_171:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\267\006\000\000\027\000\000"

	.p2align	3
l___unnamed_132:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\302\006\000\000\037\000\000"

	.p2align	3
l___unnamed_131:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\302\006\000\000&\000\000"

	.p2align	3
l___unnamed_133:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\302\006\000\000\025\000\000"

	.p2align	3
l___unnamed_172:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\005\007\000\000\t\000\000"

	.p2align	3
l___unnamed_173:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\n\007\000\000\034\000\000"

	.p2align	3
l___unnamed_174:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\n\007\000\000\027\000\000"

	.p2align	3
l___unnamed_175:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\025\007\000\000\037\000\000"

	.p2align	3
l___unnamed_205:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\025\007\000\000&\000\000"

	.p2align	3
l___unnamed_176:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\025\007\000\000\025\000\000"

	.p2align	3
l___unnamed_177:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000F\007\000\000\t\000\000"

	.p2align	3
l___unnamed_178:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000K\007\000\000\034\000\000"

	.p2align	3
l___unnamed_179:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000K\007\000\000\027\000\000"

	.p2align	3
l___unnamed_180:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000V\007\000\000\037\000\000"

	.p2align	3
l___unnamed_206:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000V\007\000\000&\000\000"

	.p2align	3
l___unnamed_181:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000V\007\000\000\025\000\000"

	.section	__TEXT,__const
l___unnamed_136:
	.ascii	"The length of input arrays must be same"

	.section	__DATA,__const
	.p2align	3
l___unnamed_194:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\323\007\000\000\t\000\000"

	.p2align	3
l___unnamed_195:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\336\007\000\000\t\000\000"

	.p2align	3
l___unnamed_182:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\351\007\000\000\t\000\000"

	.p2align	3
l___unnamed_183:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\365\007\000\000\t\000\000"

	.p2align	3
l___unnamed_184:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\001\b\000\000\t\000\000"

	.p2align	3
l___unnamed_185:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\f\b\000\000\t\000\000"

	.p2align	3
l___unnamed_186:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\030\b\000\000\t\000\000"

	.p2align	3
l___unnamed_187:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000#\b\000\000\t\000\000"

	.p2align	3
l___unnamed_188:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\0000\b\000\000\t\000\000"

	.p2align	3
l___unnamed_189:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000;\b\000\000\t\000\000"

	.p2align	3
l___unnamed_190:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000G\b\000\000\t\000\000"

	.p2align	3
l___unnamed_191:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000R\b\000\000\t\000\000"

	.p2align	3
l___unnamed_196:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000]\b\000\000\t\000\000"

	.p2align	3
l___unnamed_197:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000h\b\000\000\t\000\000"

	.p2align	3
l___unnamed_198:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000s\b\000\000\t\000\000"

	.p2align	3
l___unnamed_199:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\200\b\000\000\t\000\000"

	.p2align	3
l___unnamed_137:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\215\b\000\000\t\000\000"

	.p2align	3
l___unnamed_138:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\232\b\000\000\t\000\000"

	.p2align	3
l___unnamed_200:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\246\b\000\000\026\000\000"

	.p2align	3
l___unnamed_201:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\260\b\000\000\026\000\000"

	.p2align	3
l___unnamed_202:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\272\b\000\000\026\000\000"

	.p2align	3
l___unnamed_203:
	.quad	l___unnamed_216
	.asciz	"\n\000\000\000\000\000\000\000\304\b\000\000\026\000\000"

	.section	__TEXT,__const
l___unnamed_217:
	.ascii	"--------------------------------MKL---------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_29:
	.quad	l___unnamed_217
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_218:
	.byte	10

	.section	__DATA,__const
	.p2align	3
l___unnamed_31:
	.quad	l___unnamed_218
	.asciz	"\001\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_219:
	.ascii	"--------------------------------f32swap-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_32:
	.quad	l___unnamed_219
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_33:
	.quad	l___unnamed_30
	.space	8
	.quad	l___unnamed_218
	.asciz	"\001\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_220:
	.ascii	"--------------------------------f64swap-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_34:
	.quad	l___unnamed_220
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_221:
	.ascii	"--------------------------------for_loop_sum------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_35:
	.quad	l___unnamed_221
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_222:
	.ascii	"src/main.rs"

	.section	__DATA,__const
	.p2align	3
l___unnamed_106:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\225\000\000\000\023\000\000"

	.section	__TEXT,__const
l___unnamed_223:
	.ascii	"--------------------------------f32sum-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_36:
	.quad	l___unnamed_223
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_224:
	.ascii	"--------------------------------f64sum-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_37:
	.quad	l___unnamed_224
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_225:
	.ascii	"--------------------------------u8sum-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_38:
	.quad	l___unnamed_225
	.asciz	"O\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_226:
	.ascii	"--------------------------------u16sum-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_39:
	.quad	l___unnamed_226
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_227:
	.ascii	"--------------------------------u32sum-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_40:
	.quad	l___unnamed_227
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_228:
	.ascii	"--------------------------------u64sum-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_41:
	.quad	l___unnamed_228
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_229:
	.ascii	"--------------------------------i8sum-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_42:
	.quad	l___unnamed_229
	.asciz	"O\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_230:
	.ascii	"--------------------------------i16sum-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_43:
	.quad	l___unnamed_230
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_231:
	.ascii	"--------------------------------i32sum-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_44:
	.quad	l___unnamed_231
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_232:
	.ascii	"--------------------------------i64sum-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_45:
	.quad	l___unnamed_232
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_233:
	.ascii	"--------------------------------usizesum----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_46:
	.quad	l___unnamed_233
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_234:
	.ascii	"--------------------------------for_loop_dotproduct-----------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_47:
	.quad	l___unnamed_234
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_108:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\355\000\000\000\023\000\000"

	.p2align	3
l___unnamed_48:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\355\000\000\000\035\000\000"

	.section	__TEXT,__const
l___unnamed_235:
	.ascii	"--------------------------------f32dot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_49:
	.quad	l___unnamed_235
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_236:
	.ascii	"--------------------------------f64dot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_50:
	.quad	l___unnamed_236
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_237:
	.ascii	"--------------------------------u8dot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_51:
	.quad	l___unnamed_237
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_238:
	.ascii	"--------------------------------u16dot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_52:
	.quad	l___unnamed_238
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_239:
	.ascii	"--------------------------------u32dot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_53:
	.quad	l___unnamed_239
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_240:
	.ascii	"--------------------------------u64dot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_54:
	.quad	l___unnamed_240
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_241:
	.ascii	"--------------------------------i8dot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_55:
	.quad	l___unnamed_241
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_242:
	.ascii	"--------------------------------i16dot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_56:
	.quad	l___unnamed_242
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_243:
	.ascii	"--------------------------------i32dot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_57:
	.quad	l___unnamed_243
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_244:
	.ascii	"--------------------------------i64dot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_58:
	.quad	l___unnamed_244
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_245:
	.ascii	"--------------------------------usizedot----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_59:
	.quad	l___unnamed_245
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_246:
	.ascii	"--------------------------------forloop_EuclideanNorm---------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_60:
	.quad	l___unnamed_246
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_107:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000J\001\000\000\023\000\000"

	.section	__TEXT,__const
l___unnamed_247:
	.ascii	"--------------------------------f32nrm2-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_61:
	.quad	l___unnamed_247
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_248:
	.ascii	"--------------------------------f64nrm2-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_62:
	.quad	l___unnamed_248
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_249:
	.ascii	"--------------------------------for_loop_add------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_63:
	.quad	l___unnamed_249
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_109:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000f\001\000\000\026\000\000"

	.p2align	3
l___unnamed_110:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000f\001\000\000 \000\000"

	.section	__TEXT,__const
l___unnamed_250:
	.ascii	"--------------------------------f32add------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_64:
	.quad	l___unnamed_250
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_251:
	.ascii	"--------------------------------f64add------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_65:
	.quad	l___unnamed_251
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_252:
	.ascii	"--------------------------------for_loop_sub------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_66:
	.quad	l___unnamed_252
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_111:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\200\001\000\000\026\000\000"

	.p2align	3
l___unnamed_112:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\200\001\000\000 \000\000"

	.section	__TEXT,__const
l___unnamed_253:
	.ascii	"--------------------------------f32sub------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_67:
	.quad	l___unnamed_253
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_254:
	.ascii	"--------------------------------f64sub------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_68:
	.quad	l___unnamed_254
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_255:
	.ascii	"--------------------------------for_loop_pro------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_69:
	.quad	l___unnamed_255
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_113:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\234\001\000\000\026\000\000"

	.p2align	3
l___unnamed_114:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\234\001\000\000 \000\000"

	.section	__TEXT,__const
l___unnamed_256:
	.ascii	"--------------------------------f32pro------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_70:
	.quad	l___unnamed_256
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_257:
	.ascii	"--------------------------------f64pro------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_71:
	.quad	l___unnamed_257
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_258:
	.ascii	"--------------------------------for_loop_div------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_72:
	.quad	l___unnamed_258
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_115:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\267\001\000\000\026\000\000"

	.p2align	3
l___unnamed_116:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\267\001\000\000 \000\000"

	.section	__TEXT,__const
l___unnamed_259:
	.ascii	"--------------------------------f32div------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_73:
	.quad	l___unnamed_259
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_260:
	.ascii	"--------------------------------f64div------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_74:
	.quad	l___unnamed_260
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_261:
	.ascii	"--------------------------------for_loop_mod------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_75:
	.quad	l___unnamed_261
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_117:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\324\001\000\000\026\000\000"

	.p2align	3
l___unnamed_118:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\324\001\000\000 \000\000"

	.section	__TEXT,__const
l___unnamed_262:
	.ascii	"--------------------------------f32mod------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_76:
	.quad	l___unnamed_262
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_263:
	.ascii	"--------------------------------f64mod------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_77:
	.quad	l___unnamed_263
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_264:
	.ascii	"--------------------------------for_loop_sin------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_78:
	.quad	l___unnamed_264
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_119:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\362\001\000\000\026\000\000"

	.section	__TEXT,__const
l___unnamed_265:
	.ascii	"--------------------------------f32sin------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_79:
	.quad	l___unnamed_265
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_266:
	.ascii	"--------------------------------f64sin------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_80:
	.quad	l___unnamed_266
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_267:
	.ascii	"--------------------------------for_loop_cos------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_81:
	.quad	l___unnamed_267
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_120:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\017\002\000\000\026\000\000"

	.section	__TEXT,__const
l___unnamed_268:
	.ascii	"--------------------------------f32cos------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_82:
	.quad	l___unnamed_268
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_269:
	.ascii	"--------------------------------f64cos------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_83:
	.quad	l___unnamed_269
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_270:
	.ascii	"--------------------------------for_loop_tan------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_84:
	.quad	l___unnamed_270
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_121:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000-\002\000\000\026\000\000"

	.section	__TEXT,__const
l___unnamed_271:
	.ascii	"--------------------------------f32tan------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_85:
	.quad	l___unnamed_271
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_272:
	.ascii	"--------------------------------f64tan------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_86:
	.quad	l___unnamed_272
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_273:
	.ascii	"--------------------------------for_loop_cot------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_87:
	.quad	l___unnamed_273
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_122:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000I\002\000\000\026\000\000"

	.section	__TEXT,__const
l___unnamed_274:
	.ascii	"--------------------------------f32cot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_88:
	.quad	l___unnamed_274
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_275:
	.ascii	"--------------------------------f64cot------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_89:
	.quad	l___unnamed_275
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_276:
	.ascii	"--------------------------------for_loop_exp------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_90:
	.quad	l___unnamed_276
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_123:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000d\002\000\000\026\000\000"

	.section	__TEXT,__const
l___unnamed_277:
	.ascii	"--------------------------------f32exp------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_91:
	.quad	l___unnamed_277
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_278:
	.ascii	"--------------------------------f64exp------------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_92:
	.quad	l___unnamed_278
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_279:
	.ascii	"--------------------------------f32scal-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_93:
	.quad	l___unnamed_279
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_192:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000}\002\000\000\031\000\000"

	.section	__TEXT,__const
l___unnamed_280:
	.ascii	"--------------------------------f64scal-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_94:
	.quad	l___unnamed_280
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_193:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\206\002\000\000\031\000\000"

	.section	__TEXT,__const
l___unnamed_281:
	.ascii	"--------------------------------f32axpy-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_95:
	.quad	l___unnamed_281
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_282:
	.ascii	"--------------------------------f64axpy-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_96:
	.quad	l___unnamed_282
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_283:
	.ascii	"--------------------------------f32copy-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_97:
	.quad	l___unnamed_283
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_284:
	.ascii	"--------------------------------f64copy-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_98:
	.quad	l___unnamed_284
	.asciz	"Q\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_285:
	.ascii	"--------------------------------for_loop_rot------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_99:
	.quad	l___unnamed_285
	.asciz	"Q\000\000\000\000\000\000"

	.p2align	3
l___unnamed_124:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\262\002\000\000\034\000\000"

	.p2align	3
l___unnamed_125:
	.quad	l___unnamed_222
	.asciz	"\013\000\000\000\000\000\000\000\262\002\000\000,\000\000"

	.section	__TEXT,__const
l___unnamed_286:
	.ascii	"--------------------------------f32rot-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_100:
	.quad	l___unnamed_286
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_287:
	.ascii	"--------------------------------f64rot-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_101:
	.quad	l___unnamed_287
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_288:
	.ascii	"--------------------------------f32max-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_102:
	.quad	l___unnamed_288
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_289:
	.ascii	"--------------------------------f64max-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_103:
	.quad	l___unnamed_289
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_290:
	.ascii	"--------------------------------f32min-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_104:
	.quad	l___unnamed_290
	.asciz	"P\000\000\000\000\000\000"

	.section	__TEXT,__const
l___unnamed_291:
	.ascii	"--------------------------------f64min-----------------------------------------\n"

	.section	__DATA,__const
	.p2align	3
l___unnamed_105:
	.quad	l___unnamed_291
	.asciz	"P\000\000\000\000\000\000"


.subsections_via_symbols
